<?php

/**
 *
 * This file handles the connection and actions for basEmployee table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 15/03/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU Development Team
 *
 * \b Copyright \n
 * Copyright (c) 2005-2007 SOLIS - Cooperativa de Soluções Livres \n
 * Copyright (c) 2005-2007 UNIVATES - Centro Universitario \n
 *
 * \b License \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html )
 *
 * \b History \n
 * See: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdEmployeeList extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($employeeTypeId)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:register:wageData';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( null ),
                          new MGridColumn( _M('Person id', $module), 'right', true, null, true, null, true ),
                          new MGridColumn( _M('Name', $module),      'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Branch', $module ),   'center',  true, null, true, null, true ),
                          new MGridColumn( _M('Account', $module ),  'center',  true, null, true, null, true ),
                          new MGridColumn( _M('Salary', $module ),   'center',  true, null, true, null, true ),
                        );

        $opts = array('function'   => 'update',
                      'location'   => 'employeeList',
                      'employeeId' => '%0%');
        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );
        $opts = array('function'   => 'delete',
                      'location'   => 'employeeList',
                      'employeeId' => '%0%',
                      'event'=>'tbBtnDelete_click');
        $href_delete = $MIOLO->getActionURL( $module, $home, null, $opts );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
/*        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts); */
        parent::__construct( null, $columns, $url, 0, 0, 'gridEmployeeList' );

        $this->setIsScrollable();

        $this->addActionUpdate( $href_edit );

        if ( INCREASE_SECURITY_LEVEL == 'NO' )
        {
            $this->addActionDelete( $href_delete );
        }

        $this->eventHandler();

    }

}

?>
