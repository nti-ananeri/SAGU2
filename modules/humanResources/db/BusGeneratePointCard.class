<?php
/**
 *
 * This file handles the connection and actions for siga database
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 16/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU Development Team
 *
 * \b Copyright \n
 * Copyright (c) 2005-2007 SOLIS - Cooperativa de Soluções Livres \n
 * Copyright (c) 2005-2007 UNIVATES - Centro Universitario \n
 *
 * \b License \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html )
 *
 * \b History \n
 * See: http://sagu.solis.coop.br   
 *
 **/

/**
 * Class to manipulate the basEmployee table
 **/
class BusinessHumanResourcesBusGeneratePointCard extends Business
{

    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'basic' : $module;

        return $MIOLO->getDatabase($module);
    }


    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase2($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'siga' : $module;

        return $MIOLO->getDatabase($module);
    }

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getData($data)
    {
        $sql = 'SELECT A.RA_CRACHA,
                       A.RA_NOME,
                       B.i3_desc
                FROM sra010 A, si3010 B
                WHERE A.RA_CC = B.I3_CUSTO ';

        if ( strlen((string)$data->personId) > 0 )
        {
            $where .= ' TO_NUMBER(CASE WHEN TRIM(A.RA_CRACHA) = \'\' THEN \'0\' ELSE A.RA_CRACHA END,\'9999999999\') IN ( ' . $data->personId . ') AND';
        }
    

        if ( strlen((string)$data->professorId) > 0 ||  strlen((string)$data->employeeId) > 0 || strlen((string)$data->traineeId) > 0)
        {
            if ( strlen((string)$data->professorId) > 0 )
            {
                $where1 .= '  or RA_SINDICA = \'02\' or RA_SINDICA = \'03\' ';
            }

            if ( strlen((string)$data->employeeId) > 0 )
            {
                $where1 .= '  or RA_SINDICA = \'01\' ';
            }

            if ( strlen((string)$data->traineeId) > 0 )
            {
                $where1 .= '  or RA_SINDICA = \'\' ';
            }
            
            $where .= ' ( ' . substr($where1, 4) . ' ) ';
        }
        
        if ( strlen((string)$data->normalId) > 0 )
        {
            $where2 .= '  or RA_SITFOLH = \'\' ';
        }
        
        if ( strlen((string)$data->vacationId) > 0 )
        {
            $where2 .= '  or RA_SITFOLH = \'F\' ';
        }

        if ( strlen((string)$data->dismissedId) > 0 )
        {
            $where2 .= '  or RA_SITFOLH = \'D\' ';
        }
        
        if ( strlen((string)$data->movedAwayId) > 0 )
        {
            $where2 .= '  or RA_SITFOLH = \'A\' ';
        }
    
        if ( strlen((string)$data->contractId) > 0 )
        {
            $where2 .= '  and RA_VCTOEXP >= TO_DATE(\'' . $data->date . '\', \'' . MASK_DATE . '\') ';
        }
        
        if ( strlen((string)$where2) > 0 )
        {
            $where .= ' AND ( ' . substr($where2, 5) . ' ) ';
        }


        unset($result);
        if ( strlen((string)$where) > 0 )
        {
            $sql   .=  ' AND ' . $where .
                       ' GROUP BY A.RA_CRACHA,
                                  A.RA_NOME,
                                  B.I3_DESC
                         HAVING B.I3_DESC <> \'\' AND
                                A.RA_CRACHA <> \'\'
                         ORDER BY A.RA_NOME';
            $db     = $this->getDatabase2();           
            $result = $db->query($sql);
            //$db->close();
        }
        
        return $result;
    }
    
    
}

?>
