<?php
/**
 *
 * This file handles the connection and actions for basEmployee table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 20/03/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU Development Team
 *
 * \b Copyright \n
 * Copyright (c) 2005-2007 SOLIS - Cooperativa de Soluções Livres \n
 * Copyright (c) 2005-2007 UNIVATES - Centro Universitario \n
 *
 * \b License \n
 * Licensed under GPLv2 (for further details read the COPYING file or http://www.gnu.org/licenses/gpl.html )
 *
 * \b History \n
 * See: http://sagu.solis.coop.br   
 *
 **/

/**
 * Class to manipulate the basEmployee table
 **/
class BusinessHumanResourcesBusPayroll extends Business
{

    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'basic' : $module;

        return $MIOLO->getDatabase($module);
    }

    /**
     * Do a search on the database table handled by the class
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getTotal($total)
    {
    	foreach ( $total as $value )
    	{
    		if ( $value > 0 )
    		{
    			$sum .= ' + ' . $value;
    		}
    	}

    	$where = substr($sum, 3);

        $sql = 'SELECT ';

        unset($result);
        if ( strlen((string)$where) > 0 )
        {
            $sql   .= $where;
            $db     = $this->getDatabase();
            $result = $db->query(SAGU::prepare($sql, null));
            //$db->close();
        }

        return $result[0][0];
    }

    /**
     * Get the name of the default company
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getDefaultCompanyName()
    {
        $sql   = 'SELECT name
                  FROM basCompanyConf';
                
        $where = ' WHERE companyId = ' . DEFAULT_COMPANY_CONF ;
                
        $sql   .= $where;
        $db     = $this->getDatabase();
        $result = $db->query($sql, null);

        return $result[0][0];
    }
    
    /**
     * Get the description of CPF
     *
     * @param $filters (object): Search filters
     *
     * @return (array): An array containing the search results
     **/
    public function getCpfDescription()
    {
        $sql   = 'SELECT name
                  FROM basDocumentType ';
                
        $where = ' WHERE documentTypeId = ' . CPF_CODE ;
                
        $sql   .= $where;
        $db     = $this->getDatabase();
        $result = $db->query($sql, null);

        return $result[0][0];
    }


}

?>
