<?php
/**
 *
 * This file handles the connection and actions for acdEnroll table
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 08/02/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/


/**
 * Class to manipulate the acdEnroll table
 **/
class BusinessAcademicBusLearningPeriodSchedule extends Business
{

    var $db;

    function BusinessAcademicBusLearningPeriodSchedule()
    {
        $this->db = $this->getDatabase();
    }

    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'academic' : $module;

        return $MIOLO->getDatabase($module);
    }

    function getSchedules($periodId)
    {
        $sql = '    SELECT J.turnId,
                           J.description,
                           F.weekDayId,
                           F.description,
                           M.courseId,
                           C.turnId,
                           M.shortName,
                           N.description,
                           D.shortname,
                           G.room || \'-\' || G.building,
                           I.name,
                           TO_CHAR(E.beginDate, \''. MASK_DATE .'\'),
                           TO_CHAR(E.endDate, \''. MASK_DATE .'\'),
                           TO_CHAR(E.beginHour, \''. MASK_TIME .'\'),
                           TO_CHAR(E.endHour, \''. MASK_TIME .'\')
                      FROM acdGroup A
                INNER JOIN acdSchedule B
                        ON (B.groupId = A.groupId)
                INNER JOIN acdCurriculum C
                        ON (C.curriculumId = A.curriculumId)
                INNER JOIN acdCurricularComponent D
                        ON (D.curricularComponentId = C.curricularComponentId AND
                            D.curricularComponentVersion = C.curricularComponentVersion)
                INNER JOIN acdScheduleLearningPeriod E
                        ON (E.scheduleLearningPeriodId = B.scheduleLearningPeriodId)
                INNER JOIN basWeekDay F
                        ON (F.weekDayId = B.weekDayId)
                 LEFT JOIN insPhysicalResource G
                        ON (G.physicalResourceId = B.physicalResourceId AND
                            G.physicalResourceVersion = B.physicalResourceVersion)
                INNER JOIN acdScheduleProfessor H
                        ON (H.scheduleId = B.scheduleId)
                INNER JOIN basPhysicalPersonProfessor I
                        ON (I.personId = H.professorId)
                INNER JOIN basTurn J
                        ON (J.turnId = E.turnId)
                INNER JOIN basUnit K
                        ON (K.unitId = B.unitId)
                INNER JOIN acdLearningPeriod L
                        ON (L.learningPeriodId = A.learningPeriodId AND
                            L.periodId = ?)
                INNER JOIN acdCourse M
                        ON (M.courseId = C.courseId)
                INNER JOIN basTurn N
                        ON (N.turnId = C.turnId)
                     WHERE L.periodId = ?
                       AND M.formationLevelId = ' . GRADUATION_FORMATION_LEVEL_ID . '
                  ORDER BY J.turnId, F.weekDayId, M.courseId, C.turnId, D.name';

        $args = array (
                        $periodId,
                        $periodId
                      );

        $result = $this->db->query(SAGU::prepare($sql,$args));

        return $result;
    }

    

    

}

?>
