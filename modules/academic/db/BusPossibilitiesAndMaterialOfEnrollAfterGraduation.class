<?php
/**
 *
 * This file handles the connection and actions for basCenter table
 *
 * @author Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 21/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br
 *
 **/

/**
 * Class to manipulate the basCenter table
 **/
class BusinessAcademicBusPossibilitiesAndMaterialOfEnrollAfterGraduation extends Business
{

    /**
     * Make a connection to the database
     *
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic', 'sagu');
        $module = is_null($module) ? 'academic' : $module;

        return $MIOLO->getDatabase($module);
    }

    public function possibilitiesOfEnroll($dataPos)
    {
       $MIOLO = MIOLO::getInstance();
       $module = MIOLO::getCurrentModule();

       $db  = $this->getDatabase();

       $sql = '   SELECT A.curricularComponentId,
                         B.name as curricularComponentName,
                         B.academicNumberHours
                    FROM acdCurriculum A
              INNER JOIN acdCurricularComponent B
                      ON (A.curricularComponentId = B.curricularComponentId)
                   WHERE A.courseId = ? AND
                         A.courseVersion = ?
                ORDER BY A.curricularComponentId';

        $args = array( $dataPos->courseId,
                       $dataPos->courseVersion);

        $result = $db->query( SAGU::prepare($sql, $args) );

        return $result;
    }

    public function contractPersonsCourse($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $db  = $this->getDatabase();

        $sql = 'SELECT personId
                  FROM acdContract 
                 WHERE courseId = ? AND 
                       courseVersion = ?';

        $args = array( $filters->courseId,
                       $filters->courseVersion);

        $result = $db->query( SAGU::prepare($sql, $args) );

        return $result;
    }
}
?>
