<?php
/**
 *
 * This file handles the connection and actions for acdContract table
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 * @author Rudi Uhrig Neto [rudi@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 30/08/2005
 * Class edited on 15/10/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Class to manipulate the acdContract table
 **/
class BusinessAcademicBusStatements extends Business
{

    private $db;
    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'academic' : $module;

        return $MIOLO->getDatabase($module);
    }

    public function __construct ( )
    {
        $this->db = $this->getDatabase();
    }
    
    public function verifyIsEnrolled ( $contractId, $periodId = null )
    {
        $sql = '
        SELECT 
            count(*) > 0 
        FROM
            acdEnroll A INNER JOIN
            acdGroup B ON ( A.groupId = B.groupId ) INNER JOIN
            acdLearningPeriod C ON ( C.learningPeriodId = B.learningPeriodId )
        WHERE
            A.contractId = '. $contractId;

        if ( strlen((string)$periodId) > 0 )
        {
            $sql .= ' AND C.periodId = \''. $periodId . '\'';
        }
        else
        {
            $sql .= ' AND C.periodId = \'' . CURRENT_PERIOD_ID . '\'';
        }

        $result = $this->db->query($sql);
        return $result[0][0];
    }

    public function verifyCompletion ( $contractId )
    {
        $sql = '
        SELECT 
            count(*) > 0
        FROM
            acdMovementContract A
        WHERE
            A.contractId = '. $contractId .' 
        AND A.stateContractId IN ('.STATE_CONTRACT_ID_CONCLUSION_ALL_CURRICULAR_COMPONENT.') ';

        $result = $this->db->query($sql);
        return $result[0][0];
    }
}

?>
