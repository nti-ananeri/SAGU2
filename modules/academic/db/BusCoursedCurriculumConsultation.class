<?php
/**
 *
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 05/07/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Class to manipulate the basCountry table
 **/
class BusinessAcademicBusCoursedCurriculumConsultation extends Business
{

    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic', 'sagu');
        $module = is_null($module) ? 'academic' : $module;

        return $MIOLO->getDatabase($module);
    }

    /**
     * List the coursed curricular components filtered by course, course version, turn, unit and period
     *
     **/
    public function listCoursedCurriculum($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $db = $this->getDatabase();
        
        $args = array ( $data->courseId,
                        $data->courseVersion,
                        $data->unitId,
                        $data->turnId );
                        
        $sql = 'SELECT A.curriculumId,
                       A.curricularComponentId, 
                       A.curricularComponentVersion,
                       B.name,
                       A.semester
                  FROM acdcurriculum A
            INNER JOIN acdCurricularComponent B
                    ON (B.curricularComponentId = A.curricularComponentId AND
                        B.curricularComponentVersion = A.curricularComponentVersion)
                 WHERE A.curriculumtypeid in (' . CURRICULUM_TYPE_NON_OPTIONAL . ') 
                   AND A.courseid = ? 
                   AND A.courseversion = ? 
                   AND A.unitid = ? 
                   AND A.turnid = ?
              ORDER BY A.semester, A.curriculumId';
                   
        $curriculums = $db->query(SAGU::prepare($sql, $args));
        
        if (count($curriculums) > 0)
        {
            foreach ($curriculums as $curriculum)
            {
                list (  $curriculumId,
                        $curricularComponentId,
                        $curricularComponentVersion,
                        $curricularComponentName,
                        $semester   ) = $curriculum;
                
                if ($data->currCompStatus == 1)
                {
                    $acceptedStatus = ENROLL_STATUS_APPR_OR_EXC . ',' . ENROLL_STATUS_ENROLLED;
                }
                else
                {
                    $acceptedStatus = ENROLL_STATUS_APPR_OR_EXC;
                }
                
                $sql = 'SELECT count(*) 
                          FROM acdEnroll A
                    INNER JOIN acdContract B
                            ON (B.contractId = A.contractId)
                         WHERE A.curriculumId = ?
                           AND A.statusId IN (' . $acceptedStatus . ')
                           AND B.courseId = ?
                           AND B.courseVersion = ?
                           AND B.unitId = ?
                           AND B.turnId = ? ';
                unset($args);
                $args[] = $curriculumId;
                $args[] = $data->courseId;
                $args[] = $data->courseVersion;
                $args[] = $data->unitId;
                $args[] = $data->turnId;
                           
                if ($data->pupilStatus == 0)
                {
                    $args[] = $data->periodId;
                    $args[] = $data->courseId;
                    $args[] = $data->courseVersion;
                    $args[] = $data->turnId;
                    $args[] = $data->unitId;
                    
                    $sql .= '        AND B.contractId IN (SELECT A.contractId
                                                          FROM acdEnroll A
                                                    INNER JOIN acdGroup B
                                                            ON (B.groupId = A.groupId)
                                                    INNER JOIN acdLearningPeriod C
                                                            ON (C.learningPeriodId = B.learningPeriodId)
                                                    INNER JOIN acdContract D
                                                            ON (D.contractId = A.contractId)
                                                         WHERE C.periodId = ?
                                                           AND D.courseId = ?
                                                           AND D.courseVersion = ?
                                                           AND D.turnId = ?
                                                           AND D.unitId = ?) ';
                }
                                           
                $totalPupils = $db->query(SAGU::prepare($sql, $args));
                $totalPupils = $totalPupils[0][0];
                
                $return[] = array(  $curriculumId, 
                                    $curricularComponentId . '(' . $curricularComponentVersion . ')',
                                    $curricularComponentName, 
                                    $semester, 
                                    $totalPupils    );
            }
        }
                   
        return $return;
    } 
    
    function listCoursedCurriculumPupils($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
                
        $db = $this->getDatabase();
        
        if ($data->currCompStatus == 1)
        {
            $acceptedStatus = ENROLL_STATUS_APPR_OR_EXC . ',' . ENROLL_STATUS_ENROLLED;
        }
        else
        {
            $acceptedStatus = ENROLL_STATUS_APPR_OR_EXC;
        }
        
        $sql = 'SELECT A.enrollId,
                       B.personId,
                       C.name,
                       C.residentialPhone,
                       C.workPhone,
                       C.cellPhone,
                       A.groupId,
                       D.curriculumId,
                       E.periodId
                  FROM acdEnroll A
            INNER JOIN acdContract B
                    ON (B.contractId = A.contractId)
            INNER JOIN ONLY basPhysicalPersonStudent C
                    ON (C.personId = B.personId)
            INNER JOIN acdGroup D
                    ON (D.groupId = A.groupId)
            INNER JOIN acdLearningPeriod E
                    ON (E.learningPeriodId = D.learningPeriodId)
                 WHERE A.curriculumId = ?
                   AND A.statusId IN (' . $acceptedStatus . ')
                   AND B.courseId = ?
                   AND B.courseVersion = ?
                   AND B.unitId = ?
                   AND B.turnId = ? ';
        unset($args);
        $args[] = $data->curriculumId;
        $args[] = $data->courseId;
        $args[] = $data->courseVersion;
        $args[] = $data->unitId;
        $args[] = $data->turnId;
                    
        if ($data->pupilStatus == 0)
        {
            $args[] = $data->periodId;
            $args[] = $data->courseId;
            $args[] = $data->courseVersion;
            $args[] = $data->turnId;
            $args[] = $data->unitId;
            
            $sql .= '        AND B.contractId IN (SELECT A.contractId
                                                    FROM acdEnroll A
                                            INNER JOIN acdGroup B
                                                    ON (B.groupId = A.groupId)
                                            INNER JOIN acdLearningPeriod C
                                                    ON (C.learningPeriodId = B.learningPeriodId)
                                            INNER JOIN acdContract D
                                                    ON (D.contractId = A.contractId)
                                                    WHERE C.periodId = ?
                                                    AND D.courseId = ?
                                                    AND D.courseVersion = ?
                                                    AND D.turnId = ?
                                                    AND D.unitId = ?) ';
        }
        
        $sql .= ' ORDER BY 3';
        
        $pupilsList = $db->query(SAGU::prepare($sql, $args));
        
        if (count($pupilsList) > 0)
        {
            foreach ($pupilsList as $pupil)
            {
                list (  $enrollId,
                        $personId,
                        $personName,
                        $residentialPhone,
                        $workPhone,
                        $cellPhone,
                        $groupId,
                        $groupCurriculumId,
                        $periodId   ) = $pupil;
                        
                $business       = $MIOLO->getBusiness($module, 'BusCurriculum');                
                $curriculumData = $business->getCurriculum($groupCurriculumId);
                
                $curricularComponentId      = $curriculumData->curricularComponentId;
                $curricularComponentVersion = $curriculumData->curricularComponentVersion;
                $curricularComponentName    = $curriculumData->curricularComponentName;
                
                $sql = 'SELECT DISTINCT C.name
                          FROM acdSchedule A
                    INNER JOIN acdScheduleProfessor B
                            ON (B.scheduleId = A.scheduleId)
                    INNER JOIN ONLY basPhysicalPersonProfessor C
                            ON (C.personId = B.professorId)
                         WHERE A.groupId = ?';
                         
                $professors = $db->query(SAGU::prepare($sql, $groupId));
                
                unset($strProfs);
                if (count($professors) > 0)
                {
                    foreach ($professors as $prof)
                    {
                        $strProfs[] = $prof[0];
                    }
                }
                
                if (count($strProfs) > 0)
                {
                    $strProfs = implode('/', $strProfs);
                }
                
                $rowData = array($personId . '<br>' . $curricularComponentId . '(' . $curricularComponentVersion . ')',
                                 $personName . '<br>' . $curricularComponentName,
                                 _M('Res', $module) . ' ' . $residentialPhone . ' ' . _M('Work', $module) . ' ' . $workPhone . ' ' . _M('Cel', $module) . ' ' . $cellPhone . '<br>' . $strProfs,
                                 $data->courseId . '<br>' . $periodId);
                                 
                $return[] = $rowData;
            }
        }        
                
        return $return;
    }
}
?>
