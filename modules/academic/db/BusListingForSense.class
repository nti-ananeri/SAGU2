<?php

class BusinessAcademicBusListingForSense extends Business
{
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic', 'sagu');
        $module = is_null($module) ? 'academic' : $module;

        return $MIOLO->getDatabase($module);
    }    
    
    public function getListingForSense($filter)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $db = $this->getDatabase();
        
		if ( $filter->periodId > 0 && $filter->optionId  == 1 ) 
        {
           $where .= '  WHERE d.periodId = ?  GROUP BY  G.description, A2.courseid, I.sex, d.periodid ORDER BY  1 ';
           $args[] = $filter->periodId;
        }        
   		if ( $filter->periodId > 0 && $filter->optionId  == 2 ) 
        {
           $where .= '  WHERE D.periodId = ? GROUP BY D.periodId, F.sex ORDER BY F.sex';
           $args[] = $filter->periodId;
        }
        if ( $filter->periodId > 0 && $filter->optionId  == 4 ) 
        {
           $where .= '  WHERE D.periodId = ? GROUP BY D.periodId, A.description, F.description ORDER BY A.description';
           $args[] = $filter->periodId;
        }
        if ( $filter->periodId > 0 && $filter->optionId  == 5 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1    GROUP BY d.periodId, A.description, G.description    ORDER BY A.description ';
           $args[] = $filter->periodId;
        }
        if ( $filter->periodId > 0 && $filter->optionId  == 6 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1  GROUP BY D.periodId, E.courseId, F.description, G.sex  ORDER BY D.periodId, E.courseId, F.description';
           $args[] = $filter->periodId;
        }
		if ( $filter->periodId > 0 && $filter->optionId  == 7 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1  GROUP BY D.periodId, F.description, I.description, G.sex  ORDER BY F.description,  G.sex, F.description';
           $args[] = $filter->periodId;
        }
		if ( $filter->periodId > 0 && $filter->optionId  == 8 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1 GROUP BY D.periodId, E.courseId, E.courseVersion, E.unitId, E.turnId ORDER BY E.courseId, E.courseVersion, E.unitId, E.turnId, totalhours, contractHours';
           $args[] = $filter->periodId;
        }
		if ( $filter->periodId > 0 && $filter->optionId  == 9 ) 
        {
           $where .= 'WHERE D.periodId = ? AND A.statusId = 1 GROUP BY D.periodId, E.courseId, H.name, G.sex  ORDER BY E.courseId, H.name, G.sex ';
           $args[] = $filter->periodId;
        }
   		if ( $filter->periodId > 0 && $filter->optionId  == 10 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1 GROUP BY D.periodId, E.courseId, G.sex, age ORDER BY E.courseId,  G.sex,  age ';
           $args[] = $filter->periodId;
        }
   		if ( $filter->periodId > 0 && $filter->optionId  == 11 ) 
        {
           $where .= ' WHERE D.periodId = ? AND A.statusId = 1 GROUP BY D.periodId, I.description, F.description, G.sex ORDER BY I.description, F.description, G.sex ';
           $args[] = $filter->periodId;
        }


        switch($filter->optionId)
        {
            case 1:
                $sql = ' SELECT G.description, A2.courseid, I.sex, d.periodid, count(distinct B.contractid)
								FROM acdEnroll B
								INNER JOIN acdContract A2  ON ( A2.contractId = B.contractId )
								INNER JOIN acdCurriculum A  ON ( A.curriculumId = B.curriculumId )
								INNER JOIN acdGroup C  ON ( B.groupId = C.groupId)
								INNER JOIN acdLearningPeriod D ON ( C.learningPeriodId = D.learningPeriodId )
								INNER JOIN acdCurricularComponent F ON ( A.curricularComponentId = F.curricularComponentId AND A.curricularComponentVersion = F.curricularComponentVersion )
								INNER JOIN acdEnrollStatus G ON ( B.statusId = G.statusId)
								INNER JOIN acdCourse H ON ( A.courseId = H.courseId )
								INNER JOIN basphysicalperson I  ON ( I.personid = A2.personid )								 
								 ';
                break;
            case 2:
                $sql = ' SELECT D.periodId, F.sex, count(distinct B.contractid)
      							FROM acdEnroll B
								INNER JOIN acdGroup C ON ( B.groupId = C.groupId )
								INNER JOIN acdLearningPeriod D ON ( C.learningPeriodId = D.learningPeriodId )
								INNER JOIN acdContract E  ON ( B.contractId = E.contractId )
								INNER JOIN basPhysicalPersonStudent F ON ( E.personId = F.personId )
								INNER JOIN acdEnrollStatus A ON ( B.statusId = A.statusId )
     							';
                break;
           case 3:
                $sql = ' SELECT A.value, count(*) 
								FROM ONLY finincentive A
								WHERE valueIsPercent = true AND endDate < date(now()) AND cancellationDate is null  GROUP BY 1  ORDER BY 1 ';
                break;
           case 4:
                $sql = ' SELECT D.periodId, A.description,    F.description,   count(distinct B.contractid)
      							FROM acdEnroll B
								INNER JOIN acdGroup C ON ( B.groupId = C.groupId )
								INNER JOIN acdLearningPeriod D  ON ( C.learningPeriodId = D.learningPeriodId )
								INNER JOIN acdContract E ON ( B.contractId = E.contractId )
								INNER JOIN acdEnrollStatus A  ON ( A.statusId = B.statusId )
								INNER JOIN basTurn F  ON ( E.turnId = F.turnId ) 
     							 '; 
                break;
			 case 5: 
                $sql = ' SELECT d.periodId, A.description, G.description,  count(DISTINCT B.contractId)        
								FROM acdEnroll B  INNER JOIN acdGroup C          ON ( B.groupId = C.groupId )  
								INNER JOIN acdLearningPeriod D          ON ( C.learningPeriodId = D.learningPeriodId )  
								INNER JOIN acdContract E          ON ( B.contractId = E.contractId )  
								INNER JOIN acdEnrollStatus A          ON ( A.statusId = B.statusId )  
								INNER JOIN acdCourse F          ON ( F.courseId = E.courseId )  
								INNER JOIN acdFormationLevel G          ON ( G.formationLevelId = F.formationLevelId )   
     							 '; 
     			 break;
				case 6:
					$sql = ' SELECT D.periodId, E.courseId, F.description, G.sex, count(DISTINCT B.contractId)
      								FROM acdEnroll B
									INNER JOIN acdGroup C        ON ( B.groupId = C.groupId )
									INNER JOIN acdLearningPeriod D        ON ( C.learningPeriodId = D.learningPeriodId )
									INNER JOIN acdContract E        ON ( B.contractId = E.contractId )
									INNER JOIN acdEnrollStatus A        ON ( A.statusId = B.statusId )
									INNER JOIN basTurn F        ON ( E.turnId = F.turnId )
									INNER JOIN basPhysicalPersonStudent G        ON ( E.personId = G.personId )
									';
                break; 
      		 	case 7: 
					$sql = ' SELECT D.periodId, I.description, F.description, G.sex, count(DISTINCT B.contractId)
      								FROM acdEnroll B
									INNER JOIN acdGroup C        ON ( B.groupId = C.groupId )	
									INNER JOIN acdLearningPeriod D        ON ( C.learningPeriodId = D.learningPeriodId )
									INNER JOIN acdContract E        ON ( B.contractId = E.contractId )
									INNER JOIN acdEnrollStatus A        ON ( A.statusId = B.statusId )
									INNER JOIN basTurn F        ON ( E.turnId = F.turnId )
									INNER JOIN basPhysicalPersonStudent G        ON ( E.personId = G.personId )
									INNER JOIN acdCourse H        ON ( H.courseId = E.courseId )
									INNER JOIN acdFormationLevel I        ON ( H.formationLevelId = I.formationLevelId )
									'; 
                break;
                case 8:
                $sql = 'SELECT E.courseId, E.courseVersion, E.unitId, E.turnId,
           					( SELECT CASE WHEN sum(academicNumberHours) > 0 THEN sum(academicNumberHours) ELSE 1 END	FROM acdCurricularComponent 
             					WHERE curricularComponentId || curricularComponentVersion IN ( 
             						SELECT curricularComponentId || curricularComponentVersion 
                                	FROM acdCurriculum
                                	WHERE courseId = E.courseId AND courseVersion = E.courseVersion AND turnId = E.turnId  AND unitId = E.unitId AND curriculumtypeid NOT IN (6) ) AND endDate is null ) as totalhours, ( 
                                		SELECT CASE WHEN sum(academicNumberHours) > 0 THEN sum(academicNumberHours) ELSE 1 END as contractHours
              							FROM acdCurricularComponent 
             							WHERE curricularComponentId || curricularComponentVersion IN ( 
             								SELECT curricularComponentId || curricularComponentVersion 
                                            FROM acdCurriculum
                                            INNER JOIN acdEnroll  ON ( acdCurriculum.curriculumId = acdEnroll.curriculumId )
                                            WHERE courseId      = E.courseId
                                            AND courseVersion = E.courseVersion AND turnId = E.turnId
                                            AND unitId        = E.unitId  AND curriculumtypeid NOT IN (6) 
                                            AND statusId IN (2, 7) )	AND endDate is null ) as contractHours, count(DISTINCT B.contractId)
      											FROM acdEnroll B
												INNER JOIN acdGroup C  ON ( B.groupId = C.groupId )
												INNER JOIN acdLearningPeriod D ON ( C.learningPeriodId = D.learningPeriodId )
												INNER JOIN acdContract E ON ( B.contractId = E.contractId )
												INNER JOIN acdEnrollStatus A ON ( A.statusId = B.statusId )
												INNER JOIN acdCourseVersion G ON ( E.courseId = G.courseId	AND E.courseVersion = G.courseVersion )
                			';
                	break;
                	case 9:
                	$sql = ' SELECT d.periodId, E.courseId,   H.name,  G.sex,  count(DISTINCT B.contractId)
      								FROM acdEnroll B
									INNER JOIN acdGroup C        ON ( B.groupId = C.groupId )
									INNER JOIN acdLearningPeriod D        ON ( C.learningPeriodId = D.learningPeriodId )
									INNER JOIN acdContract E        ON ( B.contractId = E.contractId )
									INNER JOIN acdEnrollStatus A        ON ( A.statusId = B.statusId )
									INNER JOIN basTurn F        ON ( E.turnId = F.turnId )
									INNER JOIN basPhysicalPersonStudent G        ON ( E.personId = G.personId )
									INNER JOIN acdCourse H        ON ( H.courseId = E.courseId )
     							';
     				break;
     				case 10:
     				$sql = ' SELECT D.periodId, E.courseId, G.sex,                      
									CASE WHEN getPhysicalPersonAge(G.personId) <= 18 THEN \'18 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 19 and 24 THEN \'19 a 24 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 25 and 29 THEN \'25 a 29 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 30 and 34 THEN \'30 a 34 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 35 and 39 THEN \'35 a 39 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 40 and 44 THEN \'40 a 44 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 45 and 49 THEN \'45 a 49 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 50 and 54 THEN \'50 a 54 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 55 and 59 THEN \'55 a 59 anos\'
                						WHEN getPhysicalPersonAge(G.personId) between 60 and 64 THEN \'60 a 64 anos\'
                					ELSE \'mais de 65 anos\' END as age,
           									count(DISTINCT B.contractId)
      								FROM acdEnroll B
										INNER JOIN acdGroup C        ON ( B.groupId = C.groupId )
										INNER JOIN acdLearningPeriod D        ON ( C.learningPeriodId = D.learningPeriodId )
										INNER JOIN acdContract E        ON ( B.contractId = E.contractId )
										INNER JOIN acdEnrollStatus A        ON ( A.statusId = B.statusId )
										INNER JOIN basPhysicalPersonStudent G        ON ( E.personId = G.personId )
     							';
     					break;
     				 case 11: 
     				 $sql = ' SELECT d.periodId, I.description,  F.description,  G.sex,   count(DISTINCT B.contractId)
      								FROM acdEnroll B
									INNER JOIN acdGroup C        ON ( B.groupId = C.groupId )
									INNER JOIN acdLearningPeriod D        ON ( C.learningPeriodId = D.learningPeriodId )
									INNER JOIN acdContract E        ON ( B.contractId = E.contractId )
									INNER JOIN acdEnrollStatus A        ON ( A.statusId = B.statusId )
									INNER JOIN basTurn F        ON ( E.turnId = F.turnId )
									INNER JOIN basPhysicalPersonStudent G        ON ( E.personId = G.personId )
									INNER JOIN acdMovementContract H        ON ( E.contractId = H.contractId )
									INNER JOIN acdStateContract I        ON (     I.stateContractId = H.stateContractId             AND I.inouttransition = \'I\' )
									';
     				 break;
                     case 12:
                     $sql = 'SELECT DISTINCT A.personId, 
                                A.name, 
                                A. location, 
                                A.number, 
                                A.neighborhood, 
                                C.name,
                                B.content,
                                B2.content
                            FROM
                                basPhysicalPerson A 
                                LEFT JOIN basDocument B ON (A.personId = B.personId AND B.documentTypeId = ' . RG_CODE . ')  
                                INNER JOIN basCity C ON ( A.cityId = C.cityId ) 
                                LEFT JOIN basDocument B2 ON (A.personId = B2.personId AND B2.documentTypeId = ' . CPF_CODE . ')
                                INNER JOIN acdContract CO ON ( CO.personId = A.personId )
                                INNER JOIN acdMovementContract MC ON ( MC.contractId = CO.contractId )
                                INNER JOIN acdStateContract H ON ( MC.stateContractId = H.stateContractID ) 
                                INNER JOIN acdLearningPeriod LP ON ( LP.learningPeriodId = MC.learningPeriodId ) 
                            WHERE periodId = ?
                            GROUP BY 
                                A.personId, 
                                A.name, 
                                A.location, 
                                A.number, 
                                A.neighborhood, 
                                C.name, 
                                B.content, 
                                B2.content ,
                                MC.stateTime,
                                CO.contractId
                            HAVING 
                                MC.stateTime = (SELECT max(stateTime) FROM acdMovementContract WHERE contractId = CO.contractId )';
                            $args[] = $filter->periodId;
                     break;
        }

	       	$sql = SAGU::prepare($sql.$where,$args);
        	$result = $db->query($sql);	
	        return $result;
    }
}
?>
