<?php

/**
 *
 * This file handles the connection and actions for basCountry table
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 06/01/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPupilListingOp7 extends MGrid
{
    var $totalFooter1;
    var $totalFooter2;
    
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $home   = 'main:report:pupilListing';

        $columns = array( new MGridColumn( _M('Code', $module), 'right', true, null, true, null, false ),
                          new MGridColumn(_M('Course version', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Course', $module), 'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Unit', $module), 'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Turn', $module), 'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Freshmen', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Veteran', $module), 'center', true, null, true, null, false),
	            		  new MGridColumn( _M('Total', $module), 'center',  true, null, true, null, false )
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        $url = $MIOLO->getActionURL( $module, "$home:search", null, $opts );
        parent::__construct( $filters, $columns, $url, 0/*LISTING_NREGS*/, 0, 'gridCourse' );

        $this->setRowMethod($this, 'myRowMethod');
        $this->setFooter('<center><b>' . _M('Total of pupils', $module) . ':</b>&nbsp;');
        $this->eventHandler();
    }
    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $this->totalFooter1 += $row[5];
        $this->totalFooter2 += $row[6];
    }

    function generateFooter( )
    {
        $MIOLO  = MIOLO::getInstance( );
        $module = $MIOLO->getCurrentModule( );

        $controls = array( new mText('footer',
                                     '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' .
                                     _M('Freshmen', $module) . ': ' . $this->totalFooter1 .
                                     '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' .
                                     _M('Veteran', $module) . ': ' . $this->totalFooter2 .
                                     '&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;' .
                                     _M('Total', $module) . ': ' . ($this->totalFooter1 + $this->totalFooter2) .
                                     '</center>'
                                     ));
        $controls = array_merge( parent::generateFooter(), $controls);
        return $controls;
    }


}

?>
