<?php

/**
 *
 * This file handles the connection and actions for acdSupervisedTraining table
 *
 * @author Eduardo Beal Miuglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miuglioransa [eduardo@solis.coop.br]
 *
 * 
 * @since
 * Class created on 05/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdSupervisedTrainingSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $home   = 'main:register:training:supervisedTraining';

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
/*
        $sql = '  SELECT A.supervisedTrainingId,
                         A.enrollId,
                         E.contractId,
                         F.personId,
                         F.name,
                         A.description,
                         A.institutionId,
                         G.name as institutionName,
                         TO_CHAR(A.beginDate,\'' . MASK_DATE . '\'),
                         TO_CHAR(A.endDate,\'' . MASK_DATE . '\'),
                         A.supervisorId,
                         H.name as supervisorName,
                         A.userName,
                         TO_CHAR(A.dateTime,\'' . MASK_TIMESTAMP . '\'),
                         A.ipAddress
*/
        $columns = array(
                          new MGridColumn( _M('Supervised training id', $module), 'left', true, null, false, null, false),
                          new MGridColumn( _M('Enroll id', $module), 'left', true, null, false, null, false),
                          new MGridColumn( _M('Contract', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Group id', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Person id', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Person', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Description', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Institution id', $module), 'left', true, null, false, null, false),
                          new MGridColumn( _M('Institution', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Begin date', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('End date', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Supervisor id', $module), 'left', true, null, false, null, false),
                          new MGridColumn( _M('Supervisor', $module), 'left', true, null, true, null, false)
                        );

        $url = $MIOLO->getActionURL( $module, "$home:search", null, $opts );
        parent::__construct( null, $columns, $url, 0, 0, 'gridSupervisedTrainingSearch');

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);

        if ( isSet($filters) )
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }

        $opts = array('function'=>'update',
                      'supervisedTrainingId' => '%0%'
                     );
        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );
        $opts = array('function'             => 'delete',
                      'supervisedTrainingId' => '%0%',
                      'event'                => 'tbBtnDelete_click');
        $href_delete = $MIOLO->getActionURL( $module, $home, null, $opts );


        $this->setIsScrollable();

        $this->addActionUpdate( $href_edit );
        $this->addActionDelete( $href_delete );
        $this->setTitle(_M('Supervised training', $module));

        $this->setLinkType('hyperlink');

        $this->eventHandler();
    }

}

?>
