<?php

/**
 *
 * @author Leovan Tavares da Silva [jamiel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 07/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdContractList extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = MIOLO::getCurrentAction();
        $module = MIOLO::getCurrentModule();

        $columns = array( 
                          new MGridColumn( _M('Contract id', $module),        'right',  false, null, true,  null, false),
                          new MGridColumn( _M('Course id', $module),          'right',  false, null, true,  null, false),
                          new MGridColumn( _M('Course name', $module),        'left',   false, null, true,  null, false),
                          new MGridColumn( _M('Unit id', $module),            'right',  false, null, false, null, false),
                          new MGridColumn( _M('Unit', $module),               'right',  false, null, true,  null, false),
                          new MGridColumn( _M('Activation date', $module),    'right',  false, null, true,  null, false),
                          new MGridColumn( _M('Deactivate date', $module),    'center', false, null, true,  null, false),
                          new MGridColumn( _M('Learning period id', $module), 'center', false, null, false, null, false),
                          new MGridColumn( '' )
                        );

        // Income forecasts
        $opts = array('event'=>'btnSearch_click', 'learningPeriodIdS'=>'%7%', 'contractIdS'=>'%0%');
        $hrefShowIncomeForecasts = $MIOLO->getActionURL('finance', 'main:report:incomeForecast', null, $opts);

        // Edit contract
        $opts = array('contractId'=>'%0%', 'function'=>'update');
        $hrefEditContract = $MIOLO->getActionURL('academic', 'main:register:contract:contract', null, $opts);

        unset($opts);
        if (count($filters) > 0)
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
        parent::__construct( null, $columns, $url, 0, 0, 'gridContractList' );
        $this->setTitle(_M('Contracts for @1', $module, $filters->personName));
        $this->setRowMethod($this, 'myRowMethod');

        $this->addActionIcon(_M('Consult income forecasts', $module), 'find', $hrefShowIncomeForecasts);
        $this->addActionIcon(_M('Edit contract', $module), 'edit', $hrefEditContract);
        $url = $MIOLO->getActionURL($module,$home,null,$opts);

        $this->eventHandler();
        $this->setIsScrollable();
    }
    
    public function myRowMethod( $i, $row, $actions, $columns )
    {
        for ($x = 0; $x<count($columns); $x++)
        {
            $columns[$x]->control[$i]->_addStyle( 'color', ($x == (count($columns)-1)) ? 'red' : 'blue');
        }
    }
}

?>
