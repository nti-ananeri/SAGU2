<?php

/**
 *
 * Groups list for the grades typing process
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 29/08/2007
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

class myMGridActionIcon extends MGridActionIcon
{
    var $onclick;
    
    function generate( )
    {
        $control = parent::generate( );
        
        if ( $this->enabled  )
        {
            $control->addAttribute('onclick', $this->onclick);
            if ( ! $this->href )
            {
                $control->location = '';
            }
        }
        return $control;
    }
}


/**
 * Grid used by form to display search results
 **/
class GrdAttendanceClass extends MGrid
{
    var $url_group;
    var $url_group2;
    var $url_group3;
    var $url_group4;
    var $formData;
    
    /**
     * Class constructor
     **/
    public function __construct($filters)
    {
        $MIOLO          = MIOLO::getInstance();
        $module         = $MIOLO->getCurrentModule();
        $home           = 'main:document:examinationAct';
        $this->formData = $filters;

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
             
        $url_group = $MIOLO->getActionURL($module, $home, null, array('groupId'=>'#0#', 
                                                                      'emissionDate'=>$this->formData->emissionDate, 
                                                                      'printMode'=>$this->formData->printMode,
                                                                      'event'=>'attendanceReport'));
        $url_group2 = $MIOLO->getActionURL($module, $home, null, array('groupId'=>'#0#', 
                                                                       'emissionDate'=>$this->formData->emissionDate, 
                                                                       'printMode'=>$this->formData->printMode,
                                                                       'event'=>'examinationAct'));
        $url_group3 = $MIOLO->getActionURL($module, $home, null, array('groupId'=>'#0#', 
                                                                       'emissionDate'=>$this->formData->emissionDate, 
                                                                       'printMode'=>$this->formData->printMode,
                                                                       'event'=>'attachedLeaf'));
        $url_group4 = $MIOLO->getActionURL($module, $home, null, array('groupId'=>'#0#', 'event'=>'finalResultAct')); 

        $columns = array ( 
                           new MGridColumn(_M('Offered curricular component id', $module), 'right',   true, null, true, null, true),
                           new MGridColumn(_M('Curricular component id', $module), 'right',   true, null, true, null, true ),
                           new MGridColumn(_M('Curricular component', $module), 'left',   true, null, true, null, true )
                         );

        $url = $MIOLO->getActionURL( $module, $home );
        
        parent::__construct( null, $columns, $url, 0, 0, 'gridAttendanceClass' );

        $this->addActionIcon(_M('Attendance list', $module), 'select.png', $url_group);
        $this->addActionIcon(_M('Acts', $module), 'select.png', $url_group2);
        $this->addActionIcon(_M('Lessons content', $module), 'select.png', $url_group3);

        $this->actions[] = new myMGridActionIcon( $this, 'select.png', $url_group4, _M('Final result act', $module));
        
        $this->setRowMethod( $this, 'myRowMethod');
        $this->linktype = 'hyperlink';
    }
    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $opts['emissionDate'] = $this->formData->emissionDate;
        $opts['printMode']    = $this->formData->printMode;
        $opts['groupId']      = $columns[0]->control[$i]->value;
        $opts['event']        = 'finalResultAct';
        $fAction              = $MIOLO->getActionURL($module, $action, null, $opts);

        $actions[3]->onclick = 'finalResultActForm( event , \'' . $fAction . '\')';
        $actions[3]->href = 'javascript:void(0)';
    }
}


?>
