<?php

/**
 *
 * This file handles the connection and actions for acdSchedule table
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 23/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdScheduleSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:process:group:schedule';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( _M('Schedule id', $module),                   'right', true, null, true, null, true ),
                          new MGridColumn( _M('Offered curricular component id', $module),                      'right', true, null, false, null, true ),
                          new MGridColumn( _M('Curricular component', $module),                    'left',  true, null, false, null, true ),
                          new MGridColumn( _M('Sub group', $module),                     'left',  true, null, false, null, true ),
//                           new MGridColumn( _M('Turn id', $module),                       'right', true, null, true, null, true ),
//                           new MGridColumn( _M('Turn description', $module),              'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Unit id', $module),                       'right', true, null, false, null, true ),
                          new MGridColumn( _M('Unit', $module),              'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Week day id', $module),                   'right', true, null, false, null, true ),
                          new MGridColumn( _M('Week day', $module),          'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Turn id', $module),          'left',  true, null, false, null, true ),
                          new MGridColumn( _M('Turn', $module),          'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Schedule learning period id', $module),         'right', true, null, false, null, true ),
                          new MGridColumn( _M('Schedule learning period description', $module),'left',  true, null, false, null, true ),
                          new MGridColumn( _M('Begin hour', $module),'left',  true, null, true, null, true ),
                          new MGridColumn( _M('End hour', $module),'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Physical resource id', $module),          'right', true, null, false, null, true ),
                          new MGridColumn( _M('Physical resource version', $module),     'right', true, null, false, null, true ),
                          new MGridColumn( _M('Room-Building', $module), 'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Enter the number of discounting credits', $module),             'right', true, null, false, null, true ),
                          new MGridColumn( _M('Discounting', $module),                   'right', true, null, false, null, true ),
//                           new MGridColumn( _M('Begin date', $module),                    'left',  true, null, true, null, true ),
//                           new MGridColumn( _M('End date', $module),                      'left',  true, null, true, null, true ),
//                          new MGridColumn( _M('Minimum number lessons', $module),        'right', true, null, true, null, true ),
//                          new MGridColumn( _M('Number hours lessons', $module),          'right', true, null, true, null, true ),
                          new MGridColumn( _M('Weight', $module),                        'right', true, null, false, null, true ),
                          new MGridColumn( _M('Leader id', $module),                     'right', true, null, false, null, true ),
                          new MGridColumn( _M('Leader name', $module),                   'right', true, null, false, null, true ),
                          new MGridColumn( _M('Sub leader id', $module),                 'right', true, null, false, null, true ),
                          new MGridColumn( _M('Sub leader name', $module),               'right', true, null, false, null, true ),
                          new MGridColumn( _M('Operation id', $module),                  'right', true, null, false, null, true ),
                          //new MGridColumn( _M('Operation description', $module),         'left',  true, null, false, null, true ),
                          new MGridColumn( _M('Begin date', $module),         'left',  true, null, true, null, true )
                        );

        $opts = array('function'=>'update',
                      'scheduleId'=>'%0%');

        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );

        $opts = array('function'=>'delete',
                      'scheduleId'=>'%0%',
                      'event'=>'tbBtnDelete_click');
        $href_delete = $MIOLO->getActionURL( $module, $home, null, $opts );
        
        $profAction = substr($home, 0, strrpos($home,':')) . ':scheduleProfessor';
        
        $opts = array('function'=>'insert',
                      'scheduleId'=>'%0%');
        $href_addProfessor = $MIOLO->getActionURL( $module, $profAction, null, $opts);

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct( null, $columns, $url, LISTING_NREGS, 0, 'gridSchedule' );
        $this->setLinkType('hyperlink');

        $this->setIsScrollable();
        $this->setClose(false);
        $this->setRowMethod($this, 'myRowMethod');

        $this->addActionUpdate( $href_edit );
        $this->addActionDelete( $href_delete );
        $this->addActionIcon( _M('Add professor', $module), 'smile-16x16.png', $href_addProfessor );

        $this->eventHandler();

    }
    
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        if (INCREASE_SECURITY_LEVEL == 'YES')
        {
            $actions[1]->enabled = false;
        }
    }

}

?>
