<?php

/**
 *
 * Grid to show exploitation data on diverse consultation
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 29/08/2007
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdDiverseConsultationCurricularComponentExploited extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO              = MIOLO::getInstance();
        $module             = MIOLO::getCurrentModule();
        $home               = 'main';
        
        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */

        $columns = array(
                          new MGridColumn( _M('Enroll id', $module), 'right', true, null, false, null, false),
                          new MGridColumn( _M('Period', $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Code', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Curricular component', $module), 'left', false, null, true, null, false),
                          new MGridColumn( _M('Status', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Note', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Credits', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Number hours', $module), 'center', true, null, true, null, false),
                          new MGridColumn( '&nbsp', 'center', true, null, true, null, false ),
                          new MGridColumn( _M('Course', $module), 'left', false, null, true, null, false)
                        );

        $url = $MIOLO->getActionURL($module,"$home",null,$opts);
        parent::__construct( null, $columns, $url, null, 0, 'gridDiverseConsultationCurricularComponentExploited' );
        $this->setLinkType('hyperlink');

        $opts = array('function'=>'update',
                      'enrollId'=>'%0%',
                      'periodId'=>$filters->periodId,
                      'personId'=>$filters->personId,
                      'returnTo'=>$home);
        $href_edit = $MIOLO->getActionURL( $module, 'main:register:enroll', null, $opts );
        $this->addActionUpdate( $href_edit );

        $this->setIsScrollable();
        $this->setTitle(_M('Exploitations', $module));
        $this->setRowMethod($this, 'myRowMethod');

        $this->eventHandler();

    }

    public function myRowMethod($i, $row, $actions, $columns)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $columns[4]->control[$i]->setColor(CURRICULUM_STATUS_COLOR_ENROLLED);
        
        if ($row[6] > $row[7])
        {
            $str    = _M('@1 hours available', $module, ($row[6] - $row[7]));
            $path   = $MIOLO->getActionUrl($module, 'html:images:red.png');
            $string = new MImage('exploitImg', $str, $path);
        }
        else
        {
            $str    = _M('All hours exploited', $module);
            $path   = $MIOLO->getActionUrl($module, 'html:images:green.png');
            $string = new MImage('exploitImg', $str, $path);
        }
        
        $columns[7]->control[$i] = $string;
    }
}

?>
