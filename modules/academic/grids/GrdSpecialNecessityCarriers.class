<?php

/**
 *
 * @author Leovan Tavares da Silva [jamiel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 07/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdSpecialNecessityCarriers extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:report:specialNecessityCarrierList';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( _M('Course id', $module),            'right', false, null, true,  null, true),
                          new MGridColumn( _M('Course version', $module),       'right', false, null, true,  null, true ),
                          new MGridColumn( _M('Course name', $module),          'left',  false, null, false, null, true),
                          new MGridColumn( _M('Unit id', $module),              'right', false, null, false, null, true),
                          new MGridColumn( _M('Turn id', $module),              'right', false, null, false, null, true),
                          new MGridColumn( _M('Person id', $module),            'right', false, null, true,  null, true),
                          new MGridColumn( _M('Person name', $module),          'left',  false, null, true,  null, true ),
                          new MGridColumn( _M('Location', $module),             'left',  false, null, true,  null, true ),
                          new MGridColumn( _M('City id', $module),              'right', false, null, false, null, true ),
                          new MGridColumn( _M('City', $module),                 'left',  false, null, true,  null, true ),
                          new MGridColumn( _M('Phones', $module),               'left',  false, null, true,  null, true ),
                          new MGridColumn( _M('RG', $module),                   'right', false, null, true,  null, true ),
                          new MGridColumn( _M('Special necessity id', $module), 'right', false, null, false, null, true ),
                          new MGridColumn( _M('Special necessity', $module),    'left',  false, null, false, null, true),
                          new MGridColumn( _M('Special necessity description', $module), 'left', false, null, true, null, true),
                          new MGridColumn( _M('Contract state', $module),       'left',  false, null, true, null, true)
                        );
        
        unset($opts);
        if (count($filters) > 0)
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
        $url = $MIOLO->getActionURL($module,$home,null,$opts);
        parent::__construct( null, $columns, $url, 0, 0, 'gridSpecialNecessityCarriers' );

        $this->eventHandler();

    }

}

?>
