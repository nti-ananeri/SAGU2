<?php

/**
 *
 * This file handles the connection and actions for sprInscription table
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 10/01/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdListEnrolledByAge extends MGrid
{
    var $totalFooter;
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();

        $home   = 'main:report:listenrolledbyage';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array(
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( _M('Sex', $module), 'left', true, null, true, array('M'=> _M('Male', $module), 'F' => _M('Female', $module)), false ),
                          new MGridColumn( _M('Age', $module), 'center', true, null, true, null, false ),
                          new MGridColumn( _M('Quantity', $module), 'center', true, null, true, null, false ),
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct( null, $columns, $url, 0/*LISTING_NREGS*/, 0, 'gridListInscription' );

        //$this->setIsScrollable();
        $this->setRowMethod($this, 'myRowMethod');
        $this->setFooter('<b>' . _M('Total', $module) . ':</b>&nbsp;');
        $this->eventHandler();
    }

    public function myRowMethod($i, $row, $actions, $columns )
    {
        $this->totalFooter += $row[9];
    }

    function generateFooter( )
    {
        $MIOLO  = MIOLO::getInstance( );
        $module = $MIOLO->getCurrentModule( );

        $controls = array( new mText( '', $this->totalFooter));
        $controls = array_merge( parent::generateFooter(), $controls);
        return $controls;
    }

}

?>
