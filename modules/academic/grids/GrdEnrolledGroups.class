<?php

/**
 *
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/02/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdEnrolledGroups extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        
        $module = MIOLO::_request('module');
//        $function = MIOLO::_request('function');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        
        $columns = array(
                         new MGridColumn(null),
                         new MGridColumn( _M('Offered', $module), 'center', true, null, true, null),
                         new MGridColumn( _M('Curricular component id', $module), 'right', true, null, true, null),
                         new MGridColumn( null ),
                         new MGridColumn( _M('Curricular component', $module), 'left',  true, null, true, null),
                         new MGridColumn( null ),
                         new MGridColumn( null ),
                         new MGridColumn( _M('Week day', $module), 'left', true, null, true, null), 
                         new MGridColumn( _M('Begin hour', $module), 'center', true, null, true, null),
                         new MGridColumn( _M('End hour', $module), 'center', true, null, true, null),
                         new MGridColumn( _M('Turn', $module), 'left', true, null, true, null),
                         new MGridColumn( _M('Status', $module), 'left', true, null, true, null),
                         new MGridColumn( null ),
                         new MGridColumn( _M('Class', $module), 'center', true, null, true, null)
                        );
      
        $url = $MIOLO->getActionURL($module,$action);
        parent::__construct( null, $columns, $url, 0  , 0, 'GrdEnrolledGroups' );
        
        $this->setRowMethod('GrdEnrolledGroups', 'myRowMethod');

        //$this->addActionText('cancel', _M('Cancel', $module), $cancelAction);
        //$this->setIsScrollable();
        $this->setFiltered(false);
        $this->eventHandler();

    }

    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        if ( $row[12] == ENROLL_STATUS_CANCELLED )
        {
            $columns[11]->control[$i]->color = 'red';
        }
    }
}

?>
