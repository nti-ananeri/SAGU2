<?php

/**
 *
 * This file handles the connection and actions for acdScheduleProfessor table
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 26/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdProfessorGroupReport extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();

        $home   = 'main:report:professorGroupReport';
        $module = MIOLO::_request('module');

        $groupName = MIOLO::_request('groupName');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array(
                          new MGridColumn( _M('Schedule id', $module),                 'right', true, null, true, null, true ),
                          new MGridColumn( _M('Professor name', $module),              'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Curricular component', $module),                'left', true, null, true, null, true ),
                          new MGridColumn( _M('Quantidade de horas semanais', $module), 'left',  true, null, true, null , true ),
                          new MGridColumn( _M('Total de alunos', $module),                      'right', true, null, true, null, true ),
                          new MGridColumn( _M('Turma', $module),                      'center', true, null, false, null, true ),
                          new MGridColumn( _M('Turno', $module),                      'left', true, null, false, null, true ),
                          new MGridColumn( _M('Serie', $module),                      'right', true, null, false, null, true )
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
//        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct( null, $columns, $url, LISTING_NREGS, 0, 'gridScheduleProfessor' );

        $this->setIsScrollable();
        $this->setClose(false);
//        $this->setRowMethod($this, 'myRowMethod');
        

        $this->eventHandler();

    }
    
  /*  public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        if (INCREASE_SECURITY_LEVEL == 'YES')
        {
            $actions[1]->enabled = false;
        }
    }*/

}

?>
