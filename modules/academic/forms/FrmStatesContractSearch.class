<?php
/**
 *
 * This file handles the connection and actions for acdStatesContract table
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 26/05/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the basStatesContract table
 */
class FrmStatesContractSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;

        $this->home   = $data->home;

        parent::__construct(_M('Search', $module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('State contract', $this->home, 'statesContract-16x16.png', true);
        }
        //fim favoritos 

        $fields[] = $toolBar;

        //$stateContractIdS = new MTextField('stateContractIdS', $this->stateContractIdS->value, _M('States contract id', $module), 10);
        //$stateContractIdS->setJsHint(_M('Enter the state contract id', $module));
        //$fields[]          = $stateContractIdS;

        $fields[]  = new MHiddenField('stateContractIdS', $this->getFormValue('stateContractIdS', $stateContractIdS));

        $statesContractDescriptionS = new MTextField('statesContractDescriptionS', $this->statesContractDescriptionS->value, _M('Description', $module), FIELD_DESCRIPTION_SIZE);
        $statesContractDescriptionS->setJsHint(_M('Enter the state contract description', $module));
        $fields[]                   = $statesContractDescriptionS;

        //needsReason
        $statesContractNeedsReasonLabel = new MText('statesContractNeedsReasonLabel', _M('Does it need reason',$module) . '?');
        $statesContractNeedsReasonLabel->setWidth(FIELD_CONTAINER_SIZE);

        $statesContractNeedsReasonS = $this->GetFormValue('statesContractNeedsReasonS',$data->isRequestAcademicDegree);
        $statesContractNeedsReasonS = new MRadioButtonGroup('statesContractNeedsReasonS', '', SAGU::listTrueFalse(1), $statesContractNeedsReasonS, null, 'horizontal');
        $statesContractNeedsReasonS->SetShowLabel(false);

        $hctNeedsContractReasonS = new MHContainer('hctNeedsContractReasonS', array($statesContractNeedsReasonLabel, $statesContractNeedsReasonS));
        $fields[]  = $hctNeedsContractReasonS;

        //isCloseContract
        $isCloseContractOptions = array( array(_M('Yes', $module), 't'),
                                         array(_M('No', $module), 'f')
                                       );

        $isCloseContractLabel = new MText('isCloseContractLabel', _M('Does it close contract',$module) . '?');
        $isCloseContractLabel->setWidth(FIELD_CONTAINER_SIZE);

        $isCloseContractS = $this->GetFormValue('isCloseContractS',$data->isCloseContractS);
        $isCloseContractS = new MRadioButtonGroup('isCloseContractS', '', SAGU::listTrueFalse(1), $isCloseContractS, null, 'horizontal');
        $isCloseContractS->SetShowLabel(false);

        $hctIsCloseContract = new MHContainer('hctIsCloseContract', array($isCloseContractLabel, $isCloseContractS));
        $fields[]  = $hctIsCloseContract;

        $fields[] = new MButton('btnSearch', _M('Search', $module));

        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);

        // get filters values
        $filters->stateContractId  = $this->stateContractIdS->value;
        $filters->description      = $this->statesContractDescriptionS->value;
        $filters->needsReason      = $this->statesContractNeedsReasonS->value;
        $filters->isCloseContract  = $this->isCloseContractS->value;

        unset($this->stateContractIdS->value);

        $grdResults = $MIOLO->getUI()->getGrid($module, 'GrdStatesContractSearch', $filters);
        $business = $this->manager->getBusiness($module, 'BusStatesContract');
        $data = $business->searchStatesContract($filters);
        $grdResults->setData($data);

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.countryIdS.focus();');
        }

    }

}

?>
