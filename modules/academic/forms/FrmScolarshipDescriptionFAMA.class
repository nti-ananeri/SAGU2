<?php
$MIOLO = MIOLO::getInstance();
$MIOLO->Uses('forms/FrmScolarshipDescription.class', 'academic');

/**
 * ScolarshipDescription form
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * @since
 * Class created on 25/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a scolarshipDescription
 **/
class FrmScolarshipDescriptionFAMA extends FrmScolarshipDescription
{
    private $home;

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        //ordem das disciplinas(alfabética ou semestre)
        parent::createFields();
        unset($fields);
        $module = MIOLO::getCurrentModule();
        $fields[] = new Separator(_M('Enade', $module) . ':');
        $reportTypes = array(
                              array(_M('Participou', $module), 1),
                              array(_M('Isento', $module), 2) 
                             );

        if ( ! strlen((string)$data->enade) > 0 )
        {
            $data->enade = 2;
        }

        $enade = new MRadioButtonGroup('enade', '', $reportTypes, $this->getFormValue('enade', $data->enade), '', 'horizontal');

        $enade->setShowLabel(false);
        $fields[] = $enade;

        
        $atividadesComplementares = new MTextField('atividadesComplementares', $this->getFormValue('atividadesComplementares', $data->atividadesComplementares), _M('Atividades complementares', $module));
        $fields[] = $atividadesComplementares;
        $linhaDeFormacao[] = array( 'Marketing', 'MK');
        $linhaDeFormacao[] = array( 'Análise de Sistemas', 'ADAS');
        $linhaDeFormacao[] = array( 'Hospitalar', 'HT');
//        $linhaDeFormacao[] = array( '', 'HT');
        $linhaFormacaoEspecifica = new MSelection('linhaFormacaoEspecifica', $this->getFormValue('linhaFormacaoEspecifica', $data->linhaFormacaoEspecifica), _M('Linha de formação específica', $module), $linhaDeFormacao);
        $fields[] = $linhaFormacaoEspecifica;
        $fields[] = new Separator('');
        $this->addFields($fields);
    }
    
    
    /**
     * Method to get data information when the form is submitted
     **/
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $data   = $this->getTypesData();
        
        if ($data->scolarshipType == 1)
        {
            $class = 'RptScolarshipDescriptionFAMA';
            $MIOLO->getClass($module, $class);
            $report = new $class($data);
        }
    }
    public function getTypesData()
    {
        $data = parent::getTypesData();
        $data->atividadesComplementares              = $this->atividadesComplementares->value;
        $data->enade              = $this->getFormValue('enade');
        $data->linhaFormacaoEspecifica = $this->getFormValue('linhaFormacaoEspecifica');
        return $data;
  }
}

?>
