<?php

/**
 *
 * This file handles the connection and actions for acdEnrollSummary table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 18/05/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluушes Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluушes Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

class FrmEnrollSummarySearch extends MForm
{
    private $home;
    private $module;

    public $grdResults;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $module = MIOLO::getCurrentModule();
        
        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $toolBar->disableButton('tbBtnNew');
        //$toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Enroll summary', $this->home, 'enrollSummary-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;
        
        $enrollSummaryIdS = new MTextField('enrollSummaryIdS', $this->getFormValue('enrollSummaryIdS',$data->enrollSummaryId), _M('Enroll summary id',$module), FIELD_ID_SIZE);
        $fields[]         = $enrollSummaryIdS;
        
        $contractPersonLabelS = new MText('contractPersonLabelS', _M('Person', $module) . ':');
        $contractPersonLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $flds[] = $contractPersonLabelS;

        $contractPersonIdS = new MLookupTextField('contractPersonIdS', $this->getFormValue('contractPersonIdS',$this->conditionUnblockSearch->contractPersonIdS), _M('Person',$module), FIELD_LOOKUPFIELD_SIZE, null, null, array('contractIdS', 'contractPersonIdS', 'contractPersonNameS', 'contractCourseIdS', 'contractCourseNameS', 'contractCourseVersionS', 'contractTurnIdS', 'limbo', 'contractUnitIdS'), $module, 'PersonContract', null, array('personId' => 'contractPersonIdS'), !$this->page->isPostBack() );
        $contractPersonIdS->setJsHint(_M('Enter the person code',$module));
        $flds[]           = $contractPersonIdS;
        $validators[] = new MIntegerValidator('contractPersonIdS', '', 'optional');

        $contractPersonNameS = new MTextField('contractPersonNameS', $this->getFormValue('contractPersonNameS',$this->conditionUnblockSearch->contractPersonNameS), _M('Name',$module), 30);
        $contractPersonNameS->setReadOnly(true);
        $flds[]             = $contractPersonNameS;

        $hctPersonS = new MHContainer('hctContractS', $flds);
        $hctPersonS->setShowLabel(false);
        $fields[]  = $hctPersonS;
        unset($flds);

        $contractLabelS = new MText('contractLabelS', _M('Contract', $module) . ':');
        $contractLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $flds[] = $contractLabelS;

        $contractIdS = new MLookupTextField('contractIdS', $this->getFormValue('contractIdS'), _M('Contract',$module), FIELD_LOOKUPFIELD_SIZE, null, null, array('contractPersonIdS', 'contractPersonNameS', 'contractCourseIdS', 'contractCourseNameS', 'contractCourseVersionS', 'contractTurnIdS', 'limbo', 'contractUnitIdS'), $module, 'Contract', null, array('personId' => 'contractPersonIdS'), true);
        $contractIdS->setJsHint(_M('Enter the contract code',$module));
        $flds[]           = $contractIdS;
        $validators[] = new MIntegerValidator('contractIdS', '', 'optional');

        $contractCourseIdS = new MTextField('contractCourseIdS', $this->getFormValue('contractCourseIdS',$this->conditionUnblockSearch->contractCourseIdS), _M('Course',$module), FIELD_ID_SIZE);
        $contractCourseIdS->setReadOnly(true);
        $flds[]           = $contractCourseIdS;

        $contractCourseVersionS = new MTextField('contractCourseVersionS', $this->getFormValue('contractCourseVersionS',$this->conditionUnblockSearch->contractCourseVersionS), _M('Version',$module), FIELD_ID_SIZE);
        $contractCourseVersionS->setReadOnly(true);
        $flds[]                = $contractCourseVersionS;

        $contractCourseNameS = new MTextField('contractCourseNameS', $this->getFormValue('contractCourseNameS',$this->conditionUnblockSearch->contractCourseNameS), _M('Description',$module), 30);
        $contractCourseNameS->setReadOnly(true);
        $flds[]             = $contractCourseNameS;

        $hctContractS = new MHContainer('hctContractS', $flds);
        $hctContractS->setShowLabel(false);
        $fields[]    = $hctContractS;
        unset($flds);

        $businessPeriod = $MIOLO->getBusiness($module,'BusPeriod');
        $periodIdS      = new MComboBox('periodIdS', $this->getFormValue('periodIdS') ? $this->getFormValue('periodIdS') : CURRENT_PERIOD_ID, _M('Period',$module), $businessPeriod->listPeriod(), true );
        $fields[]       = $periodIdS;

        $learningPeriodLabelS = new MText('learningPeriodLabelS', _M('Learning period',$module) . ':');
        $learningPeriodLabelS->setWidth(FIELD_CONTAINER_SIZE);

        $learningPeriodIdS = new MLookupTextField('learningPeriodIdS', $this->getFormValue('learningPeriodIdS', $data->learningPeriodIdS), '', FIELD_LOOKUPFIELD_SIZE, null, null, 'limbo,limbo,limbo,limbo,limbo,learningPeriodDescriptionS', $module, 'LearningPeriod', null, array('periodId' => 'periodId', 'courseId' => 'contractCourseIdS', 'courseVersion' => 'contractCourseVersionS'), true);
        $learningPeriodIdS->setJsHint(_M('Enter the learning period code',$module));

        $learningPeriodDescriptionS   = new MTextField('learningPeriodDescriptionS', $this->getFormValue('learningPeriodDescriptionS', $data->learningPeriodDescriptionS), '', FIELD_DESCRIPTION_SIZE);
        $learningPeriodDescriptionS->setJsHint(_M('Learning period description',$module));
        $learningPeriodDescriptionS->setReadOnly(true);

        $hctLearningPeriod = new MHContainer('hctLearningPeriod', array($learningPeriodLabelS, $learningPeriodIdS, $learningPeriodDescriptionS));
        $hctLearningPeriod->setShowLabel(true);
        $fields[]  = $hctLearningPeriod;

        $operationIdLabelS = new MText('operationIdLabelS', _M('Operation id',$module).':');
        $operationIdLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $flds[] = $operationIdLabelS;

        $operationIdS = new MLookupTextField('operationIdS', $this->getFormValue('operationIdS', $operationIdS), '', FIELD_ID_SIZE, null, null,
            'operationDescriptionS',
            'finance', 'Operation', null, null, true);
        $operationIdS->setJsHint(_M('Select the operation id', $module));
        $flds[] = $operationIdS;

        $operationDescriptionS = new MTextField('operationDescriptionS', $this->getFormValue('operationDescriptionS', $operationDescriptionS), '', FIELD_DESCRIPTION_SIZE);
        $operationDescriptionS->setReadOnly(true);
        $flds[] = $operationDescriptionS;

        $hctOperationS = new MHContainer('hctOperationS', $flds);
        $hctOperationS->setShowLabel(true);
        $fields[]  = $hctOperationS;
        unset($flds);

        $fields[] = new MButton('btnSearch',_M('Search',$module));
        
        $fields[] = new MSeparator();

        $this->setFields($fields);
        $this->setValidators($validators);

        $this->grdResults = $MIOLO->getUI()->getGrid($module,'GrdEnrollSummarySearch');

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($this->grdResults);  

        $this->page->onLoad('document.' . $this->name . '.enrollSummaryIdS.focus()');
        
        $this->setLabelWidth(FIELD_LABEL_SIZE);
    }

    public function btnSearch_click()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        // get filters values
        $filters->enrollSummaryId  = $this->enrollSummaryIdS->value;
        $filters->personId         = $this->contractPersonIdS->value;
        $filters->contractId       = $this->contractIdS->value;
        $filters->learningPeriodId = $this->learningPeriodIdS->value;
        $filters->operationId      = $this->operationIdS->value;
        $filters->periodId         = $this->periodIdS->value;

        $business = $MIOLO->getBusiness($module,'BusEnrollSummary');
        $data = $business->searchEnrollSummary($filters);
        $this->grdResults->setData($data);
    }

}

?>
