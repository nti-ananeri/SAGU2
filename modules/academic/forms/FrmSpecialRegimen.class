<?php

/**
 *
 * This file list all curricular components coursed in special regimen
 *
 * @author daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 09/06/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to list data
 */
class FrmSpecialRegimen extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'academic';
        $module = $this->module;

        parent::__construct(_M('Curricular components coursed in special regimen',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $personId = MIOLO::_request('personId');

        $data2->personId = $personId;
        $business = $MIOLO->getBusiness($module,'BusContract');
        $data     = $business->searchContract($data2);
        if ( count($data) > 0 )
        {
            $contract = $business->getContract($data[0][0]);
        }

        $personIdLabel = new MTextLabel('personIdLabel', $contract->personId, _M('Code',$module));
        //$personIdLabel->setWidth(FIELD_CONTAINER_SIZE);
        $fields[]      = $personIdLabel;

        $personNameLabel = new MTextlabel('personNameLabel', $contract->personName, _M('Name',$module));
        //$personNameLabel->setWidth(FIELD_CONTAINER_SIZE);
        $fields[]        = $personNameLabel;

        $this->setFields($fields);

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdSpecialRegimen');

        if ( count($data) > 0 )
        {
            foreach ( $data as $row )
            {
                $contractId[] = $row[0];
            }
        }

        $data       = $business->getCurricularComponentsByRegimen($contractId, SPECIAL_REGIMEN);
        $grdResults->setData($data);

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);

        unset($fields);
        $flds[] = new MButton('btnClose', _M('Close window', $module), 'window.close()');
        $div = new MDiv('divClose', $flds, null, 'align=center');
        $div->width='99%';
        $fields[] = $div;
        $fields[] = new MSeparator();
        $this->addField($fields);

    }

}

?>
