<?php

/**
 *
 * This file handles the connection and actions for acdMessageContractRenewal table
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 21/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the acdMessageContractRenewal table
 */
class FrmMessageContractRenewalSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'academic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Message contract renewal', $this->home, 'messageContractRenewal-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $limbo = new MHiddenField('limbo', '');
        $fields[] = $limbo;

        //$messageContractRenewalIdS = new MTextField('messageContractRenewalIdS', $this->messageContractRenewalIdS->value, _M('Message contract renewal id',$module), 10);
        //$messageContractRenewalIdS->setJsHint(_M('Enter the message contract renewal id',$module));
        //$fields[] = $messageContractRenewalIdS;
        $fields[]  = new MHiddenField('messageContractRenewalIdS', $this->getFormValue('messageContractRenewalIdS', $messageContractRenewalIdS));

        $this->page->isPostBack() ? $dataPeriodId = $this->getFormValue('periodIdS', $data->periodIdS) : $dataPeriodId = CURRENT_PERIOD_ID;

        $businessPeriod = $MIOLO->getBusiness($module,'BusPeriod');
        $periodId = new MComboBox('periodId', $dataPeriodId, _M('Period',$module), $businessPeriod->listPeriod(), true );
        $fields[] = $periodId;

        /*
         * MLookupTextField class constructor prototype:
         *
         * function __construct($name = '', $value     = '',       $label   = '', $size         = 10,
         *                      $hint = '', $validator = null,     $related = '', $module       = '',
         *                      $item = '', $event     = 'filler', $filter  = '', $autocomplete = false)
         */
        $learningPeriodLabel = new MText('learningPeriodLabel', _M('Learning period',$module) . ':');
        $learningPeriodLabel->setWidth(FIELD_CONTAINER_SIZE);

        $learningPeriodIdS = new MLookupTextField('learningPeriodIdS', $this->learningPeriodIdS->value, '', FIELD_LOOKUPFIELD_SIZE, null, null, 'limbo,limbo,limbo,limbo,limbo,learningPeriodDescriptionS', $module, 'LearningPeriod', null, array('periodId' => 'periodId'), true);
        $learningPeriodIdS->setJsHint(_M('Enter the learning period code', $module));

        $learningPeriodDescriptionS = new MTextField('learningPeriodDescriptionS', $this->learningPeriodDescriptionS->value, '', FIELD_DESCRIPTION_SIZE);
        $learningPeriodDescriptionS->setJsHint(_M('Learning period description',$module));
        $learningPeriodDescriptionS->setReadOnly(true);

        $hctLearningPeriod = new MHContainer('hctLearningPeriod', array($learningPeriodLabel, $learningPeriodIdS, $learningPeriodDescriptionS));
        $fields[]  = $hctLearningPeriod;


        $messageS = new MTextField('messageS', $this->messageS->value, _M('Message',$module), 40);
        $messageS->setJsHint(_M('Enter the message',$module));
        $fields[] = $messageS;

        $isListenerLabel = new MText('isListenerLabel', _M('Shown for listener pupils',$module) . '?');
        $isListenerLabel->setWidth(FIELD_CONTAINER_SIZE);

        $isListenerS = new MRadioButtonGroup('isListenerS', '', SAGU::listTrueFalse(1), $this->isListenerS->value, null, 'horizontal');
        $isListenerS->SetShowLabel(false);

        $hctIsListener = new MHContainer('hctIsListener', array($isListenerLabel, $isListenerS));
        $fields[]  = $hctIsListener;

        $opts = array (
                        'E' => _M('Enrolled',$module),
                        'F' => _M('Freshmen',$module),
                        'O' => _M('Others',$module)
                      );

        $statusS = new MSelection('statusS', $this->statusS->value, _M('Show for',$module), $opts);
        $statusS->setJsHint(_M('For what kind of pupil will this message be shown?', $module));
        $fields[] = $statusS;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);

        // get filters values
        $filters->messageContractRenewalId  = $this->messageContractRenewalIdS->value;
        $filters->learningPeriodId          = $this->learningPeriodIdS->value;
        $filters->periodId                  = $this->periodId->value;
        $filters->message                   = $this->messageS->value;
        $filters->isListener                = $this->isListenerS->value;
        $filters->status                    = $this->statusS->value;

        unset($this->messageContractRenewalIdS->value);

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdMessageContractRenewalSearch',$filters);
        $business = $MIOLO->getBusiness($module,'BusMessageContractRenewal');
        $data = $business->searchMessageContractRenewal($filters);
        $grdResults->setData($data);

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);

        $this->page->onLoad('document.' . $this->name . '.periodId.focus();');
        $this->setLabelWidth(FIELD_LABEL_SIZE);

    }

}

?>
