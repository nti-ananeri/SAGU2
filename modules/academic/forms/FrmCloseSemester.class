<?php

/**
 * Close curricular components in semester
 *
 * @author Daniel Afonso Heisler [daniel@hsti.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Marcus Vinicius Magalhaes Machado [mvmmachado@gmail.com]
 *
 * @since
 * Class created on 13/07/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to close de semester
 **/
class FrmCloseSemester extends MForm
{
    private $home;
    private $groupId;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
    	
        parent::__construct(_M('Close curricular component', 'services'));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $action   = MIOLO::getCurrentAction();
        $module   = MIOLO::getCurrentModule();

        $data = $this->getData();
        $data->periodId = MIOLO::_REQUEST(periodId);
        $data->classId = MIOLO::_REQUEST(classId);
        $business   = $MIOLO->getBusiness($module, 'BusCloseSemester');
		$dataX      = $business->searchCloseSemester($data);

        $grd    = $MIOLO->getUI()->getGrid($module, 'GrdCloseSemester');
        $grd->setData($dataX);
		$this->addField($grd);

    }

    /**
     * Event triggered when user chooses Ok from form
     **/
    public function submit_button_click($sender=NULL)
    {
        set_time_limit(0);
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();
		$module = 'academic';
        $selects = MIOLO::_request('selectGrdCloseSemester');
        if ( count($selects) > 0 )
        {
            foreach ( $selects as $item => $groupId )
            {
                $business = $MIOLO->GetBusiness('services', 'BusProfessor');
                $ok       = $business->closeGroup($groupId);
                if ( $ok != '0' ) 
                {
                    break ;
                }
            }
            if ( $ok == '0' )
            {
                $goto = SAGU::getStackBackUrl();
                $goto = strlen((string)$goto)>0 ? $goto : $MIOLO->getCurrentURL($module, $action);
                $caption = _M('Information',$module);
                $MIOLO->information(MSG_RECORD_UPDATED, $goto);
            }
            else
            {
                $msg  = _M('Error executing requested operation.',$module).'<br>'.$ok;
                $goto = SAGU::getStackBackUrl();
                $goto = strlen((string)$goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
                $caption = _M('Error',$module);
                $this->addError( $msg, $goto, $caption );
            }
        }

    }

}

?>
