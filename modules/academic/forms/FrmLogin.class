<?php

/**
 * Login form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 07/10/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate an enroll
 **/
class FrmLogin extends MForm
{

    private $postAction;

    /**
     * Class constructor
     **/
    function __construct($postAction)
    {

        $module = MIOLO::getCurrentModule();

        parent::__construct(_M('Login', $module));

        $this->postAction = $postAction;
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $session = $MIOLO->session;
        $session->SetValue('loginUid',null);
        $session->SetValue('loginPasswd',null);

        if ( isset($MIOLO->getLogin()->id) )
        {
            $msg = _M('You have no permission to enroll other pupils. If you want to proceed with your own enroll, enter your pupil code and password then click the Login button.', 'academic');
            $this->addError($msg);
        }
        $loginUid     = new MTextField('loginUid', $this->getFormValue('loginUid'), _M('Code',$module), 15);
        $loginUid->setJsHint(_M('Enter the person UID', $module));
        $validators[] = new MRequiredValidator('loginUid');
        $fields[]     = $loginUid;

        $loginPasswd  = new MPasswordField('loginPasswd', $this->getFormValue('loginPasswd'), _M('Password',$module), 15);
        $loginPasswd->setJsHint(_M('Enter the person password', $module));
        $validators[] = new MRequiredValidator('loginPasswd');
        $fields[]     = $loginPasswd;

        $fields[]     = new Separator('');

        //Error container
        $divError     = new MDiv('divError', $lblMsg, null, 'align=center');
        //$divError->addStyle('text-align', 'center');
        $fields[]     = $divError;

        unset($flds);
        $flds[]       = new MButton('btnOk', _M('Login', $module), null);
        $flds[]       = new Separator('');

        $divButtons   = new MDiv('divButtons', $flds, null, 'align=center');
        //$divButtons->addStyle('text-align', 'center');
        $fields[]     = $divButtons;

        $this->page->onLoad('document.' . $this->name . '.loginUid.focus()');

        $this->setFields($fields);
        $this->setWidth('40%');
        $this->setValidators($validators);
        $this->setLabelWidth(100);
        $this->setShowPostButton(false);
        //$this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
    }

    /**
     * Event triggered when user click ok
     **/
    public function btnOk_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $loginUid    = $this->loginUid->value;
        $loginPasswd = $this->loginPasswd->value;

        $MIOLO->uses('classes/sagu.class','basic');

        if ( SAGU::authenticate($loginUid, $loginPasswd) )
        {
            $session = $MIOLO->session;
            $session->setValue('loginUid',$loginUid);
            $session->setValue('loginPasswd',$loginPasswd);

            $this->page->mGoto($MIOLO->getActionURL($module, $this->postAction));
        }
        else
        {
            $msg     = _M('User and password don\'t match.', $module);

            $lblMsg        = new MText('lblMsg',$msg);
            $lblMsg->color = 'red';

            $flds[] = $lblMsg;
            $flds[] = new Separator('');
            $this->loginPasswd->value = '';

            $this->divError->addControl($flds);
        }
    }

}

?>
