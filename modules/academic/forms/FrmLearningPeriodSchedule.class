<?php

/**
 * Learning period schedule form
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 08/02/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate an enroll
 **/
class FrmLearningPeriodSchedule extends MForm
{

    /**
     * Class constructor
     **/
    function __construct()
    {

        $action = MIOLO::getCurrentAction();
        $module = MIOLO::getCurrentModule();
        $MIOLO  = MIOLO::getInstance();

        parent::__construct(_M('Learning period schedule', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO        = MIOLO::getInstance();
        $module       = MIOLO::getCurrentModule();
        $action       = MIOLO::getCurrentAction();

        $toolbar = new MToolBar('toolbar');
        $toolbar->disableButton('tbBtnDelete');
        $toolbar->disableButton('tbBtnSave');
        $toolbar->disableButton('tbBtnSearch');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $action, null, array('event' => 'bookmark'));
        $toolbar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Learning period schedule', $action, 'learningperiodschedule-16x16.png', true);
        }
        //fim favoritos
        
        $fields[] = $toolbar;
        
        $businessPeriod = $MIOLO->getBusiness($module, 'BusPeriod');
        $periodId       = new MComboBox('periodId', strlen((string)$this->getFormValue('periodId', $data->periodId))>0 ? $this->getFormValue('periodId', $data->periodId) : CURRENT_PERIOD_ID, _M('Period',$module), $businessPeriod->listPeriod() );
        $periodId->setJsHint(_M('Enter the period code', $module));
        $fields[]       = $periodId;
        //$validators[] = new MRequiredValidator('periodId');

        $printScheduleLabel = new MText('printScheduleLabel', _M('Print schedule',$module) . '?');
        $printScheduleLabel->setWidth(FIELD_CONTAINER_SIZE);

        $printSchedule_ = $this->GetFormValue('printSchedule',$data->printSchedule) ? $this->GetFormValue('printSchedule',$data->printSchedule) : DB_FALSE;
        $printSchedule = new MRadioButtonGroup('printSchedule', '', SAGU::listYesNo('1') , $printSchedule_, null, 'horizontal');
        $printSchedule->SetShowLabel(false);

        $hctPrintSchedule = new MHContainer('hctPrintSchedule', array($printScheduleLabel, $printSchedule));
        $fields[]  = $hctPrintSchedule;

        $fields[] = new MSeparator();
        
        //$this->setValidators($validators);
        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));

    }

    /**
     * Event triggered when user click print
     **/
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $data = $this->getData(); //get form's data
        
        $MIOLO->getClass($module, 'RptLearningPeriodSchedule'); //get the RptEnrollConfirmation class

        $report = new RptLearningPeriodSchedule($data); //instanciate the class
    }
}

?>
