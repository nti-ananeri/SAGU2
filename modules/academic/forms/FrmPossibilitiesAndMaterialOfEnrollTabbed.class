<?php

/**
 * Physical person tabbed form
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 29/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * TabbedForm to manipulate all peoples
 **/
class FrmPossibilitiesAndMaterialOfEnrollTabbed extends MTabbedForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {

        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $MIOLO->uses('forms/FrmPossibilitiesAndMaterialOfEnroll.class',$module);
        $MIOLO->uses('forms/FrmPossibilitiesAndMaterialOfEnrollTest.class',$module);

        //header
        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnPrint');
        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnNew');
        $toolBar->disableButton('tbBtnSave');
        $this->header = $toolBar;

        parent::__construct();

        $this->setPainterMethod('javascript');
        $this->pagewidth  = 400;
        $this->pageheight = 350;

        $frmPerson = new FrmPossibilitiesAndMaterialOfEnroll($data);
        $this->addPage($frmPerson);

        $frmPhysicalPerson = new FrmPossibilitiesAndMaterialOfEnrollTest($data);
        $this->addPage($frmPhysicalPerson);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

}

?>
