<?
/**
*
* @author Giovani Murilo Dantas Correa [gmurilo@isolution.inf.br]
*
* $version: $Id$
*
* \b Maintainers \n
* Daniel Afonso Heisler [daniel@isolution.inf.br]
*
* @since
* Class created on 23/03/2009
*
* \b Organization: \n
* iSolution - Soluções de Internet \n
* The iSolution TEAM
*
* \b CopyLeft: \n
* CopyLeft (L) 2007 iSolution - Soluções de Internet \n
*
* \b License \n
* Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
*
* \b History \n
* See history in CVS repository: http://isolution.inf.br   
*
**/
set_time_limit(0);        
$MIOLO = MIOLO::getInstance();

define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptLessonsContent extends PDF
{
    public $module = 'academic';
    public $group;

    public function __construct($filters = NULL)
    {
        $MIOLO = MIOLO::getInstance();
        $this->useUserInfo = false;
        $this->title = strtoupper(_M('Lessons content', 'academic'));
        $db = $MIOLO->getBusiness('academic', 'BusLessonsContent');
        $contents = $db->getLessonsContent($filters);
        $this->contents = $contents;
        $this->filters = $filters;
        $db = $MIOLO->getBusiness('academic', 'BusCallList');
        $this->group = $db->getHeader($this->filters);
        $this->filters->unitId = $this->group->unitId;
        parent::__construct();
        $this->addPage('P', 'mm', 'A4');
        $this->aliasNbPages();
        $this->criaReport();
		$this->output();
    }
    
    public function getHeader ( )
    {
        $MIOLO = MIOLO::getInstance();
        $db = $MIOLO->getBusiness('academic', 'BusCallList');
        $degree = $db->getDegreeDescription($group);
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.4,$this->lsize,  _M('Professor','academic'). ':', 'LT', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*5.8, $this->lsize, $group->professorName, 'T');
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize, _M('Class', 'academic') .':', 'T');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*2.4, $this->lsize,   $group->classId, 'T');
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.0,$this->lsize,  _M('Serie','academic'). ':', 'T', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize, $group->periodId, 'TR', null, 'R');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.4, $this->lsize, _M('Curricular component', 'academic') .':', 'L', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*5.8, $this->lsize,   $group->curricularComponentName, '');
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize, _M('H.L.', 'academic') .':', '', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.0, $this->lsize,   $group->lessonNumberHours. 'H', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize, _M('Period', 'academic') .':', '', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize,   $group->serie, '', null, 'L');
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.0, $this->lsize, _M('Turn', 'basic') .':', '', null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize,   $group->charId, 'R', null, 'R');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*1.4,$this->lsize,  _M('Course','academic'). ':', 'LB',null,  'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*9.5, $this->lsize, $group->courseName, 'B');

        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.4,$this->lsize,  _M('Room','academic'). ':', 'B',null,  'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(($this->psize/12)*0.7, $this->lsize, $group->room, 'RB', null, 'R');
        $this->ln();
        $this->ln();
    }
    public function criaReport()
    {
        $this->fontSizeBody = 8;
        if( count($this->contents) == 0 )
        {
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->SetFillColor(255,0,0);
            $this->cell($this->psize, $this->lsize, _M('No data found to process', 'finance'), null, null, 'C', 1);
            $this->output();
            return;
        }
        
        $this->getHeader();

        $this->colsize[0] = 18;
        $this->colsize[1] = 8;
        $this->colsize[2] = 15;
        $this->colsize[3] = 19;
        $this->colsize[4] = $this->psize - array_sum($this->colsize);
        $this->colname[0] = _M('Date', 'basic');
        $this->colname[1] = _M('Turn', 'basic');
        $this->colname[2] = _M('Week day', 'basic');
        $this->colname[3] = _M('Last modification', 'academic');
        $this->colname[4] = _M('Content', 'academic');

        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        foreach ( $this->colname as $coluna => $valor )
        {
            $this->setFont(DEFAULT_REPORT_FONT, 'B', (strlen((string)$valor)/.5) <= $this->colsize[$coluna] ? $this->fontSizeBody : ceil($this->colsize[$coluna]/(strlen((string)$valor)/3.5)) );
            $this->cell($this->colsize[$coluna], $this->lsize, strtoupper($valor), 1, NULL, 'C');
        }
        $this->ln();

        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        foreach ( $this->contents as $item => $dias )
        {
            if ( strlen((string)implode("\n", $dias[3])) > 0 )
            {
                $oldy = $this->y;
                $x[0] = $this->x;
                $this->cell($this->colsize[0], $this->lsize, $dias[0], 'TLR', NULL, 'C');
                $x[1] = $this->x;
                $this->cell($this->colsize[1], $this->lsize, $dias[1], 'TLR', NULL, 'C');
                $x[2] = $this->x;
                $this->cell($this->colsize[2], $this->lsize, $dias[2], 'TLR', NULL, 'C');
                $x[3] = $this->x;
                $this->setFont(DEFAULT_REPORT_FONT, '', 6);
                $this->cell($this->colsize[3], $this->lsize, $dias[4], 'TLR', NULL, 'C');
                $x[4] = $this->x;
                $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
                $this->multicell($this->colsize[4], $this->lsize, implode("\n", $dias[3]), 1);
                foreach ( $x as $item => $value )
                {
                    $this->line($value, $oldy, $value, $this->y);
                }
            }
            else
            {
                $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
                $this->cell($this->colsize[0], $this->lsize*4, $dias[0], 1, NULL, 'C');
                $this->cell($this->colsize[1], $this->lsize*4, $dias[1], 1, NULL, 'C');
                $this->cell($this->colsize[2], $this->lsize*4, $dias[2], 1, NULL, 'C');
                $this->cell($this->colsize[3], $this->lsize*4, $dias[4], 1, NULL, 'C');
                $this->multicell($this->colsize[4], $this->lsize*4, NULL, 1);
            }

        }
        $this->ln(5);
        $this->cell($this->psize,$this->lsize, strtoupper($this->pdfInfo->cityName . '/' . $this->pdfInfo->stateId . ', _____ '._M('of', 'academic') .' __________________________' . _M('of', 'academic') . ' __________ .'), null, null, 'C');
        $this->ln();
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->defaultFontSize);
        $this->cell(($this->psize/12), $this->lsize, '', '', null, 'L');
        $this->cell(($this->psize/6)*2, $this->lsize, '', 'B', null, 'L');
        $this->cell(($this->psize/6), $this->lsize, '', '', null, 'L');
        $this->cell(($this->psize/6)*2, $this->lsize, '', 'B', null, 'R');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->defaultFontSize);
        $this->cell(($this->psize/2), $this->lsize, $this->group->professorName , null, null, 'C');
        $this->cell(($this->psize/2), $this->lsize, $this->group->coordinatorName , null, null, 'C');
        $this->ln();
        $this->cell(($this->psize/2), $this->lsize, _M('Professor Signature', 'academic'), null, null, 'C');
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->defaultFontSize);
        $this->cell(($this->psize/2), $this->lsize, _M('Course Coordinator Signature', 'academic'), null, null, 'C');
    }

}
?>
