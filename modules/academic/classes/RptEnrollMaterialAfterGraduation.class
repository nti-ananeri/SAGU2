<?php

$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

define('REPORT_ID', 'SP001');
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $col  = 0;

    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $this->setY(15);
        $module = MIOLO::getCurrentModule();
        $pn     = $this->PageNo().'/{nb}';
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $this->setFont(DEFAULT_REPORT_FONT, 'B', 12);
        $this->ln(4);

        $busCompany = $MIOLO->getBusiness('basic', 'BusCompany');
        $company    = $busCompany->getCompany(DEFAULT_COMPANY_CONF);

        $this->cell(200, 8, $company->personName . ' - ' . $company->companyTypeDescription, '', 0, 'C');
        $this->ln(6);
        $this->cell(200, 8, 'PÓS-GRADUAÇÃO DE PESQUISA, EXTENSÃO E PÓS-GRADUAÇÃO - PROPEX', '', 'C','C');
        $this->ln(6);
    }
}

/**
 * PDF extension to generate report
 */
class RptEnrollMaterialAfterGraduation
{
    /**
     * Method to generate the report
     */
    public function RptEnrollMaterialAfterGraduation($data = null)
    {

        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busCompany = $MIOLO->getBusiness('basic', 'BusCompany');
        $company    = $busCompany->getCompany(DEFAULT_COMPANY_CONF);
        $busFile    = $MIOLO->getBusiness('basic', 'BusFile');

//         $businessCoursed = $MIOLO->getBusiness($module, 'BusPossibilitiesAndMaterialOfEnroll');
//         $rdata  = array ( 
//                           $businessCoursed->coursedCurricularComponent($data),
//                           $businessCoursed->possibilitiesOfEnroll($data),
//                           $businessCoursed->otherCurricularComponent($data),
//                           $businessCoursed->complementaryActivities($data),
//                           $businessCoursed->personData($data[0]),
//                           $businessCoursed->hangingDocuments($data),
//                           $businessCoursed->responsableLegal($data),
//                           $businessCoursed->footerMessages($data),
//                           $busFile->getFile($company->logotypePng),
//                           $data[9],
//                           $data[10],
//                           $data[6],
//                           $businessCoursed->allReports($data)
//                         );
        // Generating PDF file
        $this->generateContent($data);
    }

    function generateContent($rdata)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busContract       = $MIOLO->getBusiness($module, 'BusContract');
        $busPhysicalPeron  = $MIOLO->getBusiness('basic', 'BusPhysicalPerson');
        $busLearningPeriod = $MIOLO->getBusiness($module, 'BusLearningPeriod');

        $busPossibiliesAndMaterial  = $MIOLO->getBusiness($module, 'BusPossibilitiesAndMaterialOfEnrollAfterGraduation');

        $this->pdf = new PDF();
        $this->pdf->aliasNbPages();

        $getLearningPeriod = $busLearningPeriod->getLearningPeriod($rdata['learningPeriod']);

        $filters2->courseId      = $getLearningPeriod->courseId;
        $filters2->courseVersion = $getLearningPeriod->courseVersion;

        $this->pdf->setFillColor(242);

        if ( strlen((string)$rdata['contractId']) > 0 )
        {
            $this->pdf->addPage('P', 'mm', 'A4');
            $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 10);

            //Relatório individual
            $getContract = $busContract->getContract($rdata['contractId']);

            $this->pdf->cell(200, 8, $getContract->courseName, '', 0, 'C');
            $this->pdf->ln(6);
            $this->pdf->cell(200, 8, $rdata['periodId'] . ' ' . _M('COURSE', $module) . ' ' . $rdata['contractCourseId'], '', 0, 'C');
            $this->pdf->ln(6);
            $this->pdf->cell(200, 8, _M('ENROLL REQUERIMENT', $module), '', 0, 'C');

            $getPhysicalPerson = $busPhysicalPeron->getPhysicalPerson($rdata['contractPersonId']);

            $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 10);
            $this->pdf->ln(6);
            $this->pdf->cell(120, 8, _M('PUPIL', $module) . ': ' . $getContract->personName, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('ID', $module) . ': ' . $getContract->personId, '', 0, 'L');
            $this->pdf->ln(6);
            $this->pdf->cell(120, 8, $getPhysicalPerson->location . ' ' . $getPhysicalPerson->number . ', ' . $getPhysicalPerson->complement, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('NEIGHBORHOOD', $module) . ': ' . $getPhysicalPerson->neighborhood, '', 0, 'L');
            $this->pdf->ln(6);
            $this->pdf->cell(80, 8, _M('CITY', $module) . ': ' . $getPhysicalPerson->cityName, '', 0, 'L');
            $this->pdf->cell(40, 8,  _M('ZIP CODE', $module) . ': ' . $getPhysicalPerson->zipCode, '', 0, 'L');
            $this->pdf->cell(80, 8,  _M('PHONE', $module) . ': ' . $getPhysicalPerson->residentialPhone, '', 0, 'L');
            $this->pdf->ln(10);

            $this->pdf->cell(30, 8,  _M('COD', $module),                  'TBL', 0, 'L', 1);
            $this->pdf->cell(120, 8, _M('CURRICULAR COMPONENT', $module), 'TB',  0, 'L', 1);
            $this->pdf->cell(30, 8,  _M('SCHEDULE', $module),             'TBR', 0, 'L', 1);
            $this->pdf->ln(10);

            $filters->courseId      = $rdata['contractCourseId'] ;
            $filters->courseVersion = $rdata['contractCourseVersion'] ;

            $afterGraduationCurricularComponents = $busPossibiliesAndMaterial->possibilitiesOfEnroll($filters);

            $auxCargaHoraria = 0;
            foreach ( $afterGraduationCurricularComponents as $key => $value )
            {
                $auxCargaHoraria += $value[2];
                $this->pdf->cell(30, 8,  $value[0], '', 0, 'L');
                $this->pdf->cell(120, 8, substr($value[1], 0, 40), '',  0, 'L');
                $this->pdf->cell(30, 8,  $value[2] . ' h.a.', '', 0, 'L');
                $this->pdf->ln(6);
            }
                $this->pdf->cell(30, 8,  '', 'TBL', 0, 'L', 1);
                $this->pdf->cell(120, 8, 'TOTAL', 'TB',  0, 'L', 1);
                $this->pdf->cell(30, 8,  $auxCargaHoraria . ' h.a.', 'TBR', 0, 'L', 1);
                $this->pdf->ln(15);
                $this->pdf->cell(200, 8, 'Lajeado,_____ de _________________ de 2006', '', 0, 'L');
                $this->pdf->ln(15);
                $this->pdf->cell(120, 8, '', '', 0, 'L');
                $this->pdf->cell(60, 8, '__________________________', '', 0, 'C');
                $this->pdf->ln(5);
                $this->pdf->cell(120, 8, '', '', 0, 'L');
                $this->pdf->cell(60, 8, 'Aluno', '', 0, 'C');

                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['employeeName'], '', 0, 'L');
                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['functionDescription'], '', 0, 'L');
                $this->pdf->ln(5);
                $this->pdf->cell(50, 8, $rdata['sector'], '', 0, 'L');

                $this->pdf->close();
                $this->pdf->output();
        }
        else
        {
            //Relatório p/ todos os cursos
            $personsContract = $busPossibiliesAndMaterial->contractPersonsCourse($filters2);

            foreach ( $personsContract as $key1 => $value1 )
            {
                $this->pdf->addPage('P', 'mm', 'A4');
                $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 10);

                //Relatório individual
                $this->pdf->cell(200, 8, $getLearningPeriod->courseName, '', 0, 'C');
                $this->pdf->ln(6);
                $this->pdf->cell(200, 8, $rdata['periodId'] . ' ' . _M('COURSE', $module) . ' ' . $getLearningPeriod->courseId, '', 0, 'C');
                $this->pdf->ln(6);
                $this->pdf->cell(200, 8, _M('ENROLL REQUERIMENT', $module), '', 0, 'C');

                $getPhysicalPerson = $busPhysicalPeron->getPhysicalPerson($value1[0]);

                $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 10);
                $this->pdf->ln(6);
                $this->pdf->cell(120, 8, _M('PUPIL', $module) . ': ' . $getPhysicalPerson->name, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('ID', $module) . ': ' . $getPhysicalPerson->personId, '', 0, 'L');
                $this->pdf->ln(6);
                $this->pdf->cell(120, 8, $getPhysicalPerson->location . ' ' . $getPhysicalPerson->number . ', ' . $getPhysicalPerson->complement, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('NEIGHBORHOOD', $module) . ': ' . $getPhysicalPerson->neighborhood, '', 0, 'L');
                $this->pdf->ln(6);
                $this->pdf->cell(80, 8, _M('CITY', $module) . ': ' . $getPhysicalPerson->cityName, '', 0, 'L');
                $this->pdf->cell(40, 8,  _M('ZIP CODE', $module) . ': ' . $getPhysicalPerson->zipCode, '', 0, 'L');
                $this->pdf->cell(80, 8,  _M('PHONE', $module) . ': ' . $getPhysicalPerson->residentialPhone, '', 0, 'L');
                $this->pdf->ln(10);
                $this->pdf->cell(30, 8,  _M('COD', $module),                  'TBL', 0, 'L', 1);
                $this->pdf->cell(120, 8, _M('CURRICULAR COMPONENT', $module), 'TB',  0, 'L', 1);
                $this->pdf->cell(30, 8,  _M('SCHEDULE', $module),             'TBR', 0, 'L', 1);
                $this->pdf->ln(10);

                $filters->courseId      = $getLearningPeriod->courseId;
                $filters->courseVersion = $getLearningPeriod->courseVersion;

                $afterGraduationCurricularComponents = $busPossibiliesAndMaterial->possibilitiesOfEnroll($filters);

                $auxCargaHoraria = 0;
                foreach ( $afterGraduationCurricularComponents as $key => $value )
                {
                    $auxCargaHoraria += $value[2];
                    $this->pdf->cell(30, 8,  $value[0], '', 0, 'L');
                    $this->pdf->cell(120, 8, substr($value[1], 0, 40), '',  0, 'L');
                    $this->pdf->cell(30, 8,  $value[2] . ' h.a.', '', 0, 'L');
                    $this->pdf->ln(6);
                }
                    $this->pdf->cell(30, 8,  '', 'TBL', 0, 'L', 1);
                    $this->pdf->cell(120, 8, 'TOTAL', 'TB',  0, 'L', 1);
                    $this->pdf->cell(30, 8,  $auxCargaHoraria . ' h.a.', 'TBR', 0, 'L', 1);
                    $this->pdf->ln(15);
                    $this->pdf->cell(200, 8, 'Lajeado,_____ de _________________ de 2006', '', 0, 'L');
                    $this->pdf->ln(15);
                    $this->pdf->cell(120, 8, '', '', 0, 'L');
                    $this->pdf->cell(60, 8, '__________________________', '', 0, 'C');
                    $this->pdf->ln(5);
                    $this->pdf->cell(120, 8, '', '', 0, 'L');
                    $this->pdf->cell(60, 8, 'Aluno', '', 0, 'C');

                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['employeeName'], '', 0, 'L');
                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['functionDescription'], '', 0, 'L');
                    $this->pdf->ln(5);
                    $this->pdf->cell(50, 8, $rdata['sector'], '', 0, 'L');
            }

            $this->pdf->close();
            $this->pdf->output();
        }

    }
}

?>
