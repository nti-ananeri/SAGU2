<?php
set_time_limit(0);        
$MIOLO  = MIOLO::getInstance();
define('REPORT_ID', 'Contrato de Prestação de Serviços Educacionais'); 
$module = 'academic';
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptContractDocument extends PDF
{
    public function __construct($filters = NULL)
    {
        $MIOLO = MIOLO::getInstance();
        $this->title = strtoupper(REPORT_ID)." - ". strtoupper(_M('Period', 'academic')).": ". (strlen((string)$filters->periodId) > 0 ? $filters->periodId : CURRENT_PERIOD_ID) ;
	$this->filters->unitId = $filters->academic->contract->unitId;
	parent::__construct();
        $this->useUserInfo = false;
        $this->AddPage('P', 'mm', 'A4');
        $this->aliasNbPages();
        $this->generatePDF($filters);
    }
	
    public function generatePDF($data)
    {
        $this->generateContent($data);
        PDF::generatePDF();
    }

    public function Header()
    {
        parent::Header();
    }
    
    public function Footer()
    {
        parent::Footer();
    }

    protected function replaceText($rdata)
    {
        parent::replaceText($rdata);
//       	MIOLO::vd($this->procurar); 
	if ( strlen((string)$rdata->contractText) > 0 )
        {
            $text = $rdata->contractText;
        }
        elseif ( $rdata->academic->contract->formationLevelId == GRADUATION_FORMATION_LEVEL_ID )
        {
            if ( $rdata->basic->responsable->cpf != $rdata->basic->person->cpf && strlen((string)$rdata->basic->responsable->cpf) > 0 && defined('GRADUATION_DOCUMENT_TEXT_RESPONSABLE') )
            {
                $text = GRADUATION_DOCUMENT_TEXT_RESPONSABLE;
            }
            else
            {
                $text = GRADUATION_DOCUMENT_TEXT;
            }
        }
        elseif ( $rdata->academic->contract->formationLevelId == TECHNICAL_FORMATION_LEVEL_ID )
        {
            if ( $rdata->basic->responsable->cpf != $rdata->basic->person->cpf && strlen((string)$rdata->basic->responsable->cpf) > 0 && defined('TECHNICAN_DOCUMENT_TEXT_RESPONSABLE') )
            {
	        $text = TECHNICAN_DOCUMENT_TEXT_RESPONSABLE;
            }
            else
            {
	        $text = TECHNICAN_DOCUMENT_TEXT;
            }
        }
        elseif ( $rdata->academic->contract->formationLevelId == MASTER_FORMATION_LEVEL_ID)
        {
            $text = MASTER_DOCUMENT_TEXT;
        }
        elseif ( $rdata->academic->contract->formationLevelId == AFTER_GRADUATION_FORMATION_LEVEL_ID )
        {
            $text = AFTER_GRADUATION_DOCUMENT_TEXT;
        }
        elseif ( $rdata->academic->contract->formationLevelId == EXTENSION_FORMATION_LEVEL_ID)
        {
            $text = EXTENSION_DOCUMENT_TEXT;
        }
	$text = str_replace($this->procurar, $this->substituir, $text);

        return $text;
    }

    protected function generateContent($rdata)
    {	   
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $module = 'academic';
    	$transDay[5] = 'cinco';
        $transDay[6] = 'seis';
        $transDay[10] = 'dez';
    	$transMonth[1]  = _M('January', $module); 
    	$transMonth[2]  = _M('February', $module);
    	$transMonth[3]  = _M('March', $module);
    	$transMonth[4]  = _M('April', $module);
    	$transMonth[5]  = _M('May', $module);
        $transMonth[6]  = _M('June', $module);
        $transMonth[7]  = _M('July', $module);
        $transMonth[8]  = _M('August', $module);
        $transMonth[9]  = _M('September', $module);
        $transMonth[10] = _M('October', $module);
        $transMonth[11] = _M('November', $module);
        $transMonth[12] = _M('December', $module);            
    
     	$this->setFont(DEFAULT_REPORT_FONT, '', 8);


        $text = $this->replaceText($rdata);
     
        $this->multiCell($this->psize, $this->lsize,$text, null, 'J');
        $this->ln();
        $this->ln(10);
        $this->MultiCell($this->psize, 5,$rdata->company->cityName.', '.date('d').' de '.$transMonth[date('n')].' de '.date('Y'),'','C');  
        $this->ln(10);
 		$this->Cell(($this->psize/10)*2, 5,'','','C');
    	$this->Cell(($this->psize/10)*6, 5,'','B','C');
        $this->ln(5);
   		$this->MultiCell($this->psize, 5,$this->pdfInfo->legalPerson->name . ' - ' . $this->pdfInfo->legalPerson->shortName ,'','C');
    	$this->ln(10);		
	    $this->Cell(($this->psize/10)*2, 5,'','','C');
        $this->Cell(($this->psize/10)*6, 5,'','B','C');
        $this->ln(5);
      	$this->MultiCell($this->psize, 5,'DISCENTE/CONTRATANTE' ,'','C');
	    $this->ln(10);		

        
        if ( $rdata->contract->cpf != $rdata->responsable->cpf && strlen((string)$rdata->responsable->cpf) > 0  )
        {

    		$this->Cell(($this->psize/10)*2, 5,'','','C');
	    	$this->Cell(($this->psize/10)*6, 5,'','B','C');
            $this->ln(5);
	    	$this->MultiCell($this->psize, 5,'FIADOR' ,'','C');
		    $this->ln(10);		
        }

        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'', 'B');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'', 'B');
        $this->ln();
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'1ª Testemunha', '');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'2ª Testemunha', '');
        $this->ln();
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'CPF:', '');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*0.5, 5, '');
        $this->Cell(($this->psize/14)*6, 5,'CPF:', '');

	}
}
?>
