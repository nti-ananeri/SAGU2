<?php

/**
 *
 * This file handles the connection and actions for sprInscription table
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 05/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdListInscriptionSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $home   = MIOLO::getCurrentAction();

        $optionReport = unserialize($filters->returnData);
        if ( $optionReport['reportOption'] == 1 )
        {
            $columns = array(
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( _M('Person id',   $module), 'right', true, null, true, null, false ),
                            new MGridColumn( _M('Person name', $module), 'left',  true, null, true, null, false ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( _M('Residential Phone', $module), 'left', true, null, true, null, false ),
                            new MGridColumn( _M('Work Phone', $module),        'left', true, null, true, null, false ),
                            new MGridColumn( _M('Cell Phone', $module),        'left', true, null, true, null, false )
                            );
    
            // this foreach is necessary until the getActionURL function is
            // able to handle an object parameter
            unset($opts);
            foreach ( $filters as $k => $v )
            {
                if ($k == 'returnData')
                {
                    $v = urlencode($v);
                }
                $opts[$k] = $v;
            }
        }

        if ( $optionReport['reportOption'] == 3 )
        {
            $columns = array(
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( _M('Person id', $module),   'right', true, null, true, null, false ),
                            new MGridColumn( _M('Person name', $module), 'left', true, null, true, null, false ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( null ),
                            new MGridColumn( _M('Residential Phone', $module), 'left', true, null, true, null, false ),
                            new MGridColumn( _M('Work Phone', $module),        'left', true, null, true, null, false ),
                            new MGridColumn( _M('Cell Phone', $module),        'left', true, null, true, null, false ),
                            );
    
            // this foreach is necessary until the getActionURL function is
            // able to handle an object parameter
            unset($opts);
            foreach ( $filters as $k => $v )
            {
                if ($k == 'returnData')
                {
                    $v = urlencode($v);
                }
                $opts[$k] = $v;
            }
        }

        parent::__construct( null, $columns, null, null, 0, 'gridListInscription' );

        $this->setIsScrollable();

        $this->eventHandler();

}
}

?>
