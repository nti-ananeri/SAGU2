<?php

/**
 *
 * This file handles the connection and actions for sprExamProcessOccurrence table
 *
 * @author Leovan Tavares da Silva [rafael@solis.coop.br] 
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 15/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdInscriptionByCourse extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO               = MIOLO::getInstance();
        $module              = MIOLO::getCurrentModule();
        $action              = MIOLO::getCurrentAction();
        $selectiveProcessId  = MIOLO::_request('selectiveProcessId');
        $reportOption        = MIOLO::_request('reportOption');

        $reportOptions = array( array(_M('Inscriptions by normal course',    $module), 1),
                                array(_M('Inscriptions by sex',              $module), 2),
                                array(_M('Inscriptions by exam place',       $module), 3),
                                array(_M('Inscriptions by exam room',        $module), 4),
                                array(_M('Inscriptions by general location', $module), 5)
                              );

        // Firts href ????                
        $returnData = urlencode(serialize(array('selectiveProcessId'=>$selectiveProcessId, 
                                                'reportOption'=>$reportOption)));
        $opts       = array('unitId'=>'#0#', 
                            'courseId'=>'#2#',
        					'turnId'=>'#8#', 
                            'optionNumber'=>'1', 
                            'selectiveProcessId'=>$selectiveProcessId, 
                            'returnTo'=>$action, 
                            'returnData'=>$returnData);
        $href       = $MIOLO->getActionURL($module, 'main:report:listInscriptionByCourse', null, $opts);
        
        // Second href ????
        $opts       =  array('unitId'=>'#0#', 
                             'courseId'=>'#2#',
         					 'turnId'=>'#8#',
                             'optionNumber'=>'1', 
                             'selectiveProcessId'=>$selectiveProcessId, 
                             'returnTo'=>$action, 
                             'returnData'=>$returnData);
        $href2 = $MIOLO->getActionURL($module, 'main:report:listInscriptionByCourse', null, $opts);
        
        $columns = array( new MDataGridColumn('unitId',      _M('Unit',                   $module), 'left',  true, '', false),
                          new MDataGridColumn('description', _M('Unit name',              $module), 'left',  true, '', true),
                          new MDataGridColumn('courseId',    _M('Course id',              $module), 'right', true, '', false),
                          new MGridHyperlink (               _M('Course name',            $module), $href,   '', true),
                          new MGridHyperlink (               _M('Incomplete high school', $module), $href2,  '', true),
                          new MGridHyperlink (               _M('Inscriptions',           $module), $href,   '', true),
                          new MDataGridColumn('vacant',      _M('Vacant',                 $module), 'right', true, '', true),
                          new MDataGridColumn('average',     _M('Average',                $module), 'right', true, '', true)
                        );

        $url = $MIOLO->getCurrentURL();
        parent::__construct( null, $columns, $url, null, 0, 'gridInscriptionByCourse' );
        $this->setTitle( _M('Inscriptions by course', $module) );
        $this->setIsScrollable();
        $this->eventHandler();
    }
}
?>
