<?php

/**
 *
 * This file handles the connection and actions for sprExamProcessOccurrence table
 *
 * @author Rafael Luís Spengler [rafael@solis.coop.br] 
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 08/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdStatisticForAgeComparative extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO               = MIOLO::getInstance();
        $module              = MIOLO::_request('module');
        $action              = MIOLO::getCurrentAction();
        $selectiveProcessId  = MIOLO::_request('selectiveProcessId');
        $reportOption        = MIOLO::_request('reportOption');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */

         $returnData = urlencode(serialize(array('selectiveProcessId'=>$selectiveProcessId, 'reportOption'=>$reportOption, 'event'=>'btnGenerate_click')));

        $href = $MIOLO->getActionURL($module, 'main:report:listInscription', null, array('unitId'=>'#0#', 'courseId'=>'#2#',  'optionNumber'=> '1', 'selectiveProcessId'=>$selectiveProcessId, 'returnTo'=>$action, 'returnData'=>$returnData, 'reportOption' => $reportOption));

        $columns = array(
                        new MDataGridColumn(null),
                        new MDataGridColumn('description', _M('Unit description', $module), 'left',  true,  '', true ),
                        new MDataGridColumn('courseId',    _M('Course id',        $module), 'center', true, '', true ),
                        new MGridHyperlink (               _M('Course name',      $module), $href,    '',   true     ),
                        new MDataGridColumn('age',         _M('Age',              $module), 'center', true, '', true ),
                        new MDataGridColumn('male',        _M('Male',             $module), 'center', true, '', true ),
                        new MDataGridColumn('female',      _M('Female',           $module), 'center', true, '', true ),
                        );

        $url = $MIOLO->getCurrentURL();
        parent::__construct( null, $columns, $url, null, 0, 'gridStatisticForAgeComparative' );
        $this->setTitle( _M('Statistic by language', $module));
        $this->setIsScrollable();
        $this->eventHandler();

    }

}

?>
