<?php
/**
 *
 * This file handles the connection and actions for sprPupilsAndSchoolsPerformanceBulletinPupilsData table
 *
 * @author Rafael Luís Spengler [rafael@solis.coop.br] 
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 05/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPupilsAndSchoolsPerformanceBulletin extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $home   = 'main:report:pupilsAndSchoolsPerformanceBulletin';
        $module = MIOLO::_request('module');
        $selectiveProcessId = MIOLO::_request('selectiveProcessId');
        $personId           = MIOLO::_request('personId');
        
        $href = $MIOLO->getActionURL($module, '', null, array('selectiveProcessId'=>$selectiveProcessId, 'personId'=>'#0#', 'event'=>'btnSearch_click'));

        $columns = array( new MGridColumn(    _M('School id',                   $module), 'left', true, null, true, null, true ),
                          new MGridHyperlink( _M('Current name',                $module), $href,  '',   true, null, true ),
                          new MGridHyperlink( _M('Number of pupils classified', $module), $href,  '',   true, null, true ),
                        );

        $opts = array('schoolId' => '%0%');
        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $opts = array_merge($opts, array('event'=>'btnSearch_click'));
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);

        parent::__construct( null, $columns, $url, 0, 0, 'gridPupilsAndSchoolsPerformanceBulletin' );

        $this->setIsScrollable();
        $this->eventHandler();

    }

}

?>
