<?php
/**
 * Class definition for database entities
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 19/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Solu��es Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Solu��es Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Academic database classes
 */

$MIOLO->uses('types.class', 'basic');

class sprCourseExamBalance extends BasLog
{
    public $examOccurrenceId;
    public $courseVacantId;
    public $weight;
    public $minimunNote;
}

class sprCourseOccurrence extends BasLog
{
    public $courseOccurrenceId;
    public $courseVacantId;
    public $courseId;
    public $courseVersion;
    public $turnId;
    public $unitId;
    public $isAvailable = DB_TRUE;
}

class sprDegree extends BasLog
{
    public $inscriptionId;
    public $examOccurenceId;
    public $degree;
}

class sprExam extends BasLog
{
    public $examId;
    public $description;
    public $shortDescription;
}

class sprExamOccurrence extends BasLog
{
    public $examOccurrenceId;
    public $selectiveProcessId;
    public $selectiveProcessTypeId;
    public $examId;
    public $numberQuestions;
    public $weightQuestion;
    public $numberOrder;
    public $examDateTime;
    public $examDate;
    public $examTime;
    public $isAnswerSheet = DB_FALSE;
    public $maximumPoints;
}

class sprFieldNames extends BasLog
{
    public $fieldNameId;
    public $selectiveProcessId;
    public $fieldName;
    public $fieldType;
    public $tableName;
    public $formDescription;
    public $hintDescription;
}

class sprFieldValues extends BasLog
{
    public $fieldValueId;
    public $fieldNameId;
    public $tableKeyName;
    public $tableKeyValue;
    public $fieldValue;
}

class sprInscription extends BasLog
{
    public $inscriptionId;
    public $selectiveProcessId;
    public $personId;
    public $cityExam;
    public $placeRoomId;
    public $languageId;
    public $isHighSchool = DB_TRUE;
    public $isInternet = DB_FALSE;
    public $dateInscription;
    public $totalPoints;
    public $isClassified = DB_FALSE;
    public $inscriptionInvoiceId;
    public $isCanceled = DB_FALSE;
}

class sprInscriptionOption extends BasLog
{
    public $inscriptionOptionId;
    public $inscriptionId;
    public $courseOccurrenceId;
    public $optionNumber;
}

class sprInscriptionResult extends BasLog
{
    public $inscriptionId;
    public $placeRoomId;
    public $coursePosition;
    public $totalPoints;
}

class sprLanguage extends BasLog
{
    public $languageId;
    public $description;
    public $shortDescription;
}

class sprLanguageOccurrence extends BasLog
{
    public $selectiveProcessId;
    public $languageId;
}

class sprOtherSattleOfMatter extends BasLog
{
    public $otherSattleOfMatterId;
    public $selectiveProcessId;
    public $description;
    public $tableName;
    public $fieldName;
    public $priority;
    public $orderBy;
}

class sprPlace extends BasLog
{
    public $placeId;
    public $description;
    public $shortDescription;
    public $cityId;
    public $location;
    public $complement;
    public $neighborhood;
    public $personId;
}

class sprPlaceOccurrence extends BasLog
{
    public $selectiveProcessId;
    public $placeId;
}

class sprPlaceRoom extends BasLog
{
    public $placeRoomId;
    public $selectiveProcessId;
    public $placeId;
    public $room;
    public $build;
    public $vacant;
    public $priority;
    public $specialNecessity;
    public $languageId;
    public $isInternet   = DB_FALSE;
    public $isHighSchool = DB_FALSE;
}

class sprSelectiveProcess extends BasLog
{
    public $selectiveProcessId;
    public $companyId;
    public $institutionId;
    public $periodId;
    public $description;
    public $beginDate;
    public $optionsNumber;
    public $isLanguage = DB_TRUE;
    public $isHighSchool = DB_FALSE;
    public $minimumPoints;
    public $maximumPoints;
    public $optionsNumberRequired;
}

class sprSelectiveProcessType extends BasLog
{
    public $selectiveProcessTypeId;
    public $description;
}

class sprSelectiveProcessTypeData extends BasLog
{
    public $inscriptionId;
    public $selectiveProcessTypeId;
    public $numberInscription;
}

class sprSelectiveProcessOccurrence extends BasLog
{
    public $selectiveProcessTypeId;
    public $selectiveProcessId;
    public $isMain = DB_FALSE;
    public $priority;
}

class sprTime extends BasLog
{
    public $timeId;
    public $beginTime;
    public $endTime;
}

class sprSattleOfMatter extends BasLog
{
    public $sattleOfMatterId;
    public $examOccurrenceId;
    public $courseVacantId;
    public $priority;
}

class sprCourseVacant extends BasLog
{
    public $courseVacantId;
    public $selectiveProcessId;
    public $vacant;
    public $description;
}

class sprNote extends BasLog
{
    public $inscriptionId;
    public $examOccurrenceId;
    public $examDescription;
    public $personName;
    public $note;
}

class sprAnswerSheet extends BasLog
{
    public $selectiveProcessId;
    public $numberQuestion;
    public $option;
}

class sprInscriptionSetting extends BasLog
{
    public $selectiveProcessId;
    public $beginDate;
    public $endDate;
    public $beginHour;
    public $endHour;
    public $fee;
    public $invoicePrefix;
    public $emailAdmin;
    public $isSocialEconomic = DB_FALSE;
    public $messageFinishInscription;
    public $messageWelcomeInscription;
    public $messageNotDisponibleInscription;
    public $messageDocumentInscription;
    public $messageInformationInscription;
    public $messageHighSchoolConcluedInscription;
    public $messageConcluedInscription;
    public $messageOfInvoice;
    public $bankAccountId;
    public $bankContractId;

}

?>
