<?php

/**
 * Default defines 
 * To report identification
 */
$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();

define('REPORT_ID', 'SP001'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $rdata = 0;

    /**
     * Class constructor
     **/
    function __construct($rdata1)
    {
        parent::__construct();
        $this->rdata = $rdata1;
    }

    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $module = MIOLO::getCurrentModule();
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $module = MIOLO::getCurrentModule();

        $this->setFont(DEFAULT_REPORT_FONT, 'B', 14);
        $this->ln(6);

        $this->cell(290, 8, _M('Classification list from selective process', $module) . ' '. $rdata->selectiveProcessId, '', 'L','C');

        $this->ln(12);

        $this->setFont(DEFAULT_REPORT_FONT, 'B', 8);

        $this->cell(15,  8, '',                              'TBL', 'R','L');
        $this->cell(20,  8, _M('INSC', $module) .     '.',   'TB',  'R','L');
        $this->cell(80,  8, _M('CANDIDATE NAME', $module),   'TB',  'R','L');
        $this->cell(75,  8, _M('COURSE', $module),           'TB',  'R','L');
	$this->cell(30,  8, _M('TURNO', $module),	     'TB',  'R','L');
        $this->cell(25,  8, _M('UNIT', $module),             'TB',  'R','L');
        $this->cell(30,  8, _M('SITUATION', $module),        'TBR',  'R','L');

        $this->ln(8);
    }
}


/**
 * PDF extension to generate report
 */
class RptClassificationInPDF
{
    /**
     * Method to generate the report
     */
    public function RptClassificationInPDF($data = null)
    {
        $module = MIOLO::getCurrentModule();

        $rdata  = $this->getReportData($data);

        $this->pdf = new PDF($rdata);

        $this->generateContent($rdata);

        $this->pdf->close();
        $this->pdf->output();
    }

    /**
     * Get report data information
     */
    private function getReportData($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $rdata->selectiveProcessId       = $data->selectiveProcessId;

        // Classification
        $businessClassification = $MIOLO->GetBusiness($module, 'BusClassification');
        $rdata->classified = $businessClassification->getClassified($data->selectiveProcessId);
        $rdata->excedentes = $businessClassification->getExecedentes($data);

        return $rdata;
    }

    private function generateContent($rdata)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $this->pdf->addPage('L', 'mm', 'A4');

        $this->pdf->setFillColor(242);

        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 8);

        $x = 1;
        for($xAux = 0; $xAux < count($rdata->classified); $xAux++)
        {
               if ($x == 1) //if, que determina se a célula será preenchida ou não
               {
                   $x = 0;
               }
               else
               {
                   $x = 1;
               }

               $this->pdf->cell(15,  6, $xAux+1,  					'TBL', 'R','L', $x);
               $this->pdf->cell(20,  6, $rdata->classified[$xAux][0],  			'TB',  'R','L', $x);
               $this->pdf->cell(80,  6, substr($rdata->classified[$xAux][2], 0, 45),  	'TB',  'R','L',$x);
               $this->pdf->cell(75,  6, $rdata->classified[$xAux][3],  			'TB',  'R','L', $x);
	       $this->pdf->cell(30,  6, $rdata->classified[$xAux][9],			'TB',  'R','L', $x);
               $this->pdf->cell(25,  6, substr($rdata->classified[$xAux][4], 0, 9),  	'TB',  'R','L', $x);
               $this->pdf->cell(30,  6, 'Classificado',  				'TBR',  'R','L', $x);

               $this->pdf->ln(6);
        }

        $this->pdf->addPage('L', 'mm', 'A4');

        for($xAux = 0; $xAux < count($rdata->excedentes); $xAux++)
        {
               if ($x == 1)                         //if, que determina se a célula será preenchida ou não
               {
                   $x = 0;
               }
               else
               {
                   $x = 1;
               }

               $this->pdf->cell(15,  6, $xAux+1,  					'TBL', 'R','L', $x);
               $this->pdf->cell(20,  6, $rdata->excedentes[$xAux][0],  			'TB',  'R','L', $x);
               $this->pdf->cell(80,  6, substr($rdata->excedentes[$xAux][2], 0, 45),  	'TB',  'R','L',$x);
               $this->pdf->cell(75,  6, $rdata->excedentes[$xAux][3],  			'TB',  'R','L', $x);
	       $this->pdf->cell(30,  6, $rdata->classified[$xAux][9],                   'TB',  'R','L', $x);
               $this->pdf->cell(25,  6, $rdata->excedentes[$xAux][4],  			'TB',  'R','L', $x);
               $this->pdf->cell(30,  6, 'Excedente',  					'TBR',  'R','L', $x);

               $this->pdf->ln(6);
        }

    }
}
?>
