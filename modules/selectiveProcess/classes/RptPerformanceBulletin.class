<?php

/**
 * Default defines 
 * To report identification
 */
$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();

define('REPORT_ID', 'SP001'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $module = MIOLO::getCurrentModule();
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $module = MIOLO::getCurrentModule();
        if ($this->type == 1)
        {
            $this->ln();
            $this->ln();
            $this->ln();
            $this->ln();
        }
    }
}


/**
 * PDF extension to generate report
 */
class RptPerformanceBulletin
{
    /**
     * Method to generate the report
     */
    public function RptPerformanceBulletin($data = null)
    {
        $rdata  = $this->getReportData($data);
        $module = MIOLO::getCurrentModule();

        $this->pdf = new PDF();
        $this->generateContent($rdata);

        $this->pdf->close();
        $this->pdf->output();
    }

    /**
     * Get report data information
     */
    private function getReportData($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        // Inscription information
        $busPerformanceBulletin    = $MIOLO->getBusiness($module, 'BusPerformanceBulletin');

        $rdata->inscriptions       = $busPerformanceBulletin->pupilsData($data);
        $rdata->selectiveProcessId = $data->selectiveProcessId;
        $rdata->inscriptionId      = $data->inscriptionId;

        $busCompany  = $MIOLO->getBusiness('basic', 'BusCompany');
        $company     = $busCompany->getCompany(DEFAULT_COMPANY_CONF);

        $rdata->file = $company->personId;

        return $rdata;
    }

    private function generateContent($rdata)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        foreach($rdata as $id1 => $value1)
        {
            if($id1 == 'inscriptions')
            {
                $dataInscription[] = $value1;
                break;
            }
        }

        if ( count($dataInscription) > 0  )
        {
            foreach($dataInscription AS $value2)
            {
                if(count($value2) > 0)
                {
                    foreach($value2 AS $value3)
                    {
                        $this->pdf->addPage('P', 'mm', 'A4');

                        $widhtImage  = 33;
                        $heightImage = 33;

                        $posXImage = 170;
                        $posYImage = 5; 

                        $this->pdf->Image(SAGUFile::getPhotoPath($rdata->file), $posXImage, $posYImage, $widhtImage, PHOTO_FORMAT);

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 18);
                        $this->pdf->ln(17);
                        $this->pdf->cell(200, 8,_M('SELECTIVE PROCESS COMPETITION', $module) . ' ' . $rdata->selectiveProcessId, 8, 'R','C');

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                        $this->pdf->ln(17);
                        $this->pdf->cell(200, 8, _M('PERFORMANCE BULLETIN', $module) . ' - ' . _M('INSCRIPTION', $module) . ' ' . $value3[0], 8, 'R','C');
                        $this->pdf->text(180, 57, $value3[1]);


                        $this->pdf->ln(8);
                        $this->pdf->cell(200, 8, _M('IN ACORD WITH THE 1st OPTION', $module), 8, 'R','C');

                        $busPerformanceBulletin    = $MIOLO->getBusiness($module, 'BusPerformanceBulletin');
                        //Retorna as opções de curso
                        $rdata->coursesOptions     = $busPerformanceBulletin->getCourseOfOptions($value3[0]);

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 14);
                        $this->pdf->ln(8);
                        $this->pdf->cell(200, 8, _M('COURSE OPTIONS', $module).':', 8, 'R','L');
                        $this->pdf->ln(8);

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);

                        foreach($rdata->coursesOptions AS $coursesInscriptionUse)
                        {
                            $this->pdf->cell(200, 8, $coursesInscriptionUse[0] . ' - ' . $coursesInscriptionUse[1], 8, 'R','L');
                            $this->pdf->ln(8);
                        }

                        $this->pdf->SetLineWidth(0.5);
                        $this->pdf->line(10, $this->pdf->getY(), 200, $this->pdf->getY());

                        $sexPerson           = $value3[3] == 'M' ? 'Masculino' : ($value3[3] == 'F' ? 'Feminino' : '');
                        $matiralStatusPerson = $value3[4] == 'C' ? 'Casado(a)' : ($value3[4] == 'D' ? 'Desquitado(a)' : ($value3[4] == 'N' ? 'Não informado'  : ($value3[4] == 'S' ? 'Solteiro(a)' : ($value3[4] == 'E' ? 'Solteiro(a) Emancipado(a)' : ($value3[4] == 'U' ? 'União Estável' : ($value3[4] == 'V' ? 'Viuvo(a)' : '') )) ))) ;

                        $stringIdentPerson = '        ' . $value3[2] . ' ' . _M('sex', $module) . ' ' . $sexPerson . ', ' . $matiralStatusPerson . ' ' . _M('borned in', $module) . ' ' . $value3[5] . ', portador(a) da Carteira de Identidade nº ' . $value3[6] . ', expedida pelo ' . $value3[7] . ' residente à rua/av ' . $value3[8] . ' ' . $value3[9] .  ' ' . $value3[10] .  ' na cidade de ' . $value3[14] . ' obteve o seguinte desempenho:';

                        $this->pdf->ln(2);
                        $this->pdf->multiCell(190, 8, $stringIdentPerson, 8/*, 'R','L'*/);

                        $this->pdf->ln(2);
                        $this->pdf->SetLineWidth(0.5);
                        $this->pdf->line(10, $this->pdf->getY(), 200, $this->pdf->getY());

                        if ( $value3[17] == DB_TRUE ) //is classified
                        {
                            $this->pdf->ln(6);
                            $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                            $this->pdf->cell(60, 8, 'Classificação Geral: ', 8, 'R','L');
                            $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                            $this->pdf->cell(100, 8, $value3[16] . ' º colocado', 8, 'R','L');
                            $this->pdf->ln(8);

                            $selectiveProcessTypeDescription = $busPerformanceBulletin->getSelectiveProcessTypeDescriptioToTotalPoints($value3[0]);

                            $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                            $this->pdf->cell(60, 8, 'Classificação no Curso: ', 8, 'R','L');
                            $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                            $this->pdf->cell(100, 8, $value3[15] . ' º LUGAR, segundo o critério ' . $selectiveProcessTypeDescription . ', para o Curso de ', 8, 'R','L');
                            $this->pdf->ln(8);

                            $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                            $this->pdf->cell(200, 8, $rdata->coursesOptions[0][1], 8, 'R','L');
                            $this->pdf->ln(12);
                        }
                        else //desclassified
                        {
                            $this->pdf->ln(6);
                            $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                            $this->pdf->cell(100, 8, ' Desclassificado para o curso de ' . $rdata->coursesOptions[0][1], 8, 'R','L');
                            $this->pdf->ln(8);
                        }

                        $this->pdf->ln(4);
                        $this->pdf->SetLineWidth(0.5);
                        $this->pdf->line(10, $this->pdf->getY(), 200, $this->pdf->getY());


                        $this->pdf->cell(30, 8, 'DATA', 8, 'R', 'L');
                        $this->pdf->cell(70, 8, 'PROVA', 8, 'R','L');
                        $this->pdf->cell(90, 8, 'NOTA', 8, 'R', 'R');

                        $this->pdf->ln(6);
                        $this->pdf->SetLineWidth(0.5);
                        $this->pdf->line(10, $this->pdf->getY(), 200, $this->pdf->getY());

                        $rdata->examsNotes = $busPerformanceBulletin->getExamNote($value3[0]);    //Retorna as notas das curso

                        $this->pdf->ln(2);
                        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);

                        $totalNote = 0;

                        foreach($rdata->examsNotes  AS $examsNotesUse)
                        {
                            $this->pdf->cell(30, 8, $examsNotesUse[0], 8, 'R', 'L'); //date exam
                            $this->pdf->cell(70, 8, $examsNotesUse[1], 8, 'R','L');  //examDescription
                            $this->pdf->cell(90, 8, $examsNotesUse[2], 8, 'R', 'R'); //examNote

                            $this->pdf->ln(6);

                            //$totalNote += $examsNotesUse[2];
                        }

                        $this->pdf->ln(4);
                        $this->pdf->SetLineWidth(0.5);
                        $this->pdf->line(10, $this->pdf->getY(), 200, $this->pdf->getY());

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                        $this->pdf->cell(30, 8, '', 8, 'R', 'L');
                        $this->pdf->cell(70, 8, 'TOTAL DE PONTOS', 8, 'R','L');

                        $this->pdf->cell(90, 8, $value3[11], 8, 'R', 'R');

                        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                        $this->pdf->ln(24);

                        $this->pdf->cell(30, 8, $value3[2], 8, 'R', 'L');
                        $this->pdf->ln(6);
                        $this->pdf->cell(30, 8, $value3[8] . ', ' . $value3[9] . ' ' . $value3[10] . ' - ' . $value3[12], 8, 'R', 'L');
                        $this->pdf->ln(6);
                        $this->pdf->cell(30, 8, $value3[13] . ' - ' . $value3[14], 8, 'R', 'L');
                        $this->pdf->ln(6);
                    }
                }
            }
        }
    }
}
?>
