<?php
set_time_limit(0);        
$MIOLO  = MIOLO::getInstance();
define('REPORT_ID', 'Termo de Reserva'); 
$module = 'academic';
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptInscriptionReserve extends PDF
{
    public function __construct($filters = NULL)
    {
        $MIOLO = MIOLO::getInstance();
	    //$filters->unitId = $filters->academic->contract->unitId;
	    $filters->unitId = $filters->coursesOptions[0][2];
        //$this->title = strtoupper(REPORT_ID)." - ". strtoupper(_M('Period', 'academic')).": ". (strlen((string)$filters->periodId) > 0 ? $filters->periodId : CURRENT_PERIOD_ID) ;
        $this->title = strtoupper(REPORT_ID);
        parent::__construct($filters);
        $this->useUserInfo = false;
        $this->AddPage('P', 'mm', 'A4');
        $this->aliasNbPages();
        $this->generatePDF($filters);
    }
	
    public function generatePDF($data)
    {
        $this->generateContent($data);
        PDF::generatePDF();
    }

    public function Header()
    {
        parent::Header();
    }
    
    public function Footer()
    {
        $this->lsize = 5;
        parent::Footer();
    }

    protected function replaceText($rdata)
    {
        parent::replaceText($rdata);
        if ( strlen((string)$rdata->contractText) > 0 )
        {
            $text = $rdata->contractText;
        }
        elseif ( $rdata->academic->contract->formationLevelId == GRADUATION_FORMATION_LEVEL_ID )
        {
            if ( $rdata->basic->responsable->cpf != $rdata->academic->contract->cpf && strlen((string)$rdata->basic->responsable->cpf) > 0 && defined('GRADUATION_DOCUMENT_TEXT_RESPONSABLE') )
            {
                $text = GRADUATION_DOCUMENT_TEXT_RESPONSABLE;
            }
            else
            {
                $text = GRADUATION_DOCUMENT_TEXT;
            }
        }
        elseif ( $rdata->academic->contract->formationLevelId == TECHNICAL_FORMATION_LEVEL_ID )
        {
            if ( $rdata->basic->responsable->cpf != $rdata->academic->contract->cpf && strlen((string)$rdata->basic->responsable->cpf) > 0 && defined('TECHNICAN_DOCUMENT_TEXT_RESPONSABLE') )
            {
                $text = TECHNICAN_DOCUMENT_TEXT_RESPONSABLE;
            }
            else
            {
                $text = TECHNICAN_DOCUMENT_TEXT;
            }
        }
        elseif ( $rdata->academic->contract->formationLevelId == MASTER_FORMATION_LEVEL_ID)
        {
            $text = MASTER_DOCUMENT_TEXT;
        }
        elseif ( $rdata->academic->contract->formationLevelId == AFTER_GRADUATION_FORMATION_LEVEL_ID )
        {
            $text = AFTER_GRADUATION_DOCUMENT_TEXT;
        }
        elseif ( $rdata->academic->contract->formationLevelId == EXTENSION_FORMATION_LEVEL_ID)
        {
            $text = EXTENSION_DOCUMENT_TEXT;
        }
        $text = str_replace($this->procurar, $this->substituir, $text);
	    if ( defined('TERM_RESERVE') )
	    {
		   $this->textAppend = str_replace($this->procurar, $this->substituir, TERM_RESERVE);
		   $text = $this->textAppend; 
	    }	
        return $text;
    }

    protected function generateContent($rdata)
    {	   
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

     	$this->setFont(DEFAULT_REPORT_FONT, '', 8);

        $this->lsize = 4;
        
        $text = $this->replaceText($rdata);
     
        $this->multiCell($this->psize, $this->lsize, $text, null, 'J');
        $this->ln($this->lsize*2);
        $this->MultiCell($this->psize, $this->lsize,$this->pdfInfo->legalPerson->cityName.', '.date('d').' de '.SAGU::listMonths(date('n')).' de '.date('Y'),'','C');  
        $this->ln($this->lsize*2);
 		$this->Cell(($this->psize/10)*1, $this->lsize,'','','C');
    	$this->Cell(($this->psize/10)*8, $this->lsize,'','B','C');
        $this->ln($this->lsize+1);
   		$this->MultiCell($this->psize, $this->lsize,$this->pdfInfo->legalPerson->name . ' - ' . $this->pdfInfo->legalPerson->shortName ,'','C');
    	$this->ln($this->lsize*2);		
	    $this->Cell(($this->psize/10)*1, $this->lsize,'','','C');
        $this->Cell(($this->psize/10)*8, $this->lsize,'','B','C');
        $this->ln($this->lsize+1);
        $txt = 'CANDIDATO A ALUNO';
        $this->MultiCell($this->psize, $this->lsize, $txt,'','C');
        $this->ln($this->lsize*2);		
	    $this->Cell(($this->psize/10)*1, $this->lsize,'','','C');
        $this->Cell(($this->psize/10)*8, $this->lsize,'','B','C');
        $this->ln($this->lsize+1);
        $txt = 'RESPONSÁVEL';
        $this->MultiCell($this->psize, $this->lsize, $txt,'','C');
        
	    $this->ln($this->lsize*2);		
	    
	    $this->SetXY($this->lsize-29,10);
	    $this->SetFontSize(18);
	    $this->cell(15,10,$rdata->inscriptions[0][0],1,0,'C');

        
        
	}
}
?>
