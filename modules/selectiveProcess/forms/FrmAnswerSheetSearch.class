<?php

/**
 *
 * This file handles the connection and actions for sprAnswerSheet table
 *
 * @author Rafael Luís Spengler [rafael@solis.coop.br] 
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 08/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the basAnswerSheet table
 */
class FrmAnswerSheetSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Answer sheet', $this->home, 'answerSheet-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;


/*        $selectiveProcessIdS = new MLookupTextField('selectiveProcessIdS', $this->getFormValue('selectiveProcessIdS', $data->selectiveProcessIdS), _M('Selective process id',$module), 10, null, null, null , $module, 'SelectiveProcess', null, null, true);
        $selectiveProcessIdS->setJsHint(_M('Enter the selective process code',$module));
        $fields[]         = $selectiveProcessIdS; */

        $business           = $MIOLO->getBusiness($module,'BusSelectiveProcess');
        $selectiveProcessIdS = new MComboBox('selectiveProcessIdS', $this->getFormValue('selectiveProcessIdS', $data->selectiveProcessId), _M('Selective process id',$module), $business->listSelectiveProcess());
        $selectiveProcessIdS->setJsHint(_M('Enter the selective process code',$module));
        //$selectiveProcessIdS->addAttribute('onChange','document.' . $this->getName() . '.submit()' );
        $fields[]           = $selectiveProcessIdS;

//        $numberQuestionS  = new MTextField('numberQuestionS', $this->getFormValue('numberQuestionS', $data->numberQuestionS), _M('Number questions',$module), 4);
//        $numberQuestionS->setJsHint(_M('Enter the number questions',$module));
//        $fields[]             = $numberQuestionS;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);
        $this->setValidators($validators);

        // get filters values
        $filters->selectiveProcessId       = $this->selectiveProcessIdS->value;
//        $filters->numberQuestion          = $this->numberQuestionS->value;

        $grdResults            = $MIOLO->getUI()->getGrid ($module, 'GrdAnswerSheetSearch', $filters);
        $business              = $this->manager->getBusiness($module,'BusAnswerSheet');
        $dataSearchAnswerSheet = $business->searchAnswerSheet($filters);

        $dataCountAnswerSheet     = $business->countAnswerSheet($filters);

        $dataCountQuestionsAnswer = $business->getNumberQuestions($filters->selectiveProcessId);

        if ( is_array($dataSearchAnswerSheet) && (count($dataSearchAnswerSheet) > 0) )
        {
            $data[0][0] = $dataSearchAnswerSheet[0][0];
            $data[0][1] = $dataCountAnswerSheet[0][0];
            $data[0][2] = $dataCountQuestionsAnswer-$dataCountAnswerSheet[0][0];
        }

        $grdResults->setData($data);

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);
        $this->setLabelWidth(FIELD_LABEL_SIZE);

        $this->page->onLoad('document.' . $this->name . '.selectiveProcessIdS.focus();');

    }

}

?>
