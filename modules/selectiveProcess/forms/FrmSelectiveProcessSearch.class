<?php

/**
 *
 * This file handles the connection and actions for sprSelectiveProcess table
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 05/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the sprSelectiveProcess table
 */
class FrmSelectiveProcessSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Selective process', $this->home, 'selectiveProcess-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $limbo = new MHiddenField('limbo', '');
        $fields[] = $limbo;

        $selectiveProcessIdS = new MTextField('selectiveProcessIdS', $this->selectiveProcessIdS->value, _M('Selective process id',$module), FIELD_ID_SIZE);
        $selectiveProcessIdS->setJsHint(_M('Enter the selective process id',$module));
        $fields[] = $selectiveProcessIdS;
        //$validators[] = new MIntegerValidator('selectiveProcessIdS', '', 'optional');

        /*
         * MLookupTextField class constructor prototype:
         *
         * function __construct($name = '', $value     = '',       $label   = '', $size         = 10,
         *                      $hint = '', $validator = null,     $related = '', $module       = '',
         *                      $item = '', $event     = 'filler', $filter  = '', $autocomplete = false)
         */
        $companyLabelS = new MText('companyLabelS', _M('Company',$module) . ':');
        $companyLabelS->setWidth(FIELD_CONTAINER_SIZE);

        $companyIdS = new MLookupTextField('companyIdS', $this->companyIdS->value, '', FIELD_LOOKUPFIELD_SIZE, null, null, 'companyNameS', 'basic', 'Company', null, null, true);
        //$fields[] = $companyIdS;
        $validators[] = new MIntegerValidator('companyIdS', '', 'optional');

        $companyNameS = new MTextField('companyNameS', $this->companyNameS->value, '', FIELD_DESCRIPTION_SIZE);
        $companyNameS->setJsHint(_M('Enter the company name',$module));
        //$fields[] = $companyNameS;
        $hctCompanyS = new MHContainer('hctCompanyS', array( $companyLabelS, $companyIdS, $companyNameS) );
        $hctCompanyS->setShowLabel(true);
        $fields[]  = $hctCompanyS;

        $limbo = new MHiddenField('limbo', '');
        $fields[] = $limbo;

        $businessPeriod = $MIOLO->getBusiness('academic', 'BusPeriod');
        $period = $businessPeriod->listPeriod();

        $periodIdS = new MComboBox('periodIdS', $this->getFormValue('periodIdS', $data->periodIdS), _M('Period', $module), $period);
        $periodIdS->setJsHint(_M('Select a period', $module));
        $fields[] = $periodIdS;
        //$validators[] = new MRequiredValidator('periodIdS');

        $descriptionS = new MTextField('descriptionS', $this->descriptionS->value, _M('Description',$module), FIELD_DESCRIPTION_SIZE);
        $descriptionS->setJsHint(_M('Enter the description',$module));
        $fields[] = $descriptionS;

        $beginDateS = new MCalendarField('beginDateS', $this->beginDateS->value, _M('Date',$module), FIELD_DATE_SIZE);
        $beginDateS->setJsHint(_M('Enter the begin date',$module));
        $fields[] = $beginDateS;
        $validators[] = new MDATEDMYValidator('beginDateS');

        $optionsNumberS = new MTextField('optionsNumberS', $this->optionsNumberS->value, _M('Options number of course',$module), 8, _M('Options number that will be possible in the inscription of candidate', $module));
        $optionsNumberS->setJsHint(_M('Enter the options number of course',$module));
        $fields[] = $optionsNumberS;
        $validators[] = new MIntegerValidator('optionsNumberS', '', 'optional');


        //isLanguage

        $isLanguageLabel = new MText('isLanguageLabel', _M('Language',$module) . ':');
        $isLanguageLabel->setWidth(FIELD_CONTAINER_SIZE);

        $isLanguageS = new MRadioButtonGroup('isLanguageS', '', SAGU::listYesNo(1), $this->isLanguageS->value, null, 'horizontal');
        $isLanguageS->SetShowLabel(false);

        $hctIsLanguage = new MHContainer('hctIsLanguage', array($isLanguageLabel, $isLanguageS));
        $fields[]  = $hctIsLanguage;


        //isHighSchool
        $isHighSchoolOptions  = array( array(_M('Yes', $module), 't'),
                                     array(_M('No', $module), 'f')
                                    );

        $isHighSchoolLabel = new MText('isHighSchoolLabel', _M('Is high school in enroll act',$module) . ':');
        $isHighSchoolLabel->setWidth(FIELD_CONTAINER_SIZE);

        $isHighSchoolS = new MRadioButtonGroup('isHighSchoolS', '', $isHighSchoolOptions, $this->isHighSchoolS->value, null, 'horizontal');
        $isHighSchoolS->SetShowLabel(false);

        $hctIsHighSchool = new MHContainer('hctIsHighSchool', array($isHighSchoolLabel, $isHighSchoolS));
        $fields[]  = $hctIsHighSchool;

        $minimumPointsS = new MTextField('minimumPointsS', $this->minimumPointsS->value, _M('Minimum points',$module), 8);
        $minimumPointsS->setJsHint(_M('Enter the minimum points',$module));
        $fields[] = $minimumPointsS;
        $validators[] = new MFloatValidator('minimumPointsS', '', FLOAT_SEPARATOR, REAL_ROUND_VALUE , 'optional');

        $maximumPointsS = new MTextField('maximumPointsS', $this->maximumPointsS->value, _M('Maximum points',$module), 8);
        $maximumPointsS->setJsHint(_M('Enter the maximum points',$module));
        $fields[] = $maximumPointsS;
        $validators[] = new MFloatValidator('maximumPointsS', '', FLOAT_SEPARATOR, REAL_ROUND_VALUE , 'optional');

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);
        $this->setValidators($validators);

        // get filters values
        $filters->selectiveProcessId        = $this->selectiveProcessIdS->value;
        $filters->companyId                 = $this->companyIdS->value;
        $filters->companyName               = $this->companyNameS->value;
        $filters->periodId                  = $this->periodIdS->value;
        //$filters->periodDescription         = $this->periodDescriptionS->value;
        $filters->periodDescription         = $this->descriptionS->value;
        $filters->beginDate                 = $this->beginDateS->value;
        $filters->optionsNumber             = $this->optionsNumberS->value;
        $filters->isLanguage                = $this->isLanguageS->value;
        $filters->isHighSchool              = $this->isHighSchoolS->value;
        $filters->minimumPoints             = $this->minimumPointsS->value;
        $filters->maximumPoints             = $this->maximumPointsS->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdSelectiveProcessSearch',$filters);
        $business = $MIOLO->getBusiness($module,'BusSelectiveProcess');
        $data = $business->searchSelectiveProcess($filters);
        $grdResults->setData($data);

        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.selectiveProcessId.focus();');
        }
        $this->setLabelWidth(FIELD_LABEL_SIZE);

    }

}

?>
