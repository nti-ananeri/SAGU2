<?php

/**
 * DiverseConsultation form
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 22/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a classification
 **/
class FrmDiverseConsultation extends MForm
{

    /**
     * Class constructor
     **/
    function __construct()
    {

        $module = MIOLO::getCurrentModule();

        parent::__construct(_M('Assorted queries', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO               = MIOLO::getInstance();
        $module              = MIOLO::getCurrentModule();
        $action              = MIOLO::getCurrentAction();
        $function            = MIOLO::_request('function');
        $businessNote        = $MIOLO->getBusiness($module, 'BusNote');
        $businessInscription = $MIOLO->getBusiness($module, 'BusInscription');

        $personLabel = new MText('personLabel', _M('Person', $module) . ':');
        $personLabel->setWidth(FIELD_CONTAINER_SIZE);

        $personId  = new MLookupTextField('personId', $this->getFormValue('personId', $this->personId), _M('Person id',$module), FIELD_LOOKUPFIELD_SIZE, null, null, ('personName') , 'basic', 'Person', null, null, true);
        $personId->setJsHint(_M('Enter the person code',$module));
        $validators[] = new MIntegerValidator('personId', '', 'optional');

        $personName  = new MTextField('personName', $this->getFormValue('personName', $this->inscriptionData->personName), _M('Person name', $module), FIELD_DESCRIPTION_SIZE);
        $personName->setReadOnly(true);

        $cntPerson = new MHContainer('cntPerson', array($personLabel, $personId, $personName));
        $cntPerson->setShowLabel(false);
        $fields[] = $cntPerson;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        if ( strlen((string)$personId->value) > 0)
        {

            $filter->personId = $this->getFormValue('personId');
            $dataGrid1         = $businessInscription->searchInscription($filter);
            $grdResults1       = $MIOLO->getUI()->getGrid($module,'GrdDiverseConsultationSelectiveProcess');
            $grdResults1->setData($dataGrid1);

            //###GRID///is_array($dataGrid1) ? $grdResults1->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

            $fields[]         = $grdResults1;

            $dataGrid         = $businessNote->searchNote($filter);
    
            if ( count($dataGrid) > 0 )
            {
                foreach($dataGrid as $notesSelectiveProcess)
                {
                    $notesSelectiveProcessId[] = $notesSelectiveProcess[2]; 
                }
                $notesSelectiveProcessId = array_unique($notesSelectiveProcessId);
        
        
                foreach($notesSelectiveProcessId AS $notesSelectiveProcessId_)
                {
                    $filter->selectiveProcessId = $notesSelectiveProcessId_;
        
                    $dataGrid         = $businessNote->searchNote($filter);
                    $grdResults       = $MIOLO->getUI()->getGrid($module,'GrdDiverseConsultation');
                    $grdResults->setData($dataGrid);

                    //###GRID///is_array($dataGrid) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                    $grdResults->setTitle(_M('Notes', $module) . ' ' .$notesSelectiveProcessId_);
                    $fields[]         = $grdResults;
                }
            }
        }

        $this->setFields($fields);

        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
        $this->page->onLoad('document.' . $this->name . '.personId.focus();');
    }

}

?>
