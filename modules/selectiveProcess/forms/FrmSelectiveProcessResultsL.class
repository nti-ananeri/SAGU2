<?php

/**
 * Selective process results form
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 04/01/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a pupils/cities/schools Listing
 **/
class FrmSelectiveProcessResults extends MForm
{

    /**
     * Class constructor
     **/
    function __construct()
    {
        $module = MIOLO::getCurrentModule();
        parent::__construct(_M('Selective process results', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        
        $toolBar = new MToolBar('toolBar', $MIOLO->getActionURL($module, $action));
        $toolBar->disableButton('tbBtnNew');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSearch');
        
        if ($function == 'print')
        {
            $toolBar->disableButton('tbBtnPrint');
        }
        $fields[] = $toolBar;
    
        if ((strlen((string)$function) == 0) || ($function == null))
        {
            $businessPeriod = $MIOLO->getBusiness('academic', 'BusPeriod');
            $period = $businessPeriod->listPeriod();
            
            $periodId = new MComboBox('periodId', $this->getFormValue('periodId', $data->periodId), _M('Period id', $module), $period);
            $periodId->setJsHint(_M('Enter the selective process code', $module));
            $fields[] = $periodId;
            $validators[] = new MRequiredValidator('periodId');
            $fields[] = new Separator('');


            $reportOptions = array( array(_M('Classification summary', $module), 1),
                                    array(_M('Greater/minor note', $module), 2),
                                    array(_M('Exams average per course', $module), 3),
                                    array(_M('General exams average', $module), 4),
                                    array(_M('Conference list', $module), 5)
                                   );
                                   
            $reportOption = new MRadioButtonGroup('reportOption', _M('Report option', $module), $reportOptions, $this->getFormValue('reportOption', $data->reportOption));
            $reportOption->setShowLabel(false);
            $reportOption->setAutoPostBack(true);
            $fields[] = $reportOption;
            $validators[] = new MRequiredValidator('reportOption');
        }

        $fields[] = new Separator('');

        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
    }
    
    /**
     * Event triggered when user chooses Delete from the toolbar
     **/
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $optionId = $this->getFormValue('reportOption');
        $periodId = $this->getFormValue('periodId');
        $year     = $this->getFormValue('year');
      
        $businessPupilsCitiesSchools = $MIOLO->getBusiness($module, 'BusPupilsCitiesSchools');
       
        switch ($optionId)
        {
            case 1:
                $pupilsData = $businessPupilsCitiesSchools->pupilsByAlphabeticOrder($periodId);

                $optionsNumber = 0;
                
                foreach ($pupilsData as $pupilData)
                {
                    $gridLine = array($pupilData[2], $pupilData[3], $pupilData[4], $pupilData[6]);

                    $inscriptionOptions = $businessPupilsCitiesSchools->getInscriptionOptions($pupilData[0]);

                    if (count($inscriptionOptions) > $optionsNumber)
                    {
                        $optionsNumber = count($inscriptionOptions);
                    }

                    foreach ($inscriptionOptions as $inscriptionOption)
                    {
                        $gridLine[] = $inscriptionOption[4];
                    }

                    $gridData[] = $gridLine;
                }

                $data->gridData      = $gridData;
                $data->optionsNumber = $optionsNumber;



                $gridPupilsCitiesSchoolsOp1 = $MIOLO->getUI()->getGrid($module, 'GrdPupilsCitiesSchoolsOp1', $data);

                //###GRID///is_array($gridData) ? $gridPupilsCitiesSchoolsOp1->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilsCitiesSchoolsOp1);
                break;
            case 2:
                $pupilsData = $businessPupilsCitiesSchools->pupilsByCity($periodId);

                $optionsNumber = 0;

                for ($i = 0; $i < count($pupilsData); $i++)
                {
                    $inscriptionOptions = $businessPupilsCitiesSchools->getInscriptionOptions($pupilsData[$i][0]);
                    if (count($inscriptionOptions) > $optionsNumber)
                    {
                        $optionsNumber = count($inscriptionOptions);
                    }


                    $gridLine = array ($pupilsData[$i][1], $pupilsData[$i][3], $pupilsData[$i][4], $pupilsData[$i][5]);

                    foreach ($inscriptionOptions as $inscriptionOption)
                    {
                        $gridLine[] = $inscriptionOption[4];
                    }

                    $gridData[] = $gridLine;

                    if ($pupilsData[$i][2] != $pupilsData[$i+1][2] || $pupilsData[$i+1] == null)
                    {
                        $data->gridData = $gridData;
                        $data->optionsNumber = $optionsNumber;
                        $gridPupilsCitiesSchoolsOp2 = $MIOLO->getUI()->getGrid($module, 'GrdPupilsCitiesSchoolsOp2', $data);

                        //###GRID///is_array($gridData) ? $gridPupilsCitiesSchoolsOp2->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                        $this->addField($gridPupilsCitiesSchoolsOp2);
                        $this->addField(new MSeparator());
                        $this->addField(new MSeparator());
                        $optionsNumber = 0;
                        unset($gridData);
                    }
                }
                
                //$gridPupilListingOp2 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp2', $pupilListingData);
                //$this->addField($gridPupilListingOp2);
                break;
            case 3:
                $pupilsData = $businessPupilsCitiesSchools->pupilsBySchool($periodId, $year);

                $optionsNumber = 0;

                for ($i = 0; $i < count($pupilsData); $i++)
                {
                    $inscriptionOptions = $businessPupilsCitiesSchools->getInscriptionOptions($pupilsData[$i][0]);
                    if (count($inscriptionOptions) > $optionsNumber)
                    {
                        $optionsNumber = count($inscriptionOptions);
                    }


                    $gridLine = array ($pupilsData[$i][2], $pupilsData[$i][3], $pupilsData[$i][4], $pupilsData[$i][6]);

                    foreach ($inscriptionOptions as $inscriptionOption)
                    {
                        $gridLine[] = $inscriptionOption[4];
                    }

                    $gridData[] = $gridLine;

                    if (($pupilsData[$i][5] != $pupilsData[$i+1][5] || $pupilsData[$i][7] != $pupilsData[$i+1][7]) || $pupilsData[$i+1] == null)
                    {
                        $data->gridData = $gridData;
                        $data->optionsNumber = $optionsNumber;
                        $gridPupilsCitiesSchoolsOp2 = $MIOLO->getUI()->getGrid($module, 'GrdPupilsCitiesSchoolsOp2', $data);

                        //###GRID///is_array($gridData) ? $gridPupilsCitiesSchoolsOp2->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                        $this->addField($gridPupilsCitiesSchoolsOp2);
                        $this->addField(new MSeparator());
                        $this->addField(new MSeparator());
                        $optionsNumber = 0;
                        unset($gridData);
                    }
                }
                
                //$pupilListingData = $businessPupilListing->getPupilListingOp3($periodId);
                //$gridPupilListingOp3 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp3', $pupilListingData);
                //$this->addField($gridPupilListingOp3);
                break;
            case 4:
                $pupilListingData = $businessPupilListing->getPupilListingOp4($periodId);
                $gridPupilListingOp4 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp4', $pupilListingData);

                //###GRID///is_array($pupilListingData) ? $gridPupilListingOp4->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilListingOp4);
                break;
            case 5:
                $pupilListingData = $businessPupilListing->getPupilListingOp5($periodId);
                $gridPupilListingOp5 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp5', $pupilListingData);

                //###GRID///is_array($pupilListingData) ? $gridPupilListingOp5->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilListingOp5);
                break;
            case 6:
                $pupilListingData = $businessPupilListing->getPupilListingOp6($periodId);
                $gridPupilListingOp6 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp6', $pupilListingData);

                //###GRID///is_array($pupilListingData) ? $gridPupilListingOp6->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilListingOp6);
                break;
            case 7:
                $pupilListingData = $businessPupilListing->getPupilListingOp7($periodId);
                $gridPupilListingOp7 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp7', $pupilListingData);

                //###GRID///is_array($pupilListingData) ? $gridPupilListingOp7->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilListingOp7);
                break;
            case 8:
                $pupilListingData = $businessPupilListing->getPupilListingOp8($periodId);
                $gridPupilListingOp8 = $MIOLO->getUI()->getGrid($module, 'GrdPupilListingOp8', $pupilListingData);

                //###GRID///is_array($pupilListingData) ? $gridPupilListingOp8->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

                $this->addField($gridPupilListingOp8);
                break;
            default:
                break;
        }
        
    }
}

?>
