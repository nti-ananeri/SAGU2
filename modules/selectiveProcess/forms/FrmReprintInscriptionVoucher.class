<?php

/**
 * Inscription form
 *
 * @author Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 05/07/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a selectiveProcessOccurrence
 **/
class FrmReprintInscriptionVoucher extends MForm
{
    private $_inscriptionId;
    private $rg_number;
    private $cpf_number;
	private $selectiveProcessId;
    /**
     * Class constructor
     **/
    function __construct()
    {
        $module = MIOLO::getCurrentModule();
        $MIOLO    = MIOLO::getInstance();

        parent::__construct(_M('Selective process reprint inscription voucher', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
		$this->selectiveProcessId = $this->selectiveProcessId ? $this->selectiveProcessId : (MIOLO::_request('selectiveProcessId','GET') ? MIOLO::_request('selectiveProcessId','GET'):'');

        $divError = new MDiv('divError', null, null, 'align=center');
        $fields[] = $divError;

        $businessInscriptionSetting = $MIOLO->getBusiness($module, 'BusInscriptionSetting');
        $inscriptionSetting         = $businessInscriptionSetting->getInscriptionSetting($this->selectiveProcessId);

        $msgInscriptionText =  "<b><font size=3><center>". _M('REPRINT INSCRIPTION VOUCHER TO SELECTIVE PROCESS', $module)." " . $this->selectiveProcessId . "<br><br></b>";
        $msgInscriptionText .= "<font size=2>"._M('Inform the inscription code from your inscription, rg code or cfp code and click on the button', $module)."<br><br> ";

        $inscriptionIdLabel = new MText('inscriptionIdLabel', _M('Inscription id',$module) . ':');
        $inscriptionIdLabel->setWidth(FIELD_CONTAINER_SIZE);

        $inscriptionId = new MTextField('inscriptionId', $this->getFormValue('inscriptionId', $data->inscriptionId), '', FIELD_ID_SIZE);
        $inscriptionId->setReadOnly(false);
        $inscriptionId->setJsHint(_M('Inscription id',$module));

        $cntInscription     = new MHContainer('cntInscription', array($inscriptionIdLabel, $inscriptionId));

        $rgLabel = new MText('rgLabel', _M('Identity (RG)',$module).':');
        $rgLabel->setWidth(FIELD_CONTAINER_SIZE);

        $rgId   = new MTextField('rgId', $this->getFormValue('rgId', $this->inscriptionData->document->rgNumber), '', 20);
        $rgId->setJsHint(_M('Inform the identity number (rg)',$module));

        $hctRg = new MHContainer('hctRg', array($rgLabel, $rgId));
        $hctRg->setShowLabel(true);

        $cpfLabel = new MText('cpfLabel', _M('CPF',$module).':');
        $cpfLabel->setWidth(FIELD_CONTAINER_SIZE);

        $cpfId   = new MTextField('cpfId', $this->getFormValue('cpfId', $this->inscriptionData->document->cpf), '', 20, _M('Just numbers', $module));
        $cpfId->setJsHint(_M('Inform the cpf number',$module));

        $validators[]  = new MCPFValidator('cpfId', _M('CPF',$module), 'optional');

        $hctCpf = new MHContainer('hctCpf', array($cpfLabel, $cpfId));
        $hctCpf->setShowLabel(true);


        $limbo = new Separator('');

        $div1       = new MDiv('div1', array($cntInscription, $limbo, $hctRg, $limbo, $hctCpf), null, 'align=left');

        $this->_inscriptionId = $inscriptionId->value;
        $this->rg_number      = $rgId->value;
        $this->cpf_number     = $cpfId->value;

        $btnReprintInscriptionVoucher = new MButton('btnReprintInscriptionVoucher',_M('Reprint inscription voucher',$module));
        $btnReprintInscriptionVoucher->attachEventHandler('click', 'tbBtnReprintInscriptionVoucher_click', true);

        $div2       = new MDiv('div2', $btnReprintInscriptionVoucher, null, 'align=center');

        $separator = new Separator('');

        $msgInscription     = new MText('msgInscription', $msgInscriptionText);
        $cntInscription     = new MHContainer('cntInscription', array($msgInscription, $div1, $separator, $div2));

        $cntInscription->addBoxStyle('background', 'white');
        $cntInscription->setDisposition('center');

        $fields[] = $cntInscription;

        $fields[] = new Separator('');

        $this->setFields($fields);
        $this->setValidators($validators);

        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
    }

    /**
     * Event triggered when user click re print invoice
     **/
    public function tbBtnReprintInscriptionVoucher_click($sender = null)
    {
        $MIOLO                         = MIOLO::getInstance();
        $module                        = MIOLO::getCurrentModule();
        $action                        = MIOLO::getCurrentAction();

        $businessInscription           = $MIOLO->getBusiness($module, 'BusInscription');

        $filters->selectiveProcessId   = $this->selectiveProcessId;

        if ( strlen((string)$this->_inscriptionId) > 0 )
        {
            $inscriptionId             = $this->_inscriptionId;
        }
        elseif ( (strlen((string)$this->rg_number) > 0) || (strlen((string)$this->cpf_number) > 0) )
        {
            $filters->rgNumber  = $this->rg_number;
            $filters->cpfNumber = SAGU::convertInCPFWithoutDelimiters($this->cpf_number);

            $dataInscription    = $businessInscription->searchInscription($filters);

            $inscriptionId      = $dataInscription[0][0];
        }
        else
        {
            //Erro, nenhum dos campos informados
            $this->addError(_M('Please, inform one field',$module)) . '.';

            //$lblMsg1 = new MText('lblMsg1', _M('Please, inform one field',$module));
            //$lblMsg1->color = 'red';

            //$cntErrors      = new MVContainer('cntErrors', array($lblMsg1));
            //$this->divError->addControl($cntErrors);
        }

        if ( strlen((string)$inscriptionId) > 0 )
        {
            $optsInscriptionVoucher['event']              = 'tbBtnPrint_click';
            $optsInscriptionVoucher['selectiveProcessId'] = $this->selectiveProcessId;
            $optsInscriptionVoucher['inscriptionIdS']     = $inscriptionId;

            $this->page->mGoto($MIOLO->getActionURL($module, 'main:document:inscriptionSheet', null, $optsInscriptionVoucher));
        }
        else
        {
            $this->addError(_M('Incorrect datas', $module)) . '.';
        }
    }
}

?>
