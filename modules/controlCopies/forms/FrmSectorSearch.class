<?php
/**
 *
 * @author Rafael Dutra  [rdutra@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 24/07/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2006 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

class FrmSectorSearch extends MForm
{

    function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        parent::__construct(_M('Search'));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }
    
    public function createFields()
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();
        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,'main:register:sector'));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
//        $toolBar->disableButton('tbBtnPrint');
        $this->defaultButton = false;
        $fields[]  = $toolBar;

        $fields[]  = new MTextField('sectorIdS', $this->sectorIdS->value, _M('Sector id', $module ),'14');
        $fields[]  = new MTextField('descriptionS', $this->descriptionS->value, _M('Description', $module ),'30');
        $fields[]  = new MButton('tbBtnPost', _M('Search'));
        $fields[]  = new Separator();

        $this->setFields($fields);

        //get values of createFields
        $values->sectorId    = $this->sectorIdS->value;
        $values->description = $this->descriptionS->value;

        // create the grid without values, 
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdSectorSearch', $values);
        $business   = $this->manager->getBusiness($module,'BusSector');
        $data       = $business->searchSector($values);
        $grdResults->setData($data);
        $this->addField($grdResults);
    }

}

?>
