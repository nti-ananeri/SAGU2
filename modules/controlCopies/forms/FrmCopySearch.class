<?php

/**
 *
 * This file handles the connection and actions for sprCopy table
 *
 * @author Jamiel Spezia [jamiel@solis.coop.br] 
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 14/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the ccpCopy table
 */
class FrmCopySearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Copies', $this->home, 'copy-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $personIdS  = new MLookupTextField('personIdS', $this->personIdS->value, _M('Person id',$module), 10, null, null, 'personNameS', $module, 'Person', null, null, true);
        $personIdS->setJsHint(_M('Enter the person code',$module));
        $fields[]             = $personIdS;

        $personNameS = new MTextField('personNameS', $this->personNameS->value, _M('Person name',$module), 40);
        $fields[]                     = $personNameS;

        $beginDateS = new MCalendarField('beginDateS', $this->beginDateS->value, _M('Begin date',$module), 15);
        $fields[]                     = $beginDateS;

        $endDateS = new MCalendarField('endDateS', $this->endDateS->value, _M('End date',$module), 15);
        $fields[]                     = $endDateS;

        $businessPeriod = $MIOLO->getBusiness('academic', 'BusPeriod');
        $periodIdS = new MSelection('periodIdS', $this->getFormValue('periodIdS', $data->periodIdS), _M('Period id', $module), $businessPeriod->listPeriod());
        $fields[] = $periodIdS;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);

        // get filters values
        $filters->personId     = $this->personIdS->value;
        $filters->personName   = $this->personNameS->value;
        $filters->beginDate    = $this->beginDateS->value;
        $filters->endDate      = $this->endDateS->value;
        $filters->periodId     = $this->periodIdS->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdCopySearch',$filters);
        $business   = $this->manager->getBusiness($module,'BusCopy');
        $data       = $business->searchCopy($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);

        $this->page->onLoad('document.' . $this->name . '.personIdS.focus();');
    }

}

?>
