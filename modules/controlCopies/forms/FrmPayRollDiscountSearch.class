<?php
/**
 *
 * @author Rafael Dutra [rdutra@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Dutra [rdutra@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 21/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n $module, $m[4]
 * Copyleft (L) 2006- SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

class FrmPayRollDiscountSearch extends MForm
{

    private $home;
    private $module;

    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    public function createFields()
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,'main:register:payrolldiscount'));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
//        $toolBar->disableButton('tbBtnPrint');
        $this->defaultButton = false;
        
        //favorites
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Pay Roll Discount', $this->home, 'payrolldiscount-16x16.png', true);
        }
       //end favorites

        $fields[]  = $toolBar;

        $payRollDiscount = new MTextField('payRollDiscount', $this->payRollDiscount->value, _M('Pay Roll Discount id', $module), 14);
        
        $serviceLabel  = new MText('serviceIdS', _M('Service code',$module).':');
        $serviceLabel->setWidth(FIELD_LABEL_SIZE);
        $serviceID     = new MLookupTextField('serviceIdS', $this->serviceIdS->value,
                            '', FIELD_ID_SIZE, null, null, 'serviceName', $module, 'Service', 'filler', null, true);
        $serviceID->setJsHint(_M('Enter the service code',$module));
        $serviceName   = new MTextField('serviceName', $this->getFormValue('serviceName',$data->serviceName), '', FIELD_DESCRIPTION_SIZE);
        $serviceName->setReadOnly(true);
        
        $sectorLabel   = new MText('sectorIdS', _M('Sector code',$module).':');
        $sectorLabel->setWidth(FIELD_LABEL_SIZE);
        $sectorID      = new MLookupTextField('sectorIdS', $this->sectorIdS->value,
                            '', FIELD_ID_SIZE, null, null, 'sectorName', $module,'Sector', null, null, true);
        $sectorID->setJsHint(_M('Enter the sector code',$module));
        $sectorName    = new MTextField('sectorName', $this->getFormValue('sectorName',$data->sectorName), '', FIELD_DESCRIPTION_SIZE);
        $sectorName->setReadOnly(true);
        
        $personLabel   = new MText('personId', _M('Person code',$module).':');
        $personLabel->setWidth(FIELD_LABEL_SIZE);
        $personID      = new MLookupTextField('personIdS', $this->personIdS->value,
                            '', FIELD_ID_SIZE, null, null, 'personName', $module,'PhysicalPersonEmployee', null, null, true);
        $personID->setJsHint(_M('Enter the person code',$module));
        $personName    = new MTextField('personName', $this->personName->value, '', FIELD_DESCRIPTION_SIZE);
        $personName->setReadOnly(true);
        
        $operatorLabel = new MText('operatorsectorId', _M('Operator code',$module).':');
        $operatorLabel->setWidth(FIELD_LABEL_SIZE);
        $operatorSecID = new MLookupTextField('operatorsectorIdS', $this->operatorsectorIdS->value,
                            '', FIELD_ID_SIZE, null, null, 'operatorName', $module,'Operator', null, null, true);
        $operatorSecID->setJsHint(_M('Enter the operator code',$module));
        $operatorName  = new MTextField('operatorName', $this->operatorName->value, '', FIELD_DESCRIPTION_SIZE);
        $operatorName->setReadOnly(true);
        
        $beginDate = new MCalendarField('beginDate', $this->getFormValue('beginDate' ), _M('Begin date', $module), 15);
        $validators[] = new MDateDMYValidator('beginDate', '', 'required');

        $endDate = new MCalendarField('endDate', $this->getFormValue('endDate' ), _M('End date', $module), 15);
        $validators[] = new MDateDMYValidator('endDate', '', 'required');


        $hctService  = new MHContainer(null,array($serviceLabel, $serviceID,    $serviceName));
        $hctSector   = new MHContainer(null,array($sectorLabel,  $sectorID,     $sectorName)); 
        $hctPerson   = new MHContainer(null,array($personLabel,  $personID,     $personName)); 
        $hctOperator = new MHContainer(null,array($operatorLabel,$operatorSecID,$operatorName));
        
        $fields[]  = $payRollDiscount ; 
        $fields[]  = $hctService ;
        $fields[]  = $hctSector  ;
        $fields[]  = $hctPerson  ;
        $fields[]  = $hctOperator; 
        $fields[]  = new MSeparator();
        $fields[]  = new MSeparator();
        $fields[]  = $beginDate; 
        $fields[]  = $endDate; 
        $fields[]  = new MSeparator();
        $fields[]  = new MButton('btnSearch',_M('Search',$module));
        $this->setFields($fields);
            
        //get values of createFields
        $filters->payRollDiscount   = $this->payRollDiscount->value;
        $filters->sectorId          = $this->sectorIdS->value;
        $filters->serviceId         = $this->serviceIdS->value;
        $filters->personId          = $this->personIdS->value;
        $filters->operatorSectorId  = $this->operatorsectorIdS->value;
        $filters->beginDate         = $this->beginDate->value;
        $filters->endDate           = $this->endDate->value;
        $this->setLabelWidth(FIELD_LABEL_SIZE+3);
   
        // create the grid without values, 
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdPayRollDiscountSearch', $values);
        $business   = $this->manager->getBusiness($module,'BusPayRollDiscount');
        $data       = $business->searchPayRollDiscount($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
    }
}
