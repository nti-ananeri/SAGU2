<?php

/**
 *
 * This file handles the connection and actions for sprExamProcessOccurrence table
 *
 * @author Rafael Dutra  [rdutra@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 24/07/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/


class BusinessControlCopiesBusSector extends MBusiness   
{

    public function getDatabase ()
    {
        $MIOLO = MIOLO::getInstance($module = null);
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'controlCopies' : $module;
        
        return $MIOLO->getDatabase($module);
    }

    public function insertSector($values)
    {
        $sql = 'INSERT INTO ccpsector (description) VALUES (?)';
        
        $args   = array($values->description);
        $db     = $this->getDatabase();
        $result = $db->execute(SAGU::prepare($sql, $args));
        return $result;
    }    
    
    public function searchSector($values)
    {
        $sql = 'SELECT sectorid,
                       description,
                       username, 
                       TO_CHAR(datetime,\'' . MASK_TIMESTAMP . '\'),
                       ipaddress
                  FROM ccpsector';
    
        if (strlen((string)$values->description) > 0 )
        {
            $where .= " AND upper (description) ILIKE upper('".$values->description."%')";
        } 
        if (strlen((string)$values->sectorId) > 0 )
        {
            $where .= " AND sectorId = ?";
            $args[] = $values->sectorId;
        } 
    
        if (strlen((string)$where) > 0)
        {
            $sql   .= ' WHERE ' . substr($where, 4);
        }

        $db     = $this->getDatabase(); 
        $result = $db->query(SAGU::prepare($sql, $args));

        return $result;
   }

    public function getSector($sectorId)
    {
        $sql = 'SELECT sectorid,
                       description,
                       username, 
                       TO_CHAR(datetime,\'' . MASK_TIMESTAMP . '\'),
                       ipaddress 
                  FROM ccpsector 
                 WHERE sectorid = ?'; 

        $args = array($sectorId);
        $db     = $this->getDatabase(); 
        $result = $db->query(SAGU::prepare($sql, $args));

        list($data->sectorId,
             $data->description,
             $data->userName,
             $data->dateTime,
             $data->ipAddress) = $result[0];

        return $data;
    }


    public function updateSector($values)
    {
        $sql = 'UPDATE ccpsector 
                   SET description = ? 
                 WHERE sectorid = ?';

        $db     = $this->getDatabase(); 
        $args   = array($values->description,
                        $values->sectorId);

        $result = $db->execute(SAGU::prepare($sql, $values));

        return $result;
    } 

    public function deleteSector($sectorId)
    {
        $sql   = 'DELETE FROM ccpsector
                        WHERE sectorid = ?';

        $args   = array($sectorId);
        $db     = $this->getDatabase();
        $result = $db->execute(SAGU::prepare($sql, $args));
        return $result;
    }

}
?>
