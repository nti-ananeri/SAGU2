<?php

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Default defines 
 * To report identification
 */
define('REPORT_ID', 'SP001'); 
define('FPDF_FONTPATH', $MIOLO->getAbsolutePath() . '/modules/basic/classes/fpdf/font/');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    /**
     * Defines the footer for this report
     */
    public function Footer()
    {
        $module = MIOLO::getCurrentModule();
        $this->setY(-15);
        $pn = $this->PageNo().'/{nb}';
        $this->cell(190, 1, '', 'B', 1);
        $this->ln();
        
        $this->setFont(DEFAULT_REPORT_FONT, 'I', 8);
        $this->cell(50, 4, $text, 0, 0);
        $this->cell(140, 4, _M('Page @1', $module, $pn), 0, 0, 'R');
        $this->ln();
    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $module = MIOLO::getCurrentModule();
        if ($this->type == 1)
        {
            $this->ln();
            $this->ln();
            $this->ln();
            $this->ln();
        }
    }
}


/**
 * PDF extension to generate report
 */
class RptSolicitationForPeriod 
{
    /**
     * Method to generate the report
     */

 

     
    public function RptSolicitationForPeriod($data = null, $filters = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
              // Generating PDF file
        $this->pdf = new PDF();
        $this->pdf->aliasNbPages();
        // First page
        $this->pdf->addPage('P', 'mm', 'A4');
        $this->pdf->ln();


        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 26);
        $this->pdf->cell(190, 8, _M('Solicitation report', $module), 8, '','C');
        $this->pdf->ln();
        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
        $this->pdf->cell(190, 8, '( ' . $filters->beginDate . ' - ' . $filters->endDate . ' )', 8, '','C');

        $this->pdf->ln();
        $this->pdf->ln();
        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
        $this->pdf->setX(7);
        $this->pdf->cell(38, 6,  _M('Cost Center', $module), 0, 0, 'L');
        $this->pdf->cell(80, 6,  _M('Person Name', $module), 0, 0, 'L');
        $this->pdf->cell(20, 6,  _M('Service'    , $module), 0, 0, 'L');
        $this->pdf->cell(40, 6,  _M('Amount'     , $module), 0, 0, 'R');
        $this->pdf->cell(00, 6,  _M('Value'      , $module), 0, 0, 'R');
        $this->pdf->ln();


        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
        $this->pdf->setFillColor(242);

        if ( is_array($data) )
        {
            $x = 0;
            foreach ( $data as $key=>$d )
            {
                if ($x == 1)
                {
                    $x = 0;
                }
                else
                {
                    $x = 1;
                }
                $this->pdf->setX(7);
                $this->pdf->cell(38, 6, $d[0], 0, 0, 'L', $x);
                $this->pdf->cell(80, 6, $d[1], 0, 0, 'L', $x);
                $this->pdf->cell(20, 6, $d[2], 0, 0, 'L', $x);
                $this->pdf->cell(20, 6, $d[3], 0, 0, 'R', $x);
                $this->pdf->cell(20, 6, $d[4], 0, 0, 'R', $x);
                $this->pdf->cell(00, 6, $d[5], 0, 0, 'R', $x);
                $this->pdf->ln();
                $contentCSV .= $d[0] . ';' . $d[1] . ';' . $d[2] . ';' . $d[3] .  ';' . $d[4] . ';' . $d[5] . "\n"; 
            }
        }
        if ($filters->radFileType == 'csv')
        {
            header("Content-type: text/plain");
            header('Content-Length: '.strlen((string)$contentCSV));
            header("Content-Disposition: attachment; filename=\"output.csv\"");
            print($contentCSV);
        }   

        else
        {
            $this->pdf->output();
        }
        $this->pdf->close();
    
   }
}

?>
