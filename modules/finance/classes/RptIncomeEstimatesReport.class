<?
/**
*
* @author Giovani Murilo Dantas Correa [gmurilo@isolution.inf.br]
*
* $version: $Id$
*
* \b Maintainers \n
* Daniel Afonso Heisler [daniel@isolution.inf.br]
*
* @since
* Class created on 25/03/2009
*
* \b Organization: \n
* iSolution - Soluções de Internet \n
* The iSolution TEAM
*
* \b CopyLeft: \n
* CopyLeft (L) 2007 iSolution - Soluções de Internet \n
*
* \b License \n
* Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
*
* \b History \n
* See history in CVS repository: http://isolution.inf.br   
*
**/
set_time_limit(0);        
$MIOLO = MIOLO::getInstance();
$module = 'academic';

define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptIncomeEstimatesReport extends PDF
{
    var $module = 'basic';
    public function __construct($filters = NULL)
    {
        $MIOLO = MIOLO::getInstance();
        foreach($filters as $item => $value )
        {
            if(!$this->headerData->{$item} )
            {
                $this->headerData->{$item} = $value;
            }
        }
        $this->title = strtoupper(_M('Income estimates', 'finance'));
        parent::__construct();
        $this->useUserInfo = true;
        $this->addPage('L', 'mm', 'A4');
        $this->aliasNbPages();   
        $this->generatePDF();
    }
    public function reportType1()
    {
        $MIOLO  = MIOLO::getInstance();
        $busIncomeEstimates = $MIOLO->getBusiness('finance','BusIncomeEstimates'); 
        $dados = $busIncomeEstimates->getIncomeEstimatesAnal($this->headerData);
        $c = $this->reportHeader();
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $ar = array(4,5);
        foreach($dados as $item )
        {
            $x = 1;
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            foreach($item as $valor)
            {
                if ($x == 1 )
                {
                    $p = 'C';
                }
                else if(!in_array($x,$ar) )
                {
                    $p = 'R';
                }
                else
                {
                    $p = 'L';
                }
                $this->cell($c[$x], $this->lsize, $x <= 5 ? $valor : SAGU::formatNumber($valor), 1, null, $p);
                if(!in_array($x, $ar))
                {
                    $tt[$x] += $valor;
                }
                $x++;
            }
            if($this->y+($this->lsize*$this->k) > $this->PageBreakTrigger)
            {
                $this->reportHeader();
            }
            $this->ln();
        }
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($c[1]+$c[2]+$c[3]+$c[4]+$c[5], $this->lsize, 'TOTAL', null, null, 'R' );
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        for($x=6; $x<= 13; $x++)
        {
            $tt[$x] = SAGU::formatNumber($tt[$x]);
        }
        $this->cell($c[6], $this->lsize, $tt[6], 1, null, 'R' );
        $this->cell($c[7], $this->lsize, $tt[7], 1, null, 'R' );
        $this->cell($c[8], $this->lsize, $tt[8], 1, null, 'R' );
        $this->cell($c[9], $this->lsize, $tt[9], 1, null, 'R' );
        $this->cell($c[10], $this->lsize,$tt[10], 1, null, 'R' );
        $this->cell($c[11], $this->lsize, $tt[11], 1, null, 'R' );
        $this->cell($c[12], $this->lsize, $tt[12], 1, null, 'R' );
        $this->cell($c[13], $this->lsize, $tt[13], 1, null, 'R' );

    }
    public function reportHeader($h = null)
    {
        if($this->headerData->reportType == 1 )
        {
            //reportType1
            $c[]= '';
            $c[]= ($this->psize/32)*2.4; //maturityDate
            $c[]= ($this->psize/32)*1.5; //InvoiceId
            $c[]= ($this->psize/32)*1.5; //PersonId
            $c[]= ($this->psize/32)*8; //Pessoa
            $c[]= ($this->psize/32)*4; //origem
            $c[]= ($this->psize/32)*1.9; //valor Nominal
            $c[]= ($this->psize/32)*1.9; //valor Previsto
            $c[]= ($this->psize/32)*2; //valor Recebido
            $c[]= ($this->psize/32)*2; //incentivos
            $c[]= ($this->psize/32)*1.5; //descontos
            $c[]= ($this->psize/32*1.5); //juros recebidos
            $c[]= ($this->psize/32)*1.9; //valorEmaberto
            $c[]= ($this->psize/32)*1.9; //valorEmabertoatualizado
            if($h == null)
            {
                $this->ln();
                $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
                $this->cell($c[1], $this->lsize, strtoupper(_M('Maturity', 'finance')), 1, null, 'C' );
                $this->cell($c[2], $this->lsize, strtoupper(_M('Invoice', 'finance')), 1, null, 'C' );
                $this->cell($c[3], $this->lsize, strtoupper(_M('Id', 'finance')), 1, null, 'C' );
                $this->cell($c[4], $this->lsize, strtoupper(_M('Name', 'finance')), 1, null, 'C' );
                $this->cell($c[5], $this->lsize, strtoupper(_M('Income source', 'finance')), 1, null, 'C' );
                $this->cell($c[6], $this->lsize, _M('VP', 'finance'), 1, null, 'C' );
                $this->cell($c[7], $this->lsize, _M('VN', 'finance'), 1, null, 'C' );
                $this->cell($c[8], $this->lsize, _M('VR', 'finance'), 1, null, 'C' );
                $this->cell($c[9], $this->lsize, _M('INC', 'finance'), 1, null, 'C' );
                $this->cell($c[10], $this->lsize, _M('DES', 'finance'), 1, null, 'C' );
                $this->cell($c[11], $this->lsize, _M('JUR', 'finance'), 1, null, 'C' );
                $this->cell($c[12], $this->lsize, _M('VA', 'finance'), 1, null, 'C' );
                $this->cell($c[13], $this->lsize, _M('VAA', 'finance'), 1, null, 'C' );
            }
            return $c;
        }
        else
        {
            //reportType2
            $this->ln();
            $c[]='';
            $c[]= ($this->psize/32); //ano
            $c[]= ($this->psize/32)*0.8; //mes
            $c[]= ($this->psize/32)*7.6; //origem
            $c[]= ($this->psize/32)*1.2; //total de pessoas
            $c[]= ($this->psize/32)*1.2; //titulos em aberto
            $c[]= ($this->psize/32)*1.2; //total de titulos
            $c[]= ($this->psize/32)*2; //receita prevista
            $c[]= ($this->psize/32)*2; //receita prevista nominal
            $c[]= ($this->psize/32)*2; //receita prevista nominal com incentivos
            $c[]= ($this->psize/32)*2; //receita realizada
            $c[]= ($this->psize/32)*2; //incentivos
            $c[]= ($this->psize/32)*2; //descontos
            $c[]= ($this->psize/32)*2; //juros recebitos
            $c[]= ($this->psize/32); //percentualdeinadimplencia
            $c[]= ($this->psize/32)*2; //valor a receber
            $c[]= ($this->psize/32)*2; //valoremabertoatualizado
            if($h == null)
            {
                $this->ln();
                $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
                $this->cell($c[1], $this->lsize, strtoupper(_M('Year', 'finance')), 1, null, 'C' );
                $this->cell($c[2], $this->lsize, strtoupper(_M('Month', 'finance')), 1, null, 'C' );
                $this->cell($c[3], $this->lsize, strtoupper(_M('Income source', 'finance')), 1, null, 'C' );
                $this->cell($c[4], $this->lsize, _M('TP', 'finance'), 1, null, 'C' );
                $this->cell($c[5], $this->lsize, _M('TTA', 'finance'), 1, null, 'C' );
                $this->cell($c[6], $this->lsize, _M('TT', 'finance'), 1, null, 'C' );
                $this->cell($c[7], $this->lsize, _M('RP', 'finance'), 1, null, 'C' );
                $this->cell($c[8], $this->lsize, _M('RPN', 'finance'), 1, null, 'C' );
                $this->cell($c[9], $this->lsize, _M('RPN Inc', 'finance'), 1, null, 'C' );
                $this->cell($c[10], $this->lsize, _M('RR', 'finance'), 1, null, 'C' );
                $this->cell($c[11], $this->lsize, _M('INC', 'finance'), 1, null, 'C' );
                $this->cell($c[12], $this->lsize, _M('DES', 'finance'), 1, null, 'C' );
                $this->cell($c[13], $this->lsize, _M('JUR', 'finance'), 1, null, 'C' );
                $this->cell($c[14], $this->lsize, _M('% IN', 'finance'), 1, null, 'C' );
                $this->cell($c[15], $this->lsize, _M('VR', 'finance'), 1, null, 'C' );
                $this->cell($c[16], $this->lsize, _M('VAA', 'finance'), 1, null, 'C' );
            }
            return $c;
        }
    }
    public function reportType2()
    {
        $MIOLO  = MIOLO::getInstance();
        $busIncomeEstimates = $MIOLO->getBusiness('finance','BusIncomeEstimates'); 
        $dados = $busIncomeEstimates->getIncomeEstimatesSyn($this->headerData);
        $c = $this->reportHeader();
        $this->ln();
        $ar = array(1,2,3);
        foreach($dados as $item )
        {
           $x = 1;
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            foreach($item as $valor)
            {
                if($x <= 3 )
                {
                    $p = 'C';
                }
                else
                {
                    $p = 'R';
                }
                $this->cell($c[$x], $this->lsize, $x <= 6 ? $valor : SAGU::formatNumber($valor), 1, null, $p);
                if(!in_array($x, $ar))
                {
                    $tt[$x] += $valor;
                }
                $x++;
            }
            if($this->y+($this->lsize*$this->k) > $this->PageBreakTrigger)
            {
                $this->reportHeader();
            }
            $this->ln();
        }
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($c[1]+$c[2]+$c[3], $this->lsize, 'TOTAL', null, null, 'R' );
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        $this->cell($c[4], $this->lsize, $tt[4], 1, null, 'R' );
        $this->cell($c[5], $this->lsize, $tt[5], 1, null, 'R' );
        $this->cell($c[6], $this->lsize, $tt[6], 1, null, 'R' );
        $this->cell($c[7], $this->lsize, SAGU::formatNumber($tt[7]), 1, null, 'R' );
        $this->cell($c[8], $this->lsize, SAGU::formatNumber($tt[8]), 1, null, 'R' );
        $this->cell($c[9], $this->lsize, SAGU::formatNumber($tt[9]), 1, null, 'R' );
        $this->cell($c[10], $this->lsize, SAGU::formatNumber($tt[10]), 1, null, 'R' );
        $this->cell($c[11], $this->lsize, SAGU::formatNumber($tt[11]), 1, null, 'R' );
        $this->cell($c[12], $this->lsize, SAGU::formatNumber($tt[12]), 1, null, 'R' );
        $this->cell($c[13], $this->lsize, SAGU::formatNumber($tt[13]), 1, null, 'R' );
        $this->cell($c[14], $this->lsize, SAGU::formatNumber(round($tt[14]/count($dados),2)), 1, null, 'R' );
        $this->cell($c[15], $this->lsize, SAGU::formatNumber($tt[15]), 1, null, 'R' );
        $this->cell($c[16], $this->lsize, SAGU::formatNumber($tt[16]), 1, null, 'R' );
    }
    public function generatePDF()
    {
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($this->psize-80, $this->lsize, _M('Print mode', 'finance').': ', null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(80, $this->lsize, $this->headerData->reportType == 1 ? _M('Analytical', 'finance') : _M('Synthetic', 'finance') , null, null, 'L');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($this->psize-80, $this->lsize, _M('Year', 'basic').':  ', null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(80, $this->lsize, $this->headerData->year , null, null, 'L');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($this->psize-80, $this->lsize, _M('Month', 'finance').'(s):  ', null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(80, $this->lsize, implode(', ',$this->headerData->month) , null, null, 'L');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', $this->fontSizeBody);
        $this->cell($this->psize-80, $this->lsize, _M('Income source', 'finance').'(s):  ', null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
        $this->cell(80, $this->lsize, implode(', ',$this->headerData->incomeSourceId) , null, null, 'L');
        $this->ln();
        if($this->headerData->reportType == 1 )
        {
            $this->reportType1();

        }
        else
        {
            $this->reportType2();
        }
        PDF::generatePDF();
    }

    public function Header()
    {
        parent::Header();
    }
    public function Footer()
    {
        $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
        if($this->headerData->reportType == 1 )
        {
            $this->setY(-16);
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-47, $this->lsize, 'Valor Principal:');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VP');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-47, $this->lsize, 'Valor Nominal:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VN');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-47, $this->lsize, 'Valor Recebido:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VR');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-52, $this->lsize, 'Incentivos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'INC');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-50, $this->lsize, 'Descontos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'DES');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-57, $this->lsize, 'Juros:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'JUR');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-42, $this->lsize, 'Valor em Aberto:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VA');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-30, $this->lsize, 'Valor em Aberto Atualizado:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VAA');
            $this->ln();
         }
        else
        {
            $this->setY(-20);
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-43, $this->lsize, 'Total de Pessoas:');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'TP');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-32, $this->lsize, 'Total de Titulos em Aberto:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'TTA');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-47, $this->lsize, 'Total de Titulos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'TT');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-49, $this->lsize, 'Receita Prevista:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'RP');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-33, $this->lsize, 'Receita Prevista Nominal:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'RPN');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-10, $this->lsize, 'Receita Prevista Nominal com Incentivos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(20, $this->lsize, 'RPN Inc');
            $this->ln();
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-43, $this->lsize, 'Receita Realizada:', null, null);
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'RR');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-53, $this->lsize, 'Incentivos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'INC');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-52, $this->lsize, 'Descontos:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'DES');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-60, $this->lsize, 'Juros:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'JUR');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-33, $this->lsize, 'Percentual Inadimplencia:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, '% In');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-43, $this->lsize, 'Valor à Receber:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VR');
            $this->setFont(DEFAULT_REPORT_FONT, 'B', $this->fontSizeBody);
            $this->cell($this->psize/4-32, $this->lsize, 'Valor em Aberto Atualizado:', null, null, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, '', $this->fontSizeBody);
            $this->cell(10, $this->lsize, 'VAA');
            $this->ln();
        }

       
        parent::Footer();
    }
}
?>
