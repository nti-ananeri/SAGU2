<?php
/**
 * Class
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * @since
 * Class created on 01/06/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 */

class FINANCE
{

    /** 
     * Return the number in a configured format
     *
     * @param: $number (float): the number to format
     *
     * @returns (varchar): Returns the value formatted 
     *
     */
     public function formatFinanceReportNumber($number)
     {
        $MIOLO = MIOLO::getInstance();
        $db    = $MIOLO->getDatabase('basic');
        
        $operationType = substr($number, strlen((string)$number)-1, 1);
        
        if ( $operationType == 'D' || $operationType == 'C' )
        {
            $number = trim(substr($number, 0, strlen((string)$number)-1));

            $flag = true;
        }

    	$number = SAGU::formatNumber($number);

        $number = number_format($number, REAL_ROUND_VALUE, REPORT_DECIMAL_SEPARATOR, REPORT_THOUSAND_SEPARATOR);
        
        if ( $flag )
        {
            return $number . ' ' . $operationType;
        }
        else
        {
            return $number;
        }
    }
    
    /** 
     * Return the account scheme id formatted
     *
     * @param: $accountSchemeId (string): the account scheme id
     *
     * @returns (varchar): Returns the value formatted
     *
     */
     public function formatAccountSchemeId($accountSchemeId)
     {
        $length = strlen((string)$accountSchemeId);
        switch ($length)
        {
            case 3:
                return substr($accountSchemeId, 0, 3);
                break;
            case 5:
                return substr($accountSchemeId, 0, 3).'.'.
                       substr($accountSchemeId, 3, 2);
                break;
            case 7:
                return substr($accountSchemeId, 0, 3).'.'.
                       substr($accountSchemeId, 3, 2).'.'.
                       substr($accountSchemeId, 5, 2);
                break;
            case 10:
                return substr($accountSchemeId, 0, 3).'.'.
                       substr($accountSchemeId, 3, 2).'.'.
                       substr($accountSchemeId, 5, 2).'.'. 
                       substr($accountSchemeId, 7, 3);
                break;
            case 13:
                return substr($accountSchemeId, 0, 3).'.'.
                       substr($accountSchemeId, 3, 2).'.'.
                       substr($accountSchemeId, 5, 2).'.'.
                       substr($accountSchemeId, 7, 3).'.'.
                       substr($accountSchemeId, 10, 3); 
                break;
            default:
                return $accountSchemeId;
                break;
        }
    }

   /**
    * Return the cost center formatted
    *
    * @param: $costCenterId (string): The cost center id
    *
    * @returns (varchar): Returns the cost center formatted
    *
    */
    public function formatCostCenterId($costCenterId)
    {
        $length = strlen((string)$costCenterId);
        switch ($length)
        {
            case 1:
                return $costCenterId;
                break;
            case 3:
                return substr($costCenterId, 0, 1).'.'.
                       substr($costCenterId, 1, 2);
                break;
            case 5:
                return substr($costCenterId, 0, 1).'.'.
                       substr($costCenterId, 1, 2).'.'.
                       substr($costCenterId, 3, 2);
                break;
            case 8:
                return substr($costCenterId, 0, 1).'.'.
                       substr($costCenterId, 1, 2).'.'.
                       substr($costCenterId, 3, 2).'.'.
                       substr($costCenterId, 5, 3);
                break;
            default:
                return $costCenterId;
        }
    }



}
