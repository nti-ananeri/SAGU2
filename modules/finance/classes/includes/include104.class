<?php

class bank104 extends boletoFunctions 
{
    var $nossoNumero;
    var $codigoBarras;
    var $linhaDigitavel;
    var $carteira;
    var $dvCodigoBanco;

    public function __construct ( $data )
    {
        $codigobanco = '104';
        $this->carteira = $data->wallet;
        $layout = array ( '01' => 'SINCO', '02' => 'SIGCB', '03' => 'SICOB' );
        $cobranca = array ( '1' => 'SR', '2' => 'RG' , 3 => 'CR');
        //SIGCB
        switch ( $layout[$data->variation] )
        {
            case "SICOB": 
                $this->dvCodigoBanco = $this->geraCodigoBanco($codigobanco);
                $nummoeda = '9';
                $dvCedente = $this->digitoVerificador_cedente("$data->assignorCode");
                $dvCedence = $this->formata_numero($dvCedente,1,0);
                $data->nossoNumero = $this->formata_numero($data->bankInvoiceId, 17, 0, "valor");
                $data->nossoNumero = '9' . $data->nossoNumero;
                $dvNossoNumero = $this->modulo_11($data->nossoNumero);
                $nossoNumero = $data->nossoNumero . $dvNossoNumero;
                $codigoBanco = $codigobanco;
                $codigoMoeda = '9';
                $fatorVencimento = $this->fator_vencimento($data->maturityDate);
                $valorDocumento = $this->formata_numero($data->invoiceValue,10,0,"valor");
                $campoLivre = "1{$data->assignorCode}{$data->nossoNumero}";
                $dvGeral = $this->digitoVerificador_barra("$codigoBanco$codigoMoeda$fatorVencimento$valorDocumento$campoLivre");
                $this->codigoBarras = "$codigoBanco$codigoMoeda$dvGeral$fatorVencimento$valorDocumento$campoLivre";
                $this->linhaDigitavel = $this->monta_linha_digitavel($this->codigoBarras);
                $this->nossoNumero = $data->nossoNumero.'-'.$dvNossoNumero;
                $this->agenciaCodigoCedente = $data->branchNumber . " / " . $data->assignorCode . "-" . $dvCedente;
                $this->carteira = $cobranca[2];
                return;
                break;
            case "SINCO": 
                $this->dvCodigoBanco = $this->geraCodigoBanco($codigobanco);
                $nummoeda = '9';
                $dvCedente = $this->modulo_11("$data->branchNumber$data->assignorCode");
                $dvCedence = $this->formata_numero($dvCedente,1,0);
                $data->nossoNumero = $this->formata_numero($data->bankInvoiceId, 17, 0, "valor");
                $data->nossoNumero = '9' . $data->nossoNumero;
                $dvNossoNumero = $this->modulo_11($data->nossoNumero);
                $nossoNumero = $data->nossoNumero . $dvNossoNumero;
                $codigoBanco = $codigobanco;
                $codigoMoeda = '9';
                $fatorVencimento = $this->fator_vencimento($data->maturityDate);
                $valorDocumento = $this->formata_numero($data->invoiceValue,10,0,"valor");
                $campoLivre = "1{$data->assignorCode}{$data->nossoNumero}";
                $dvGeral = $this->digitoVerificador_barra("$codigoBanco$codigoMoeda$fatorVencimento$valorDocumento$campoLivre");
                $this->codigoBarras = "$codigoBanco$codigoMoeda$dvGeral$fatorVencimento$valorDocumento$campoLivre";
                $this->linhaDigitavel = $this->monta_linha_digitavel($this->codigoBarras);
                $this->nossoNumero = $data->nossoNumero.'-'.$dvNossoNumero;
                $this->agenciaCodigoCedente = $data->branchNumber . " / " . $data->assignorCode . "-" . $dvCedente;
                $this->carteira = $cobranca[$data->collectionTypeId];
                return;
                break;
            case "SIGCB":
                $this->dvCodigoBanco = $this->geraCodigoBanco($codigobanco);
                $nummoeda = '9';
                $dvCedente = $this->digitoVerificador_cedente("$data->assignorCode",9,3);
                $dvCedence = $this->formata_numero($dvCedente,1,0);
                $nNumeroComplemento = (int)$data->collectionTypeId . '4';
//                $data->collectionType = 3;
                if ( $data->collectionType == '3' )
                {
                    $data->nossoNumero = '9'.$this->formata_numero($data->bankInvoiceId, 14, 0, "valor");
                }
                else
                {
                    $data->nossoNumero = $this->formata_numero($data->bankInvoiceId, 15, 0, "valor");
                }
                $dvNossoNumero = $this->digitoVerificador_nossonumero($nNumeroComplemento.$data->nossoNumero);
                $nossoNumero = $data->nossoNumero . $dvNossoNumero;
                $codigoBanco = $codigobanco;
                $codigoMoeda = '9';
                $fatorVencimento = $this->fator_vencimento($data->maturityDate);
                $valorDocumento = $this->formata_numero($data->invoiceValue,10,0,"valor");
                $campoLivre  = $this->formata_numero($data->assignorCode, 6, 0, "valor");
                $campoLivre .= $this->formata_numero($dvCedente);
                $campoLivre .= substr($data->nossoNumero,0,3);
                $campoLivre .= (int)$data->collectionTypeId;
                $campoLivre .= substr($data->nossoNumero,3,3);
                $campoLivre .= '4';
                $campoLivre .= substr($data->nossoNumero,6,9);
                $campoLivre .= $this->digitoVerificador_nossonumero($campoLivre);
                $dvGeral = $this->digitoVerificador_barra("$codigoBanco$codigoMoeda$fatorVencimento$valorDocumento$campoLivre");

                $this->codigoBarras = "$codigoBanco$codigoMoeda$dvGeral$fatorVencimento$valorDocumento$campoLivre";
                $this->linhaDigitavel = $this->monta_linha_digitavel($this->codigoBarras);
                $this->nossoNumero = $data->collectionTypeId.'4/'.$data->nossoNumero.'-'.$dvNossoNumero;
                $this->agenciaCodigoCedente = $data->branchNumber . " / " . $data->assignorCode . "-" . $dvCedente;
                $this->carteira = $cobranca[$data->collectionTypeId];
                return ;
                break;
        }
    }

    function digitoVerificador_cedente($numero) 
    {
	    $digito = $this->modulo_11($numero, 9, 3);
        $digito = $digito % 11;
        if ( (int)$digito > 9 ) 
        {
            $digito = 0;
        }
        else if ( $digito <> 0 && $digito <> 1 )
        {
            $digito = 11-$digito;
        }
	    return $digito;
    }

    function digitoVerificador_nossonumero($numero) 
    {
	    $digito = $this->modulo_11($numero, 9);
        if ( (int)$digito > 9 ) 
        {
            $digito = 0;
        }
	    return $digito;
    }
}
?>
