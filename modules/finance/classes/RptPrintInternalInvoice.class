<?php
    
    define('REPORT_ID', 'AC002');
    define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
    
    $MIOLO = MIOLO::getInstance();
    $module = 'finance';
    $MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');
    
    class RptPrintInternalInvoice
    {
    public function RptPrintInternalInvoice($invoiceId)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = 'finance';

        // Create the PDF file
        $pdf = new fpdf();
        $pdf->addPage('P', 'mm', 'A4');
        $pdf->setMargins(10, 10);
        $pdf->setFont('Arial', '', 8);

        $businessCompany = $MIOLO->getBusiness('basic', 'BusCompany');
        $companyData     = $businessCompany->getCompany(DEFAULT_COMPANY_CONF);

        $businessLegalPerson = $MIOLO->getBusiness('basic', 'BusLegalPerson');
        $personData          = $businessLegalPerson->getLegalPerson($companyData->personId);
        // Imagem
        $pdf->image(SAGUFile::getPhotoPath($companyData->personId), 10, 10, 15, 15, PHOTO_FORMAT);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, SAGU::getShortenName($companyData->name, 50));
        $pdf->image(SAGUFile::getPhotoPath($companyData->personId), 105, 10, 15, 15, PHOTO_FORMAT);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, SAGU::getShortenName($companyData->name, 50));
        $pdf->ln();

        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, $personData->location.', '.$personData->number.' '.$personData->complement);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, $personData->location.', '.$personData->number.' '.$personData->complement);
        $pdf->ln();

        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Neighborhood', $module).': '.$personData->neighborhood.' - '.$personData->zipCode.' - '.$personData->cityName.'/'.$personData->stateId);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Neighborhood', $module).': '.$personData->neighborhood.' - '.$personData->zipCode.' - '.$personData->cityName.'/'.$personData->stateId);
        $pdf->ln();

        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Phone', $module).': '.$personData->phone.' '.(strlen((string)$personData->fax)>0 ? ' - '._M('Fax', $module).': '.$personData->fax : ''));
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Phone', $module).': '.$personData->phone.' '.(strlen((string)$personData->fax)>0 ? ' - '._M('Fax', $module).': '.$personData->fax : ''));
        $pdf->ln();
        $pdf->cell(15, 2.6, '');

        $pdf->cell(80, 2.6, _M('CNPJ', $module).': '.SAGU::formatCNPJ($personData->cnpj).' - '._M('State insc.', $module).': '.(strlen((string)$personData->stateRegistration)>0 ? $personData->stateRegistration : _M('Exempt', $module)));
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('CNPJ', $module).': '.SAGU::formatCNPJ($personData->cnpj).' - '._M('State insc.', $module).': '.(strlen((string)$personData->stateRegistration)>0 ? $personData->stateRegistration : _M('Exempt', $module)));
        $pdf->ln();

        $businessReceivableInvoice = $MIOLO->getBusiness($module, 'BusReceivableInvoice');
        $receivableInvoiceData     = $businessReceivableInvoice->getReceivableInvoice($invoiceId);

        $pdf->setFont('Arial', 'B', 8);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Maturity date', $module).': '.$receivableInvoiceData->maturityDate);
        $pdf->setFont('Arial', 'B', 8);
        $pdf->cell(15, 2.6, '');
        $pdf->cell(80, 2.6, _M('Maturity date', $module).': '.$receivableInvoiceData->maturityDate);
        $pdf->ln();

        $businessPerson = $MIOLO->getBusiness('basic', 'BusPerson');
        $dataPerson     = $businessPerson->getPersonName($receivableInvoiceData->personId);

        $pdf->setFont('Arial', 'B', 8);
        $pdf->cell(15, 3, _M('Pupil', $module).': ');
        $pdf->setFont('Arial', '', 8);
        $pdf->cell(80, 3, $receivableInvoiceData->personId.' - '.SAGU::getShortenName($dataPerson, 40));
        $pdf->setFont('Arial', 'B', 8);
        $pdf->cell(15, 3, _M('Pupil', $module).': ');
        $pdf->setFont('Arial', '', 8);
        $pdf->cell(80, 3, $receivableInvoiceData->personId.' - '.SAGU::getShortenName($dataPerson, 40));
        $pdf->ln();

        if ((MODULE_ACADEMIC_INSTALLED == 'YES') && (strlen((string)$receivableInvoiceData->courseId)>0))
        {
            $businessCourse = $MIOLO->getBusiness('academic', 'BusCourse');
            $dataCourse = $businessCourse->getCourse($receivableInvoiceData->courseId);
            $pdf->setFont('Arial', 'B', 8);
            $pdf->cell(15, 3, _M('Course', $module).': ');
            $pdf->setFont('Arial', '', 8);
            $pdf->cell(80, 3, $receivableInvoiceData->courseId.' - '.$dataCourse->shortName);
            $pdf->setFont('Arial', 'B', 8);
            $pdf->cell(15, 3, _M('Course', $module).': ');
            $pdf->setFont('Arial', '', 8);
            $pdf->cell(80, 3, $receivableInvoiceData->courseId.' - '.$dataCourse->shortName);
            $pdf->ln();
    
            $businessUnit = $MIOLO->getBusiness('basic', 'BusUnit');
            $dataUnit     = $businessUnit->getUnit($receivableInvoiceData->unitId);
    
            $pdf->setFont('Arial', 'B', 8);
            $pdf->cell(15, 3, _M('Unit', $module).': ');
            $pdf->setFont('Arial', '', 8);
            $pdf->cell(80, 3, $receivableInvoiceData->unitId.' - '.$dataUnit->description);
            $pdf->setFont('Arial', 'B', 8);
            $pdf->cell(15, 3, _M('Unit', $module).': ');
            $pdf->setFont('Arial', '', 8);
            $pdf->cell(80, 3, $receivableInvoiceData->unitId.' - '.$dataUnit->description);
            $pdf->ln();
        }
        $pdf->ln();

        $pdf->setFont('Arial', 'B', 9);
        $pdf->cell(10, 3.5, _M('Op.', $module), 1, 0, 'C');
        $pdf->cell(60, 3.5, _M('Op. description', $module), 1, 0, 'C');
        $pdf->cell(20, 3.5, _M('Value', $module), 1, 0, 'C');
        $pdf->cell(5, 3.5, '');
        $pdf->setFont('Arial', 'B', 9);
        $pdf->cell(10, 3.5, _M('Op.', $module), 1, 0, 'C');
        $pdf->cell(60, 3.5, _M('Op. description', $module), 1, 0, 'C');
        $pdf->cell(20, 3.5, _M('Value', $module), 1, 0, 'C');
        $pdf->ln();

        $pdf->setFont('Arial', '', 9);
        $busEntry  = $MIOLO->getBusiness($module, 'BusEntry');
        $entryData = $busEntry->listEntryData($receivableInvoiceData->invoiceId, 3);
        
        if (is_array($entryData[0]))
        {
            foreach($entryData as $key => $ed)
            {
            
                if ($key == 0)
                {
                    $pdf->setFillColor(255);
                }
                else
                {
                    $pdf->setFillColor(2%$key == 0 ? 255 : 235);
                }
                // Calculate spaces for string
                $x       = $pdf->getX();
                $y       = $pdf->getY();
                $strsize = $pdf->getStringWidth($ed[3]);
                $breaks  = ceil($strsize/50)>1 ? ceil($strsize/50) : 1;
                $lines   = 4*$breaks;
                $pdf->cell(10, $lines, $ed[2], 1, 0, 'C');
                $pdf->multiCell(60, 4, trim($ed[3]), 'LRT', 'L');
                $y2      = $pdf->getY();
                $pdf->setY($y);
                $pdf->setX($x+70);
                $pdf->cell(20, $lines, $ed[6], 1, 0, 'R');

                $pdf->cell(5, 4, '');
                $x       = $pdf->getX();
                $y       = $pdf->getY();
                $pdf->cell(10, $lines, $ed[2], 1, 0, 'C');
                $pdf->multiCell(60, 4, $ed[3], 'LRT', 'L');
                $y2      = $pdf->getY();
                $pdf->setY($y);
                $pdf->setX($x+70);
                $pdf->cell(20, $lines, $ed[6], 1, 0, 'R');
                $pdf->ln();
            }
            $balance = (float)$businessReceivableInvoice->getBalance($receivableInvoiceData->invoiceId);

            $balanceWithPolicies =  (float)$businessReceivableInvoice->getBalanceWithPolicies($receivableInvoiceData->invoiceId);

            $situation = (float)SAGU::calcNumber('('.$balanceWithPolicies.')-('.$balance.')', true);

            if ($situation<0)
            {
                $msg = _M('Discount', $module);
            }
            elseif ($situation>0)
            {
                $msg = _M('Interest', $module);
            }
            else
            {
                $msg = '';
            }
            $pdf->setFillColor(230);
            $pdf->cell(70, 4, '  '.$msg.' ('._M('Open balance', $module).': '.SAGU::formatNumber($balance).')', 1, 0, 'L', 1);
            $pdf->cell(20, 4, SAGU::formatNumber($situation), 1, 0, 'R', 1);

            $pdf->cell(5, 4, '');
            $pdf->setFillColor(230);
            $pdf->cell(70, 4, '  '.$msg.' ('._M('Open balance', $module).': '.SAGU::formatNumber($balance).')', 1, 0, 'L', 1);
            $pdf->cell(20, 4, SAGU::formatNumber($situation), 1, 0, 'R', 1);
            $pdf->ln();
            $pdf->setFillColor(255);
            $pdf->cell(70, 4, _M('Open balance', $module), 1, 0);
            $pdf->cell(20, 4, SAGU::formatNumber($balanceWithPolicies), 1, 0, 'R');
            $pdf->cell(5, 4, '');
            $pdf->cell(70, 4, _M('Open balance', $module), 1, 0);
            $pdf->cell(20, 4, SAGU::formatNumber($balanceWithPolicies), 1, 0, 'R');
            $pdf->ln();

            $pdf->cell(70, 4, '', 1, 0);
            $pdf->cell(20, 4, '', 1, 0);
            $pdf->cell(5, 4, '');
            $pdf->cell(70, 4, '', 1, 0);
            $pdf->cell(20, 4, '', 1, 0);
            $pdf->ln();

            $pdf->cell(70, 4, _M('General total', $module), 1, 0);
            $pdf->cell(20, 4, '', 1, 0);
            $pdf->cell(5, 4, '');
            $pdf->cell(70, 4, _M('General total', $module), 1, 0);
            $pdf->cell(20, 4, '', 1, 0);
            $pdf->ln();
        }
        $pdf->output();
    }
}
?>
