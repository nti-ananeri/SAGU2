<?php

/**
 * Class to generate the bank remittance
 * FEBRABAN
 */
class ReturnInvoice356
{
	public $header;
	public $treiler;
	public $detail;
	public function ReturnInvoice356($data)
	{
		$file = SAGUFile::GetFilePath($data->fileId);
		$MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
		$businessReturn = $MIOLO->getBusiness($module, 'BusReturnInvoice');
		if(file_exists($file))
		{
			$fread = file($file);
			$size = strlen((string)str_replace("\n",'',$fread[0]))-1;
			$businessReturn->fileId = $data->fileId;
			//CNAB 400
			if($size == 400) 
			{
				if(substr($fread[0],0,1) == 0)
				{
					$this->header->bankId		= substr($fread[0],76,3);
					$this->header->serviceLot	= substr($fread[0],394,6);
					$this->header->fileHeader	= substr($fread[0],7,1);
					$this->header->cjpn			= substr($fread[0],18,14);
					$this->header->accord		= substr($fread[0],32,20);
					$this->header->branch		= substr($fread[0],27,4);
//					$this->header->branchDigit	= substr($fread[0],,1);
					$this->header->account		= substr($fread[0],32,7);
					$this->header->accountDigit	= substr($fread[0],71,1);
					$this->header->type			= substr($fread[0],142,1);
					$this->header->genDate		= substr($fread[0],94,6);
					$this->header->genTime		= substr($fread[0],151,6);
					$this->header->occurrence	= substr($fread[0],108,8);	
				}
				if(substr($fread[count($fread)-1],0,1) == 9)
				{
					$this->treiler->bankId		= substr($fread[count($fread)-1],4,3);
					$this->treiler->serviceLot	= substr($fread[count($fread)-1],394,6);
					$this->treiler->totalLot	= substr($fread[count($fread)-1],7,8);
					$this->treiler->totalRegist	= substr($fread[count($fread)-1],7,8);
				}
			}
			//$businessReturn->openTransaction();
			for($x = 1; $x < (count($fread)-1); $x++)
			{
				unset($this->detail);
				if($size == 400) 
				{
					if( substr($fread[$x],0,1) == 1 )
					{
						$this->detail->bankInvoiceId	= (float)substr($fread[$x],64,7);
						$this->detail->documentNumber	= substr($fread[$x],58,15);
						$this->detail->maturityDate		= substr($fread[$x],146,2).substr($fread[$x],148,2).'20'.substr($fread[$x],150,2);
						$this->detail->value			= (float)(substr($fread[$x],152,13)/100);
						$this->detail->myBankInvoiceId  = substr($fread[$x],126,7);
						//$this->detail->inscription		= substr($fread[$x],133,15);
						//$this->detail->name				= substr($fread[$x],148,40);
						//$this->detail->tax				= (float)(substr($fread[$x],175,13)/100);
						//$this->detail->cnab			    = substr($fread[$x],223,17);
						//$this->detail->charges			= (float)(substr($fread[$x],17,15)/100);

						$this->detail->interest			= (float)(substr($fread[$x],266,13)/100);
						$this->detail->fine				= (float)(substr($fread[$x],214,13)/100);
						$this->detail->discount			= (float)(substr($fread[$x],240,13)/100);
						$this->detail->payedValue		= (float)(substr($fread[$x],253,13)/100);
						$this->detail->entryDate		= substr($fread[$x],110,2).substr($fread[$x],112,2).'20'.substr($fread[$x],114,2);
						//$this->detail->ourNumber		= substr($fread[$x],213,20);
						$dataX = $this->detail;
						$dataX->bankAccountId = $data->bankAccountId;
						$dataX->accord = 1;
						if(in_array(substr($fread[$x],108,2),array('05','06','07','17')))
						{
							//MIOLO::vd(substr($fread[$x],108,2));
                            $businessReturn->processDetail($dataX);
						}
					}
				}
			}
			$businessReturn->closeTransaction();
			$this->processInfo = $businessReturn->processInfo;
		}
	}
}
?>
