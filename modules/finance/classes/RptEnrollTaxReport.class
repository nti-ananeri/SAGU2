<?php

/**
 * Default defines 
 * To report identification
 */
define('REPORT_ID', 'FIN009'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();
$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $B;
    var $I;
    var $U;
    var $HREF;
    /**
     * Defines the footer for this report
     */
    public function Footer()
    {

    }

    /**
     * Defines the header for this report
     */
    public function Header()
    {

    }
}

/**
 * PDF extension to generate report
 */
class RptEnrollTaxReport 
{
    /**
     * Method to generate the report data
     */
    public function RptEnrollTaxReport($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $busContract          = $MIOLO->getBusiness('academic', 'BusContract');
        $busReceivableInvoice = $MIOLO->getBusiness($module, 'BusReceivableInvoice');

        // Generating PDF file
        $pdf = new PDF();
        $pdf->aliasNbPages();
        $pdf->setMargins(25, 30, 20);


        /* Contratos ativos com taxa de matrícula não paga */
        $data->balance = true;
        $contracts = $busContract->getActiveContractsAndBalances($data);

        if ( count($contracts) > 0 )
        {

            $oldCourseId    = $contracts[3];

            foreach ( $contracts as $contract )
            {
                list ( $data->personId,
                       $data->name,
                       $data->courseId,
                       $data->courseVersion,
                       $data->courseName,
                       $data->turnId,
                       $data->turnDescription,
                       $data->unitId,
                       $data->unitDescription,
                       $data->haveBalance ) = $contract;

                // Página que separa os pagantes dos não pagantes
                if ( $oldHaveBalance != $data->haveBalance )
                {

                    $oldHaveBalance = $data->haveBalance;
                    $pdf->addPage('P', 'mm', 'A4');
                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 20);
                    $pdf->ln(10);
                    $pdf->cell(170, 5, _M('Enroll fee', $module) . ':', 0, 0, 'C');

                    $pdf->ln(40);

                    $pdf->setFont(DEFAULT_REPORT_FONT, 'BI', 20);
                    $pdf->line(20, $pdf->getY(), 190, $pdf->getY());
                    $pdf->ln(2);
                    if ( $data->haveBalance == DB_TRUE )
                    {
                        $pdf->cell(170, 5, _M('Not paying', $module), 0, 0, 'C');
                    }
                    else
                    {
                        $pdf->cell(170, 5, _M('Paying', $module), 0, 0, 'C');
                    }
                    $pdf->ln(6);
                    $pdf->line(20, $pdf->getY(), 190, $pdf->getY());
                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 20);

                    $pdf->ln(40);

                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 14);
                    $pdf->cell(170, 5, $data->startDate, 0, 0, 'C');
                    $pdf->ln();
                    $pdf->cell(170, 5, '-', 0, 0, 'C');
                    $pdf->ln();
                    $pdf->cell(170, 5, $data->endDate, 0, 0, 'C');
                    $pdf->ln(2);
                    $pdf->addPage('P', 'mm', 'A4');
                    $key = 1;
                }

                if ( $oldCourseId != $data->courseId || $key == 1 )
                {
                    $pdf->ln(6);
                    $pdf->line(20, $pdf->getY(), 190, $pdf->getY());
                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                    $pdf->cell(80, 5, _M('Course', $module) . ':', 0, 0, 'R');
                    $pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                    $pdf->cell(140, 5, $data->courseId . '/' . $data->courseVersion . ' - ' . $data->courseName, 0, 0, 'L');
                    $pdf->ln();

                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                    $pdf->cell(80, 5, _M('Unit', $module) . ':', 0, 0, 'R');
                    $pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                    $pdf->cell(140, 5, $data->unitId . ' - ' . $data->unitDescription, 0, 0, 'L');
                    $pdf->ln();

                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                    $pdf->cell(80, 5, _M('Turn', $module) . ':', 0, 0, 'R');
                    $pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                    $pdf->cell(140, 5, $data->turnId . ' - ' . $data->turnDescription, 0, 0, 'L');
                    $pdf->ln(5);

                    $pdf->setFont(DEFAULT_REPORT_FONT, 'B', 12);
                    $pdf->line(20, $pdf->getY(), 190, $pdf->getY());
                    $pdf->cell(20, 5, _M('Id', $module), 0, 0, 'R');
                    $pdf->cell(50, 5, _M('Name', $module), 0, 0, 'L');
                    //$pdf->cell(90, 5, _M('Balance', $module), 0, 0, 'R');
                    $pdf->ln(6);
                    $pdf->line(20, $pdf->getY(), 190, $pdf->getY());
                    $pdf->ln(2);
                    
                    $oldCourseId = $data->courseId;
                    $key = 0;
                }

                $pdf->setFont(DEFAULT_REPORT_FONT, '', 10);
                $pdf->cell(20, 5, $data->personId, 0, 0, 'R');
                $pdf->cell(50, 5, $data->name, 0, 0, 'L');
                //$pdf->cell(90, 5, 'R$ ' . $data->balance, 0, 0, 'R');
                $pdf->ln();

            }

            $pdf->close();
            $pdf->output();

        }
    }
}

?>
