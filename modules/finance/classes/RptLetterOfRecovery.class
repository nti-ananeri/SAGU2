<?
/**
*
* @author Giovani Murilo Dantas Correa [gmurilo@isolution.inf.br]
*
* $version: $Id$
*
* \b Maintainers \n
* Daniel Afonso Heisler [daniel@isolution.inf.br]
* Walter Gonçalves (jwaltergsj@gmail.com; walter@todotech.com.br; http://www.todotech.com.br)
* 
* @since
* Class created on 24/09/2008
*
* \b Organization: \n
* iSolution - Soluções de Internet \n
* The iSolution TEAM
*
* \b CopyLeft: \n
* CopyLeft (L) 2007 iSolution - Soluções de Internet \n
*
* \b License \n
* Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
*
* \b History \n
* See history in CVS repository: http://isolution.inf.br   
*
**/
set_time_limit(0);        
$MIOLO = MIOLO::getInstance();
$module = 'finance';

define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
define('REPORT_ID', _M('Letter of recovery',$module));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptLetterOfRecovery extends PDF
{
    public function __construct($data = NULL)
    {
        $this->title = '   '; //strtoupper(REPORT_ID);
    	parent::__construct($data);
        $this->useUserInfo = false;
        $this->addPage('P', 'mm', 'A4');
        $this->aliasNbPages();
        $this->criaReport($data);
		$this->output();
    }
    public function criaReport($data)
    {
        
        $MIOLO = MIOLO::getInstance();
        //$tab = str_repeat(' ', 10);
        $tab = '';
        if ( count($data) == 1 )
        {
    	    $this->setFont(DEFAULT_REPORT_FONT, 'B', 12);
            $this->cell($this->psize, $this->lsize, 'No data found', NULL, NULL, 'C');
            $this->ln();
            return;
        }
        $business = $MIOLO->getBusiness('finance', 'BusLetterOfRecovery');
        $sectorData = $business->getAgreementSector();
        
        unset($data['unitId']);
        
        //echo '<pre>'; print_r($data);die();
       
        foreach($data as $item => $value)
        {
            $xx++;
            $this->ln();
            //Nome 
    		$this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell(30, $this->lsize, _M('Pupil', 'academic') . ':', NULL, NULL, 'L');
       		$this->setFont(DEFAULT_REPORT_FONT, NULL, 8);
            $this->cell($this->psize-30, $this->lsize, $item . ' - ' . $data[$item]['name'], NULL, NULL, 'L');
            $this->ln();

            //Endereço
    		$this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell(30, $this->lsize, _M('Address', 'academic') . ':', NULL, NULL, 'L');
   		    $this->setFont(DEFAULT_REPORT_FONT, NULL, 8);
            $this->cell($this->psize-30, $this->lsize, $data[$item]['location'] . ', ' . _M('Number', 'basic') . ' ' . $data[$item]['number'] . ' - ' . _M('Neighborhood', 'basic') . ': ' . $data[$item]['neighborhood'] . ' | ' . $data[$item]['cityName'] . ' / ' . $data[$item]['stateId'] . ' - ' . _M('Zip code', 'basic') . ' ' . $data[$item]['zipCode'], NULL, NULL, 'L');
            $this->ln();

            //Curso
	    	$this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell(30, $this->lsize, _M('Course', 'academic') . ':', NULL, NULL, 'L');
   	    	$this->setFont(DEFAULT_REPORT_FONT, NULL, 8);
            $this->cell($this->psize-30, $this->lsize, $data[$item]['courseId'] . ' - ' . $data[$item]['courseName'], NULL, NULL, 'L');
            $this->ln();
            
            //Turma
	    	$this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell(30, $this->lsize, _M('Class', 'academic') . ':', NULL, NULL, 'L');
   	    	$this->setFont(DEFAULT_REPORT_FONT, NULL, 8);
            $this->cell($this->psize-30, $this->lsize, $data[$item]['classId'], NULL, NULL, 'L');
            $this->ln();

            //Mensagem
            $this->ln();
            $this->cell($this->psize, $this->lsize, _M('Dear pupil', 'academic') . ',', NULL, 'L');
            $this->ln();
    
            $this->Write( $this->lsize, $tab . 'Informamos que até a presente data, não constatamos em nossos registros o pagamento do(s) débito(s) abaixo relacionados:');
            $this->ln();
            $this->ln();

            //Tabela
            $nCols = 8;
            $colSize = ($this->psize-60) / $nCols;

            $this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell($colSize, $this->lsize, _M('Invoice', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Emission', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Maturity', 'finance'), 'LTB', NULL, 'C');
            $this->cell(60, $this->lsize, _M('Income source', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Value', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Balance', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Fine', 'finance'), 'LTB', NULL, 'C'); 
            $this->cell($colSize, $this->lsize, _M('Interest', 'finance'), 'LTB', NULL, 'C');
            $this->cell($colSize, $this->lsize, _M('Updated', 'finance'), 'LRTB', NULL, 'C');
            $this->ln();

            //Valores
            $this->setFont(DEFAULT_REPORT_FONT, NULL, 8);
            $totalValue[0] = 0;
            $totalValue[1] = 0;
            $totalValue[2] = 0;
            foreach ($value['invoices'] as $invoice => $valueInvoice )
            {
                $this->cell($colSize, $this->lsize, $invoice, 'LTB', NULL, 'C');
                $this->cell($colSize, $this->lsize, $value['invoices'][$invoice]['emissionDate'], 'LTB', NULL, 'C');
                $this->cell($colSize, $this->lsize, $value['invoices'][$invoice]['maturityDate'], 'LTB', NULL, 'C');
                $this->cell(60, $this->lsize,$value['invoices'][$invoice]['incomeSourceDescription'], 'LTB', NULL, 'C');
                $this->cell($colSize, $this->lsize, SAGU::formatNumber($value['invoices'][$invoice]['value'], true), 'LTB', NULL, 'R');
                $this->cell($colSize, $this->lsize, SAGU::formatNumber($value['invoices'][$invoice]['balance'], true), 'LTB', NULL, 'R');
                $this->cell($colSize, $this->lsize, SAGU::formatNumber($value['invoices'][$invoice]['fine'], true), 'LTB', NULL, 'R');
                $this->cell($colSize, $this->lsize, SAGU::formatNumber($value['invoices'][$invoice]['interest'], true), 'LTB', NULL, 'R');
                $this->cell($colSize, $this->lsize, SAGU::formatNumber($value['invoices'][$invoice]['balanceWithPolicies'], true), 'LRTB', NULL, 'R');
                $totalValue[0] += $value['invoices'][$invoice]['value'];
                $totalValue[1] += $value['invoices'][$invoice]['balance'];
                $totalValue[2] += $value['invoices'][$invoice]['fine'];
                $totalValue[3] += $value['invoices'][$invoice]['interest'];
                $totalValue[4] += $value['invoices'][$invoice]['balanceWithPolicies'];
                $this->ln();
            }
            $this->setFont(DEFAULT_REPORT_FONT, 'BI', 8);
            $this->cell($this->psize-(5*$colSize), $this->lsize, _M('Total current value', 'finance'), 'RLTB', NULL, 'R');
            $this->setFont(DEFAULT_REPORT_FONT, 'I', 8);
            $this->cell($colSize, $this->lsize, SAGU::formatNumber($totalValue[0], true), 'RTBL', NULL, 'R');
            $this->cell($colSize, $this->lsize, SAGU::formatNumber($totalValue[1], true), 'RTBL', NULL, 'R');
            $this->cell($colSize, $this->lsize, SAGU::formatNumber($totalValue[2], true), 'RTBL', NULL, 'R');
            $this->cell($colSize, $this->lsize, SAGU::formatNumber($totalValue[3], true), 'RTBL', NULL, 'R');
            $this->cell($colSize, $this->lsize, SAGU::formatNumber($totalValue[4], true), 'RTBL', NULL, 'R');
            $this->ln();
            $this->ln();

            $this->setFont(DEFAULT_REPORT_FONT, '', 8);
            $this->Write($this->lsize, $tab . 'Para regularizar a sua situação, solicitamos o seu comparecimento à nossa Central de Negociação.'. "\n" . $tab . 'Caso já tenha efetuado o pagamento, favor desconsiderar esta correspondência, e dirigir-se até a nossa Central de Negociação munido do(s) comprovantes(s) de pagamento para que possamos tomar a(s) devida(s) providência(s) e nos desculpe o transtorno.' . "\n" . $tab . 'Fique em dia com seus débitos, e ganhe desconto nos pagamentos à vista e parcelamento.'. "\n" . $tab . 'Entre em contato conosco pelos telefones / fax: '. $this->pdfInfo->legalPerson->phone .  ' / ' . $this->pdfInfo->legalPerson->fax . ', ou email: negociacao.ananeri@gmail.com.');
            $this->ln();
            $this->ln();
            $this->cell($this->psize, $this->lsize, _M('Yours truly', 'academic').',', NULL, NULL, 'C');
            $this->ln();
            $this->cell($this->psize, $this->lsize, date(MASK_DATE_PHP), NULL, NULL, 'C');
            $this->ln();
            $this->ln();
            $this->setFont(DEFAULT_REPORT_FONT, 'B', 8);
            $this->cell($this->psize, $this->lsize, 'Setor de Negociação' , NULL, NULL, 'C');
            $this->ln();
            $this->setFont(DEFAULT_REPORT_FONT, '', 8);
            if ( (count($data) ) > $xx )
            {
                $this->addPage();
            }
        }
    }
}
?>
