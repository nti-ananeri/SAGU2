<?
/**
*
* @author Giovani Murilo Dantas Correa [gmurilo@isolution.inf.br]
*
* $version: $Id$
*
* \b Maintainers \n
* Daniel Afonso Heisler [daniel@isolution.inf.br]
*
* @since
* Class created on 25/03/2009
*
* \b Organization: \n
* iSolution - Soluções de Internet \n
* The iSolution TEAM
*
* \b CopyLeft: \n
* CopyLeft (L) 2007 iSolution - Soluções de Internet \n
*
* \b License \n
* Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
*
* \b History \n
* See history in CVS repository: http://isolution.inf.br   
*
**/
set_time_limit(0);        
$MIOLO = MIOLO::getInstance();
$module = 'academic';

define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');

class RptPromissoryNote extends PDF
{
    var $module = 'basic';

    public function __construct($filters = NULL)
    {
        $MIOLO = MIOLO::getInstance();

        $this->title = strtoupper('Test report');
        parent::__construct();
        $this->useUserInfo = true;
        $this->SetMargins(40, 4, 4 );
        $this->rMargin = 4;
        $this->addPage('P', 'mm', 'A4');
        $this->SetMargins(40, 4, 4 );
        $this->rMargin = 4;
        $this->aliasNbPages();
        $this->fontSizeBody = 8;
        $this->lsize = 4;
        $this->setFont(DEFAULT_REPORT_FONT, 'I', $this->fontSizeBody);
        $this->setTextColor(0,0,0);

        $bPerson = $MIOLO->getBusiness('basic','BusPhysicalPerson');


        //$this->promissoriaInfo->value = (float)2340.10;
        //$this->promissoriaInfo->maturityDate = '10/10/2011';
        //$this->promissoriaInfo->person = $bPerson->getPhysicalPerson(13468);
        $this->getPromissoriaInfo($filters);
//        $this->promissoriaInfo->person->name = 'GIOVANI MURILO DANTAS CORRÊA';
//        $this->promissoriaInfo->person->cpf  = '66633249349';
        $this->generatePDF();
    }
    public function generatePDF()
    {
        $MIOLO = MIOLO::getInstance();
        $this->setFillColor(250,250,210);
        $x = $this->x;
        $y = $this->y;
        $carimboHorizontalImage = $MIOLO->getModulePath('basic', 'html/images/carimbo_horizontal_'.$this->company->companyId.'.jpg');
        if ( is_file($carimboHorizontalImage) )
        {
            $this->image($carimboHorizontalImage, ($this->psize/2), 20, 40, 40);
        }
        $this->SetXY(2, 2);
        $this->setFillColor(192, 192, 192);
//        $this->cell($this->psize+16, 73, '', null, null, null, true);
        $this->SetXY($x+2, $y+3);
        $this->setFont(DEFAULT_REPORT_FONT, 'B', 16);
        $this->cell(5,  6, 'N.', null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(22, 6, '01', null, null, 'C', true);
        $this->cell(2, 6, null);
        $this->cell(40, 6, $this->promissoriaInfo->maturityDate, null, null, 'R', true);
        $this->cell(40, 6, null);
        $this->setFont(DEFAULT_REPORT_FONT, 'B', 16);
        $this->cell(12, 6, $this->pdfInfo->legalPerson->country->currencySymbol, null, null, 'R');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(40, 6, SAGU::formatNumber($this->promissoriaInfo->value, true) , null, null, 'R', true);
        $this->ln(8);
        $this->rMargin = 6;
        $this->lMargin = 40;
        list ( $day, $month, $year ) = explode('/', $this->promissoriaInfo->maturityDate);
        $text = 'Ao(s) ' . strtolower(SAGU::extensive($day)). ' dias do mes de ' . SAGU::listMonths($month). ' do ano de ' . strtolower(SAGU::extensive($year)) . ' pagarei, por esta única via de NOTA PROMISSÓRIA ao '. $this->pdfInfo->legalPerson->name . ' CNPJ '. $this->pdfInfo->legalPerson->cnpj . ' ou a sua ordem, a quantia de ' . $this->pdfInfo->legalPerson->country->currencySymbol . ' '. SAGU::formatNumber($this->promissoriaInfo->value, true) . ' (' . strtolower(SAGU::extensive($this->promissoriaInfo->value, 'M', true)). ') em moeda corrente deste pais.';
        $this->multiCell(164, 5, strtoupper($text));
        $this->ln(4);

        $this->setFont(DEFAULT_REPORT_FONT, 'B', 10);
        $this->cell(27, 5, 'PAGAVEL EM : ');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(57, 5, $this->pdfInfo->legalPerson->cityName . '-' . $this->pdfInfo->legalPerson->stateId, null, null, 'L');
        $this->ln(7);

        $this->cell(27, 5, 'EMITENTE : ');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(57, 5, $this->promissoriaInfo->person->name, null, null, 'L');
        $this->cell(10, 5, null, null, null );
        $this->cell(70, 5, '', 'B', null, 'L');
        $this->ln(7);

        $this->cell(27, 5, 'CPF/CGC : ');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(57, 5, SAGU::convertInCPFFormat($this->promissoriaInfo->person->cpf), null, null, 'L');
        $this->cell(10, 5, null, null, null );
        $this->setFont(DEFAULT_REPORT_FONT, 'B', 10);
        $this->cell(20, 5, 'EMISSAO: ', '', null, 'L');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);
        $this->cell(50, 5, date('d/m/Y'), '', null, 'L');
        $this->ln(7);

        
        $this->cell(27, 5, 'ENDERECO : ');
        $this->setFont(DEFAULT_REPORT_FONT, '', 10);

        $this->multiCell(137, 5, strtoupper($this->promissoriaInfo->person->location . ', ' . $this->promissoriaInfo->person->number . ' - ' . $this->promissoriaInfo->person->neighborhood . ' - ' . _M('Zip code', 'basic') .':'  . $this->promissoriaInfo->person->zipCode . ' (' . $this->promissoriaInfo->person->complement . ') /  ' . $this->promissoriaInfo->person->cityName . '-' . $this->promissoriaInfo->person->stateId ));
        $this->ln(7);
        $y = $this->y;
        $this->setXY($this->tMargin, 6);
        $avalistaImage = $MIOLO->getModulePath('finance', 'html/images/avalistas.png');
//        (SAGUFile::getPhotoPath($this->pdfInfo->company->personId), $this->lMargin+2.5, $this->tMargin+2.5+$y, NULL, (round(116/$this->k,0)/1.8), PHOTO_FORMAT);
        $cpfCgcImage = $MIOLO->getModulePath('finance', 'html/images/cpf_cgc.png');
        
        $this->line(14, 6, 14, $y-7);
        $this->image($avalistaImage, 4, ($y-7)-17, 2.5, 17);           
        $this->line(30, 6, 30, $y-7);
        $this->image($cpfCgcImage, 15, ($y-7)-12, 2.3, 12);           
        $this->image($cpfCgcImage, 31, ($y-7)-12, 2.3, 12);           

        PDF::generatePDF();
    }

    public function Header()
    {
    }
    public function Footer()
    {
    //    parent::Footer();
    }
    public function getPromissoriaInfo($filters = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $module = 'academic';
    
     	$this->setFont(DEFAULT_REPORT_FONT, '', 8);

        $busStamp         = $MIOLO->getBusiness('basic','BusStamp');
        $busPerson        = $MIOLO->getBusiness('basic','BusPhysicalPerson');
        $busDocument      = $MIOLO->getBusiness('basic','BusDocument');
        $busMaritalStatus = $MIOLO->getBusiness('basic','BusMaritalStatus');
        $busCity          = $MIOLO->getBusiness('basic','BusCity');
        $busState         = $MIOLO->getBusiness('basic','BusState');
        $busCountry       = $MIOLO->getBusiness('basic','BusCountry');
        $busAgreementTerm = $MIOLO->getBusiness('finance', 'BusAgreementTerm');
 
        $person         = $busPerson->getPhysicalPerson($filters->personId);
        if ( strlen((string)$person->responsableLegalId) > 0 )
        {
            $person2        = $busPerson->getPhysicalPerson($person->responsableLegalId);
        }
        $invoices        = $busAgreementTerm->getInvoices($filters);
        $balance = ($invoices[0]->saldoComPoliticas-$invoices[0]->desconto);
        $person->parcelsTotalValue = 0; 
        $person->parcelsNumber = 0;
        $person->describeParcels = '';
        foreach ( $invoices as $item => $value )
        {
            if ( $value->invoiceType == 'I' )
            {
                $invoiceInput[] = $value->invoiceId;
            }
            elseif ( $value->invoiceType == 'O' && $value->parcelNumber == 'ENTRADA' )
            {
                $person->inputValue = $value->entrada;
                $person->describeParcels .= 'TIPO: ENTRADA       VENCIMENTO: '. $value->dataVencimento . '      VALOR: '. $this->pdfInfo->legalPerson->country->currencySymbol . ' ' . SAGU::formatNumber($value->valorGerado, true). '     TITULO: '. $value->invoiceId . "\n";
                $lastDate = $value->dataVencimento;

            }
            elseif ( $value->invoiceType == 'O' )
            {
                $person->parcelsNumber++;
                $person->describeParcels .= 'TIPO: PARCELA '. $person->parcelsNumber . '     VENCIMENTO: '. $value->dataVencimento . '      VALOR: '. $this->pdfInfo->legalPerson->country->currencySymbol . ' ' . SAGU::formatNumber($value->valorGerado, true). '     TITULO: '. $value->invoiceId . "\n";
                $person->parcelsTotalValue += (float)$value->valorGerado;
                $lastDate = $value->dataVencimento;
            }
        }
        $this->promissoriaInfo->maturityDate = $lastDate;
        $this->promissoriaInfo->value = $person->parcelsTotalValue + $person->inputValue;
        $this->promissoriaInfo->person = $person;
    }
}
?>
