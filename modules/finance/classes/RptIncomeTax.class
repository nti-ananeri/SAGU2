<?php

/**
*
* This file handles the connection and actions for finBank table
*
* @author Giovani Murilo Dantas Correa [gmurilo@gmail.com]
*
* $version: $Id$
*
* \b Maintainers \n
* Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
* Daniel Afonso Heisler [daniel@solis.coop.br]
* Jamiel Spezia [jamiel@solis.coop.br]
* Rafael Luís Spengler [rafael@solis.coop.br]
* William Prigol Lopes [william@solis.coop.br]
* Eduardo Beal Miglioransa [eduardo@solis.coop.br]
*
* @since
* Class created on 18/10/2007
*
* \b Organization: \n
* iSolution - Soluções de Internet \n
* The iSolution TEAM
*
* \b CopyLeft: \n
* CopyLeft (L) 2007 iSolution - Soluções de Internet \n
*
* \b License \n
* Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
*
* \b History \n
* See history in CVS repository: http://isolution.inf.br   
*
**/

define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO = MIOLO::getInstance();
$module = 'finance';
$MIOLO->Uses('classes/fpdf/pdf.php', 'basic');


class RptIncomeTax extends PDF
{

    public function __construct($filters)
    {
        $this->MIOLO  = MIOLO::getInstance();
        $this->useUserInfo = false;
        $this->title = strtoupper(_M('Income tax report', 'finance'));
        parent::__construct();
        $this->addPage('P', 'mm', 'A4');
        $this->aliasNbPages();
        $this->generatePDF($filters);
        $this->output();
    }
    
    public function generatePDF($filters)
    {
		$module = 'finance';
		$bPerson = $this->MIOLO->getBusiness('basic','BusPhysicalPerson');
   		$dataP	 = $bPerson->getPhysicalPerson($filters->personId);
        if ( strlen((string)$dataP->responsableLegalId) > 0 )
        {
   		    $dataR	 = $bPerson->getPhysicalPerson( $dataP->responsableLegalId );
        }
   		$busIncomeTax = $this->MIOLO->getBusiness($module,'BusIncomeTax');
   		$returnValues	 = $busIncomeTax->getIncomeTax($filters->personId, $filters->year);
        $this->setFont(DEFAULT_REPORT_FONT, '', 8);
        
        
        $arrayReplace = array ( $dataP->name, $filters->year, $dataP->personId, SAGU::convertInCPFFormat($dataP->cpf), $dataR->name, SAGU::convertInCPFFormat($dataR->cpf), $this->pdfInfo->legalPersonAddress, $this->pdfInfo->legalPersonName , $this->pdfInfo->legalPerson->cnpj);
        $arrayReplaced = array ( '$PERSONNAME', '$YEAR' , '$PERSONID', '$PERSONCPF', '$RESPONSABLENAME', '$RESPONSABLECPF', '$LEGALPERSON_ADDRESS', '$LEGALPERSON_NAME', '$LEGALPERSON_CNPJ');

        $this->multiCell($this->psize, $this->lsize, str_replace($arrayReplaced, $arrayReplace,  (( strlen((string) $dataP->responsableLegalId ) > 0 && $dataP->personId != $dataP->responsableLegalId ) ? INCOME_TAX_TEXT_RESPONSABLE : INCOME_TAX_TEXT)) );
        $this->ln();
        $this->fontSizeBody = 8;
        $this->colsize[1] = 20;
        $this->colsize[2] = 20;
        $this->colsize[3] = 20;
        $this->colsize[4] = 18;
        $this->colsize[0] = $this->psize - array_sum($this->colsize);
  
        $this->colalign[0] = 'L';
        $this->colalign[1] = 'C';
        $this->colalign[2] = 'C';
        $this->colalign[3] = 'C';
        $this->colalign[4] = 'R';
        $this->colname[0] = _M('Reference', $module);
        $this->colname[1] = _M('Month', $module);
        $this->colname[2] = _M('Payment', $module);
        $this->colname[3] = _M('Maturity date', $module);
        $this->colname[4] = _M('Payed value', $module);

        $this->setFont(DEFAULT_REPORT_FONT, 'B', 5.6);
        for($x = 0; $x < count($this->colsize); $x++)
        {
                $this->cell($this->colsize[$x], $this->lsize, $this->colname[$x], 1, NULL,'C');
        }
        $this->ln();

        $this->setFont(DEFAULT_REPORT_FONT, '', 6);
        foreach ( $returnValues as $values )
        {
            for($x = 0; $x < count($this->colsize); $x++)
            {
                $this->cell($this->colsize[$x], $this->lsize, $values[$x], 1, NULL, $this->colalign[$x]);
                if ( $x == 4 )
                {
                    $total += (float)$values[$x];
                }
            }
            $this->ln();
        }
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', 6);
        $this->cell(array_sum($this->colsize)-$this->colsize[4], $this->lsize, 'TOTAL', 1, NULL, 'R');
        $this->cell($this->colsize[4], $this->lsize, SAGU::formatNumber($total), 1, NULL, 'R');
        $this->ln();
        $this->ln();
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, '', 8);
        $this->cell($this->psize,$this->lsize, strtoupper($this->pdfInfo->cityName . '/' . $this->pdfInfo->stateId . ', '. date('d/m/Y')) . '.', null, null, 'C');
        //Stamp
        $businessStamp 	    = $this->MIOLO->getBusiness('basic', 'BusStamp'); 
        $stamp = $businessStamp->getStamp($filters->stampId);
        $this->ln();
        $this->ln();
 		$this->ln();
        $this->ln();
   		$this->cell($this->psize, $this->lsize, '_________________________________________________', null, null,'C');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'I', 8);
        $this->cell(($this->psize/6)*1.5, $this->lsize-1, null);
        $this->cell(($this->psize/6)*3, $this->lsize-1, $stamp->personName , null, null, 'C');
        $this->ln();
        $this->cell(($this->psize/6)*1.5, $this->lsize-1, null);
        $this->cell(($this->psize/6)*3, $this->lsize-1, $stamp->functionDescription , null, null, 'C');
        $this->ln();
        $this->setFont(DEFAULT_REPORT_FONT, 'BI', 8);
 		$this->cell($this->psize, $this->lsize, '('.$this->pdfInfo->legalPerson->name . ' - ' . $this->pdfInfo->legalPerson->shortName .')', null, null,'C');
        $this->ln();
 		$this->cell($this->psize, $this->lsize, 'CNPJ: '. $this->pdfInfo->legalPerson->cnpj , null, null,'C');
		
		$this->output();
    }
}
?>
