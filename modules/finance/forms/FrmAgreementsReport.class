<?php

/**
 * Boletim document form
 *
 * @author Giovani Murilo Dantas CorrÃªa [gmurilo@isolution.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Daniel Afonso Heisler [daniel@isolution.inf.br]
 *
 * @since
 * Class created on 17/03/2008
 *
 * \b Organization: \n
 * iSolution - Solucoes em TI \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2008 iSolution \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 **/

/**
 * Form to manipule agreements report
 **/

class FrmAgreementsReport extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $module = MIOLO::getCurrentModule();

        $this->home   = $data->home;

        parent::__construct(_M('Agreements report', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $toolBar->hideButton('tbBtnDelete');
        $toolBar->hideButton('tbBtnSave');
        $toolBar->hideButton('tbBtnSearch');
        $toolBar->hideButton('tbBtnNew');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Agreements report', $this->home, 'agreementsReport-16x16.png', true);
        }
        //fim favoritos
       
        $fields[] = $toolBar;

        //MES e ANO
        $startDate = new MCalendarField('startDate', strlen((string)$this->getFormValue('startDate', $data->startDate)) > 0  ? $this->getFormValue('startDate', $data->startDate) : date(MASK_DATE_PHP), _M('Start date',$module), FIELD_DATE_SIZE);
        $startDate->setJsHint(_M('Enter the start date',$module));
        $startDate->setValidator(new MDATEDMYValidator('startDate', _M('Start date', $module), 'required'));

        $fields[] = $startDate;                

        $endDate = new MCalendarField('endDate', strlen((string)$this->getFormValue('endDate', $data->endDate)) > 0  ? $this->getFormValue('endDate', $data->endDate) : date(MASK_DATE_PHP), _M('End date',$module), FIELD_DATE_SIZE);
        $endDate->setJsHint(_M('Enter the end date',$module));
        $endDate->setValidator(new MDATEDMYValidator('endDate', _M('End date', $module), 'required'));
        $fields[] = $endDate;      

        //Report mode
        $printModeLabel = new MText('printModeLabel', _M('Print mode', $module));
        $printModeLabel->setWidth(FIELD_CONTAINER_SIZE);
        $printModeLabel->setClass('m-caption m-caption-required');
        $listAnalyticalSynthetic[] = array( _M('Analytical', $module), '1');
        $listAnalyticalSynthetic[] = array( _M('Synthetic', $module), '2');
        $printMode      = new MRadioButtonGroup('printMode', '', $listAnalyticalSynthetic, $this->GetFormValue('printMode', '2'), null, 'horizontal');
        $printMode->SetShowLabel(false);
        $printMode->SetAutoPostBack(false);
        $hctPrintMode  = new MHContainer('hctPrintMode', array($printModeLabel, $printMode));
        $hctPrintMode->setShowLabel(false);
        $fields[]      = $hctPrintMode;
//        $validators[] = new MIntegerValidator('printMode2', _M('Print mode',$module), 'required');


        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));

    }

    function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $data->startDate    = $this->startDate->value;
        $data->endDate   = $this->endDate->value;
        $data->printMode    = $this->getFormValue('printMode');
        $class = 'RptAgreementsReport';
        $MIOLO->getClass($module, $class);
        $report = new $class($data);
        $this->page->setAction($MIOLO->getActionURL($module, $action));
    }

}

?>
