<?php
/**
 * Diverse consultation form
 *
 * @author Giovani Murilo Dantas Corrêa [gmurilo@isolution.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Daniel Afonso Heisler [daniel@isolution.inf.br]
 *
 * @since
 * Class created on 28/01/2008
 *
 * \b Organization: \n
 * iSolution - Soluções em TI \n
 * The iSolution Development Team
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a bank account
 **/
class FrmAgreementTerm extends MForm
{
    private $home;
    public  $showForm;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        parent::__construct(_M('Agreement term', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    /**
     * Default method to create fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $toolBar = new MToolBar('toolBar', $MIOLO->getActionURL($module, $action));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnNew');
        $toolBar->disableButton('tbBtnSearch');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Agreement term', $this->home, 'agreementTerm-16x16.png', true);
        }
        //fim favoritos
        $fields[] = $toolBar;

        // Person id
        $personIdLabel = new MText('personIdLabel', _M('Person id', $module).':');
        $personIdLabel->setWidth(FIELD_CONTAINER_SIZE + 40);

        $personId      = new MLookupTextField('personId', $this->getFormValue('personId', $data->personId), '', 10, null, null, array('personName'), 'basic', 'Person', null, null, true);
        $validators[]  = new MIntegerValidator('personId', _M('Person id', $module));

        $personName    = new MTextField('personName', $this->getFormValue('personName', $data->personName), '', FIELD_DESCRIPTION_SIZE);
        $personName->setReadOnly(true);

		$fields[] = new MHContainer('hctPerson', array($personIdLabel,$personId,$personName));

        $btnSearch = new MButton('btnSearch',_M('Search', $module));
        $fields[]  = $btnSearch;
        
        $fields[]  = new MSeparator('');
        $this->setShowPostButton(false);
        
        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setValidators($validators);
		        
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
        $this->page->onLoad('document.' . $this->name . '.personId.focus();');
	
		$filters->personId     = $this->getFormValue('personId');
		$business = $this->manager->getBusiness($module,'BusAgreementTerm');
		$grdResults = $MIOLO->getUI()->getGrid($module,'GrdAgreementTerm',$filters);
		$GrdData = $business->getAgreementParcels($filters);
		$grdResults->setData($GrdData);
		$this->addField($grdResults);
    }

    /**
     * Event triggered when button search is clicked 
     */
     public function tbBtnPrint_click($sender = null)
     {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $filters->agreementId       = $this->getFormValue('agreementId');
        $filters->personId          = $this->getFormValue('personId');
		$MIOLO->getClass('finance','RptAgreementTerm');
		$RptAgreementTerm = new RptAgreementTerm($filters);
     }
}
?>
