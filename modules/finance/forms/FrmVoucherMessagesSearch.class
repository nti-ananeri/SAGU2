<?php

/**
 *
 * This file handles the connection and actions for finVoucherMessages table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 02/01/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the finVoucherMessages table
 */
class FrmVoucherMessagesSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'finance';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Voucher messages', $this->home, 'voucherMessages-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        // Operation
        $operationIdLabelS = new MText('operationIdLabel', _M('Operation id', $module).':');
        $operationIdLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $operationIdS = new MLookupTextField('operationIdS', $this->getFormValue('operationIdS', $this->voucherMessagesSearch->operationIdS), '', FIELD_ID_SIZE, null, null, 'operationDescriptionS', $module, 'Operation', null, null, true);
        $validators[] = new MIntegerValidator('operationIdS');
        $operationIdS->setJsHint(_M('Enter the operation id', $module));
        $operationDescriptionS = new MTextField('operationDescriptionS', $this->getFormValue('operationDescriptionS',$this->voucherMessagesSearch->operationDescriptionS), '', FIELD_DESCRIPTION_SIZE);
        $operationDescriptionS->setReadOnly(true);
        $fields[] = new MHContainer('hctOperationId', array($operationIdLabelS, $operationIdS, $operationDescriptionS));

        // Title
        $titleLabelS = new MText('titleLabelS', _M('Title', $module).':');
        $titleLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $titleS = new MMultiLineField('titleS', $this->getFormValue('titleS',$data->titleS), '', 40, 1, 40);
        $titleS->setJsHint(_M('Enter the title', $module));
        $fields[] = new MHContainer('hctLabel', array($titleLabelS, $titleS));
       
        // Messages
        $messageLabelS = new MText('messageLabelS', _M('Message', $module).':');
        $messageLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $messageS = new MMultiLineField('messageS', $this->getFormValue('messageS',$data->messageS), '', 40, 4, 40);
        $messageS->setJsHint(_M('Enter the message',$module));
        $fields[] = new MHContainer('hctMessageS', array($messageLabelS, $messageS));

        $fields[] = new MButton('btnSearch',_M('Search', $module));

        if (is_array($validators))
        {
            $this->setValidators($validators);
        }
        $this->setFields($fields);


        // get filters values
        $filters->operationId     = $this->operationIdS->value;
        $filters->title           = $this->titleS->value;
        $filters->message         = $this->messageS->value;        

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdVoucherMessagesSearch',$filters);
        $business = $this->manager->getBusiness($module,'BusVoucherMessages');
        $data = $business->searchVoucherMessages($filters);
        $grdResults->setData($data);
        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;
        $this->addField($grdResults); 

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.operationIdS.focus();');
        } 
    }
}

?>
