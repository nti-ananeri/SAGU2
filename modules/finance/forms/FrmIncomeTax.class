<?php
/**
 *
 * @author Giovani Murilo Dantas Corrêa [gmurilo@isolution.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Daniel Afonso Heisler [daniel@isolution.inf.br]
 *
 * @since
 * Class created on 19/06/2009
 *
 * \b Organization: \n
 * iSolution - Solucoes em TI \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2008 iSolution \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 **/

class FrmIncomeTax extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $module = MIOLO::getCurrentModule();

        $this->home   = $data->home;

        parent::__construct(_M('Income tax report', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $toolBar->hideButton('tbBtnDelete');
        $toolBar->hideButton('tbBtnSave');
        $toolBar->hideButton('tbBtnSearch');
        $toolBar->hideButton('tbBtnNew');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Income tax report', $this->home, 'incomeEstimates-16x16.png', true);
        }
        //fim favoritos
       
        $fields[] = $toolBar;

        // person
        $personLabel = new MText('personLabel', _M('Person',$module).':');
        $personLabel->setWidth(FIELD_CONTAINER_SIZE);
        $personLabel->setClass('m-caption m-caption-required');
        $fld[]            = $personLabel;

        $personId = new MLookupTextField('personId', $this->getFormValue('personId',$data->personId), _M('Person',$module), FIELD_LOOKUPFIELD_SIZE, null, null, array('personId', 'contractId', 'personName', 'courseId', 'courseName', 'courseVersion', 'unitId', 'limbo', 'accountSchemeId', 'accountSchemeDescription', 'costCenterId', 'costCenterDescription'), 'finance', 'PersonContract', null, array('personId' => 'personId'), !$this->page->isPostBack() );
        $personId->setJsHint(_M('Enter the person code',$module));
        $fld[]            = $personId;
        $validators[]      = new MIntegerValidator('personId', _M('Person id', $module), 'optional');

        $personName = new MTextField('personName', $this->getFormValue('personName',$data->personName), _M('Name',$module), FIELD_DESCRIPTION_SIZE);
        $personName->setReadOnly(true);
        $fld[]              = $personName;

        $hctPerson = new MHContainer('hctContract', $fld);
        $hctPerson->setShowLabel(false);
        $fields[]   = $hctPerson;


        $validators[] = new MIntegerValidator('personId', _M('Person id', $module), 'required');
        //MES e ANO
        $monthLabel   = new MText('monthlabel', _M('Year', $module));
        $monthLabel->setClass('m-caption m-caption-required');
        $monthLabel->setWidth(FIELD_CONTAINER_SIZE);

        $year         = new MTextField('year', strlen((string)$this->getFormValue('year'))>0 ? $this->getFormValue('year') : date('Y'), null, 6);
        $validators[] = new MIntegerValidator('year', _M('Year', $module), 'required');

        $fields[]     = new MHContainer('hctMonth', array($monthLabel, $year));

        $fields[] = new Separator(_M('Stamps', 'academic'));

        $businessStamp = $MIOLO->getBusiness('basic', 'BusStamp');
        $stampData     = $businessStamp->listStamp();
        
        $stampId = new MComboBox('stampId', $this->getFormValue('stampId', $data->stampId), _M('Stamp 1', 'academic'),  $stampData);
        $fields[] = $stampId;

        $fields[] = new MHiddenField('limbo', $limbo);
        $fields[] = new Separator('');


        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));

    }

    function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $data->year         = $this->year->value;
        $data->personId     = $this->personId->value;
        $data->stampId      = $this->stampId->value;
        $class = 'RptIncomeTax';
        $MIOLO->getClass($module, $class);
        $report = new $class($data);

        $this->page->setAction($MIOLO->getActionURL($module, $action));
    }

}

?>
