<?php

/**
 * Bank account form
 *
 * @author Rudi Uhrig Neto [rudi@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 04/10/2007
 *
 * \b Organization: \n
 * iSolution - Soluções de Internet \n
 * The iSolution TEAM
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2007 iSolution - Soluções de Internet \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

class FrmBankReturnMessageSearch extends MForm
{

    /**
     * Class constructor
     **/
    function __construct()
    {

        $module = MIOLO::getCurrentModule();

        if ( MIOLO::_request('function') == 'insert' )
        {
            parent::__construct(_M('Insert', $module));
        }
        else
        {
            parent::__construct(_M('Update', $module));
        }

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $fields[] = $toolBar;

		//Bank Return
		$businessReturnConfig = $this->manager->getBusiness($module,'BusBankReturnConfig');
        $bankReturnId  = new MComboBox('bankReturnId',  '', _M('Return',$module), $businessReturnConfig->listBankReturn());
        $fields[] = $bankReturnId;
        $validators[] = new MRequiredValidator('bankReturnId');
		//Message Type
		$businessReturnConfig = $this->manager->getBusiness($module,'BusBankReturnConfig');
        $messageType  = new MComboBox('messageType',  '', _M('Message Type',$module), $businessReturnConfig->listBankReturn());
        $fields[] = $messageType;
        //Message Cod
        $validators[] = new MRequiredValidator('messageType');
        $messageCod  = new MTextField('messageCod',  '', _M('Message',$module).' '._M('Id',$module),FIELD_ID_SIZE);
        $fields[] = $messageCod;
        $validators[] = new MRequiredValidator('messageCod');
	    //Message	
        $message  = new MTextField('message', $this->message->value, _M('Message',$module), 80);
        $validators[] = new MRequiredValidator('message');
        $message->setJsHint(_M('Type The Message', $module));
        $fields[] = $message;
        $fields[] = new MButton('btnSearch',_M('Search',$module));
        $fields[] = new Separator('');
        $this->setFields($fields);
        $filters->bankReturnId	       = $this->bankReturnId->value;
        $filters->messageType	       = $this->messageType->value;
		$filters->messageCod	       = $this->messageCod->value;
        $filters->message              = $this->message->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdBankReturnMessageSearch',$filters);
        $business   = $this->manager->getBusiness($module,'BusBankReturnTypeField');
        $data       = $business->searchBankReturnTypeField($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
                
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
        $this->page->onLoad('document.' . $this->name . '.message.focus();');
    }
}

?>
