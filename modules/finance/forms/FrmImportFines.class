<?php

/**
 * Import account scheme form
 *
 * @author Marcus Vinicius Magalhaes Machado [mvmmachado@gmail.com]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Marcus Vinicius Magalhaes Machado [mvmmachado@gmail.com]
 *
 * @since
 * Class created on 13/07/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to import account scheme
 **/
class FrmImportFines extends MForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {

        $module     = MIOLO::getCurrentModule();
        $this->home = $data->home;
        parent::__construct(_M('Import fines', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();

        $choice = new MSelection('choice', $this->getFormValue('choice'), _M('Import',$module), array('1' => _M('Import fines from one pupil', $module), '2' => _M('Import all pupils fines', $module)) );
        $choice->setAutoSubmit(true);
        $fields[] = $choice;

        if ( $this->getFormValue('choice') == 1 )
        {
            $fields[] = new Separator('');

            $personIdLabel = new MText('personIdLabel', _M('Person id', $module) . ':');
            $personIdLabel->setWidth(FIELD_CONTAINER_SIZE);
            $personIdLabel->setClass('m-caption m-caption-required');
            $field1[]      = $personIdLabel;

            $field1[]      = new MLookupTextField('personId', $this->getFormValue('personId', $data->personId), '', 10, null, null, array('personName', 'limbo', 'limbo', 'limbo', 'limbo'), 'basic', 'Person', null, null, true);
            $validators[]  = new MIntegerValidator('personId', _M('Person id', $module), 'required');
            $personName    = new MTextField('personName', $this->getFormValue('personName', $data->personName), '', FIELD_DESCRIPTION_SIZE);
            $personName->setReadOnly(true);

            $field1[] = $personName;
            $field1[] = new MHiddenField('limbo', $this->getFormValue('limbo', $data->limbo));
            $field1[] = new MSeparator('');
            $fields[] = new MHContainer('container11', $field1);
        }

        $btnSearch = new MButton('generate_button',_M('Import', $module));
        $fields[]  = $btnSearch;
        
        $fields[]  = new MSeparator('');

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
        $this->page->onLoad('document.' . $this->name . '.personId.focus();');
/*
        if ( strlen((string)MIOLO::_request('event')) == 0 )
        {
            $caption  = _M('Question', $module);
            $msg      = _M('Are you sure that you want to import fines', $module) . '?';
            $gotoNo   = $MIOLO->getActionURL($module,substr($action,0,strrpos($action,':')));
            $opts     = array( 'event' => 'generate_button_click' );
            $gotoYes  = $MIOLO->getActionURL($module, $action, null, $opts);
            $MIOLO->question($msg, $gotoYes, $gotoNo);
        }*/
    }

    /**
     * Event triggered when user chooses Ok from form
     **/
    public function generate_button_click($sender=NULL)
    {
        set_time_limit(0);
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $choice   = MIOLO::_REQUEST('choice');
        $personId = MIOLO::_REQUEST('personId');

        $business = $MIOLO->GetBusiness($module, 'BusImportFines');

        if ( $choice == 1 && strlen((string)$personId) > 0 )
        {
            $ok       = $business->ImportFines($personId);
        }
        elseif ( $choice == 2 )
        {
            $ok       = $business->ImportFines();
        }

        if ( $ok )
        {
            $goto    = $MIOLO->getActionURL($module,substr($action,0,strrpos($action,':')));
            $caption = _M('Information',$module);
            $MIOLO->information(_M('Data mattered successfully', 'accountancy'), $goto);
        }
        else
        {
            $msg     = _M('Error executing requested operation.','accountancy');
            $goto    = SAGU::getStackBackUrl();
            $goto    = strlen((string)$goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Error',$module);
            $MIOLO->error( $msg, $goto, $caption );
        }

    }


}

?>
