<?php
/**
 * shows Payments
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 17/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to show the shows Payments
 **/
class FrmShowsPayments extends MForm
{

    /**
     * Class constructor
     **/
    function __construct()
    {
        $module = MIOLO::getCurrentModule();
        parent::__construct('');
	    $this->setTitle(null);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $personId = MIOLO::_request('personId') ? MIOLO::_request('personId') : MIOLO::_request('personId', 'GET');
        $business = $MIOLO->getBusiness($module, 'BusShowsPayments');
        $data     = $business->getShowsPayments($personId);
        
        $url = $MIOLO->getActionURL( 'basic', 'html:scripts:sagu.js' );
        $this->page->scripts->add($url);
        
        $businessPerson = $MIOLO->getBusiness('basic', 'BusPerson');
        $personName     = $businessPerson->getPersonName($personId);
        
        // Person id
        $personInformation = new MText('personIdLabel', '<b>'._M('Payments for', $module).': '.'</b>'.  $this->getFormValue('personId',$data->personId) . ' - ' .  $personName);
        $grdShowsPayments = $MIOLO->getUI()->getGrid($module, 'GrdShowsPayments');
        $grdShowsPayments->setData($data);
	    $grdShowsPayments->setTitle($personInformation->generate());
	    $grdShowsPayments->setClose('javascript:self.close()');
        
        $spacing = new MText('spacing', ' ');
        $spacing->setWidth('400');
        $footer2 = new MText('footer2', _M('Total', $module).':');
        
        
        for( $number = 0 ; $number < count($data); $number++)
        {
            $totalEntry   = SAGU::CalcNumber($totalEntry . ' + '. $data[$number][7]);
        }

        if (strlen((string)$totalEntry) > 0)
        {
            $footer[] = $footer2;
            $footerTot = new MText('footerTotal2', $totalEntry);
            $footerTot->setWidth('200');
            $hctFooter = new MHContainer('hctFooter', array($spacing, $footer2, $footerTot));
            $footer_ = new MDiv('fotterDiv', array($hctFooter), null);
            $footer_->setWidth('100%');
            $grdShowsPayments->setFooter($footer_);
        }
        $fields[] = $grdShowsPayments;
        $buttonClose = new MButton('btnShowsPaymentsClosePositionDown', _M('Close window', $module), 'self.close()');
        $fields[] = new MSeparator('');
	    $fields[] = new MDiv('divDown', array($buttonClose), null, 'align="center"');
        $fields[] = new MSeparator('');
        
        $this->setFields($fields);
        $this->setShowPostButton(false);
    }
}
?>
