<?php

/**
 * Defaulter Report for date form
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 22/12/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to generate document defaulter
 **/
class FrmDefaulterReportLegalPerson extends MForm
{
    private $home;
    public $showForm;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
        $this->showForm = true;
        $module = MIOLO::getCurrentModule();

        $this->home   = $data->home;

        parent::__construct(_M('Defaulter legal person', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {

        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $toolBar = new MToolBar('toolBar', $MIOLO->getActionURL($module, $action));
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnPrint');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnNew');
        $toolBar->disableButton('tbBtnSearch');
 

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Defaulter legal person', $this->home, 'defaulterLegalPerson-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;
        

        // Periodo.
        // $dataPeriod  : Dados obtidos do list do business period
        $businessPeriod = $MIOLO->getBusiness('academic', 'BusPeriod');
        $dataPeriod = $businessPeriod->listPeriod();

        $periodLabel = new MText('periodLabel', _M('Period', $module) .':');
        $periodLabel->setClass('m-caption m-caption-required');
        $periodLabel->setWidth(FIELD_CONTAINER_SIZE);
        $periodId = new MComboBox('periodId', $this->periodId->value, '', $dataPeriod, false, '', FIELD_ID_SIZE);
        $periodId->setJsHint( _M('Choose the degree period',$module) );
        $validators[] = new MRequiredValidator('periodId');
        $mhcPeriod = new MHContainer('mhcPeriod', array($periodLabel,$periodId));
        $mhcPeriod->setShowLabel(true);
        $field1[]   = $mhcPeriod;

//      Get a current Date for form
        $currDate = getdate();


        $monthLabel = new MText('monthLabel', _M('Month', $module).':');
        $monthLabel->setWidth(FIELD_CONTAINER_SIZE);
        $monthLabel->setClass('m-caption m-caption-required');
        $selMonth = new MSelection('selMonth', $this->getFormValue('selMonth',$currDate['mon']), _M('',$module), SAGU::listMonths());
        $selMonth->setJsHint(_M('Choose the month for report.', $module));
        $validators[] = new MRequiredValidator('selMonth');
        $field1[] = new MHContainer('hctMonth', array($monthLabel,$selMonth ));
       


        for ( $year=$currDate['year']-50; $year<$currDate['year']+50; $year++ )
        {
            $years[$year] = $year;
        }

        $yearLabel = new MText('yearLabel', _M('Year', $module).':');
        $yearLabel->setWidth(FIELD_CONTAINER_SIZE);
        $yearLabel->setClass('m-caption m-caption-required');
        $selYear = new MSelection('selYear', $this->getFormValue('selYear', $currDate['year']), _M('',$module), $years);
        $selYear->setJsHint(_M('Choose the year for report.', $module));
        $validators[] = new MRequiredValidator('selYear');
        $field1[] = new MHContainer('hctYear', array($yearLabel,$selYear ));



        $fields1[] = new MVContainer('container1', $field1);
        
        $fields[]  = new MBaseGroup('mbgDefaulter', _M('Defaulter', $module), $fields1);
        // Botao do primeiro Grupo.
        $btnGenerate = new MButton('btnGenerate', _M('Generate', $module));
        $fieldss1[] = new MHContainer('hctBtn', array($btnGenerate));
        $fields[]  = $fieldss1;

        $fields[] = new MSeparator('');
        $this->setShowPostButton(false);

        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setValidators($validators);

        
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
        $this->page->onLoad('document.' . $this->name . '.periodId.focus();');

  

    }

    /**
     * Event triggered when button search is clicked 
     */
     public function btnGenerate_click($sender = null)
     {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        
        $data->periodId       = $this->getFormValue('periodId');
        $data->year           = $this->getFormValue('selYear');
        $data->month          = $this->getFormValue('selMonth');

        $business = $MIOLO->getBusiness($module, 'BusDefaulter');

   
        $returnData = $business->getReportDefaulterLegalPerson($data);

        $filters = $returnData; 
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdDefaulterReportLegalPerson',$filters);
        $grdResults->setData($returnData);
        $this->addField($grdResults);



     }
}
?>
