<?php

/**
 * Long term short term process form
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 07/12/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to control import return files for bank
 **/
class FrmAutomaticDebitExport extends MForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
        $module = MIOLO::getCurrentModule();
        $this->home   = $data->home;

        parent::__construct(_M('Export bank return files', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();
        $action  = MIOLO::getCurrentAction();
        
        $toolBar = new MToolBar( 'toolBar', $MIOLO->getActionURL($module, $action) );

        $toolBar->disableButton('tbBtnNew' );
        $toolBar->disableButton('tbBtnSave' );
        $toolBar->disableButton('tbBtnDelete' );
        $toolBar->disableButton('tbBtnSearch' );
        $toolBar->disableButton('tbBtnPrint' );
        

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Automatic debit export', $this->home, 'automaticDebitExport-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $businessBank = $MIOLO->getBusiness($module, 'BusBank');
        $dataBank = $businessBank->listBank();

        $field = new MSelection('bankId', $this->getFormValue('bankId', $data->bankId), _M('Bank id', $module), $dataBank);
        $fields[] = $field;
        $validators[] = new MRequiredValidator('bankId');

        $fields[] = new MCalendarField('initialMaturityDate', $this->getFormValue('initialMaturityDate', $data->initialMaturityDate), _M('Initial maturity date', $module),FIELD_DATE_SIZE);
        $validators[] = new MDATEDMYValidator('initialMaturityDate', null, 'required');

        $fields[] = new MCalendarField('finalMaturityDate', $this->getFormValue('finalMaturityDate', $data->finalMaturitydate), _M('Final maturity date', $module),FIELD_DATE_SIZE);
        $validators[] = new MDATEDMYValidator('finalMaturityDate', null, 'required');

        $fields[] = new MCalendarField('defaulterMaturityDate', $this->getFormValue('defaulterMaturityDate', $data->defaulterMaturityDate), _M('Defaulter maturity date', $module),FIELD_DATE_SIZE);
        $validators[] = new MDATEDMYValidator('defaulterMaturityDate', null, 'required');
    
        $debitDate = new MCalendarField('debitDate', $this->getFormValue('debitDate', $data->debitDate), _M('Debit date', $module),FIELD_DATE_SIZE);
        $fields[] = $debitDate;
        $fields[] = new MSeparator( '- ' . _M('If you want that debit initiates in debit date for maturity date of pupil\'s invoices, leave this field blank.', $module));

        $fields[] = new MSeparator( '- ' . _M('If you want that debit automatic initiate in the same date for all pupils for this remittance, inform this date in this field.', $module) . ' ');


        $fields[] = new MSeparator('');

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
    }

    /**
     * Get this action when submit button on this form is clicked
     */
     public function submit_button_click($sender = null)
     {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $data = $this->getTypesData();
        
        $MIOLO->getClass($module, 'AutomaticDebitExport');
        
        $automaticDebitExport = new AutomaticDebitExport($data);
     }
    
    /**
     * Get the data from form and returns as a object
     */
    public function getTypesData()
    {
        $data->bankId                = $this->getFormValue('bankId');
        $data->initialMaturityDate   = $this->getFormValue('initialMaturityDate');
        $data->finalMaturityDate     = $this->getFormValue('finalMaturityDate');
        $data->defaulterMaturityDate = $this->getFormValue('defaulterMaturityDate');
        $data->debitDate             = $this->getFormValue('debitDate');
        
        return $data;
    }
}
?>
