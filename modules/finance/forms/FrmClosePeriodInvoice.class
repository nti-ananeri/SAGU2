<?php

/**
 * Print invoices form
 *
 * @author Daniel Afonso Heisler [daniel@hsti.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 27/09/2007
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a course occurrence
 **/
class FrmClosePeriodInvoice extends MForm
{

    private $module;


    /**
     * Class constructor
     **/
    function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;

        parent::__construct(_M('Close selected invoices', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

   /**
    * Default method to define fields
   **/
    public function createFields()
    {
        $MIOLO     = MIOLO::getInstance();
        $module    = MIOLO::getCurrentModule();
        $action    = MIOLO::getCurrentAction();

        $periodId  = MIOLO::_request('periodId') ? MIOLO::_request('periodId') : MIOLO::_request('periodId', 'GET');
        $personId  = MIOLO::_request('personId') ? MIOLO::_request('personId') : MIOLO::_request('personId', 'GET');

        $invoiceId = MIOLO::_request('invoiceId', 'GET');
        $invoiceId = unserialize(urldecode(stripslashes($invoiceId)));

        $selected  = MIOLO::_request('selected', 'GET');
        $selected  = unserialize(urldecode(stripslashes($selected)));

        if ( strlen((string)$periodId)>0 && strlen((string)$personId)>0 )
        {

            $periodIdLabel   = new MText('periodIdLabel', _M('Period', $module).':');
            $periodIdLabel->setWidth(FIELD_CONTAINER_SIZE);
            $periodId_       = new MTextLabel('periodIdLabel', $periodId);
            $periodIdHidden  = new MHiddenField('periodId', $periodId);
            $hctPeriodId     = new MHContainer('hctPeriodId', array($periodIdLabel, $periodId_, $periodIdHidden));

            $businessPerson  = $MIOLO->getBusiness('basic', 'BusPerson');
            $person          = $businessPerson->getPerson($personId);

            $personIdLabel   = new MText('personIdLabel', _M('Person', $module).':');
            $personIdLabel->setWidth(FIELD_CONTAINER_SIZE);
            $personId_       = new MTextLabel('personIdLabel', $personId . ' - ' . $person->name);
            $personIdHidden  = new MHiddenField('personId', $personId);
            $hctPersonId     = new MHContainer('hctPersonId', array($personIdLabel, $personId_, $personIdHidden));

            if ( is_array($invoiceId) )
            {
                $x = 0;
                $businessInvoice = $MIOLO->getBusiness($module, 'BusReceivableInvoice');

                $cntInv[] = new MSeparator('<br><b>' . _M('Invoice', $module) . 's</b>');
                foreach ( $invoiceId as $row )
                {
                    $invoiceData = $businessInvoice->getInvoice($row);
                    $value       = $businessInvoice->getInvoiceBalanceWithPolicies($row);
                    $cntInv[]    = new MCheckBox('invoiceId[' . $x . ']', $row, null, null, '<b>' . _M('Invoice', $module) . ':</b> ' . $row . ' | <b>' . _M('Maturity date', $module) . ':</b> ' . $invoiceData->maturityDate . ' | <b>' . _M('Balance', $module) . ':</b> ' . $value);

                    if ( count($selected)>0 && count($invoiceId)>0 )
                    {
                        $this->page->AddJSCode('document.getElementById("invoiceId[' . $x . ']").checked = parent.opener.document.getElementById("selectinvoiceGridId_' . $selected[$x] . '").checked;');
                    }

                    $x++;
                }
                $cntInv[] = new MSeparator();
                $hctInvoices     = new MVContainer('hctInvoices', $cntInv);
            }

            $submitButton = new MButton('submit_button', _M('Close invoice', $module), 'SUBMIT');
            $hct[]    = $submitButton;
            $fields[] = $hctPeriodId;
            $fields[] = $hctPersonId;
            if ( is_array($invoiceId) )
            {
                $fields[] = $hctInvoices;
            }

            // Pega informações do usuário logado
            $loginUser  = $MIOLO->GetLogin();
    
            //busca dados do usuário na base sagu2
            $business = $MIOLO->getBusiness('basic','BusPerson');
            $person   = $business->getPersonByMioloUserName($loginUser->id);
    
            $loginUser->idperson = $person->personId;

            if ( strlen((string)$person->personId) > 0 )
            {
                //busca dados do Caixa
                $business              = $MIOLO->getBusiness($module, 'BusCounter');
                $busCounterResponsable = $business->getCounterResponsable($person->personId);
    
                $data->operatorId           = $person->personId;
                $data->operatorName         = $person->name;
    
                $data->counterId            = $busCounterResponsable->counterId;
                $data->responsableId        = $busCounterResponsable->responsableId;
                $data->responsableName      = $busCounterResponsable->personName;
                $data->unitDescription      = $busCounterResponsable->unitDescription;
            }

            $fields[] = new MHiddenField('closeType', 'I');
            $fields[] = new MHiddenField('speciesId', DEFAULT_SPECIE_ID);

            // Caso o usuário tenha seu login no Ldap ou na base corretamente os operatorId e
            // counterId ou irá aparecer no form campos para o usuário preencher isso.
            if ( $loginUser->idperson != NULL )
            {
                $fields[] = new MHiddenField('operatorId', $this->getFormValue('operatorId', $data->operatorId));
                $fields[] = new MHiddenField('counterId', $this->getFormValue('counterId', $data->counterId));
                $fields[] = new MHiddenField('responsableId', $this->getFormValue('responsableId', $data->responsableId)); 
            }
            else
            {
                $operatorIdLabel = new MText('operatorIdLabel', _M('Operator',$module).':');
                $operatorIdLabel->setWidth(FIELD_CONTAINER_SIZE);
                $operatorIdLabel->setClass('m-caption m-caption-required');
                $flds[]          = $operatorIdLabel;

                $operatorId   = new MLookupTextField('operatorId', $this->getFormValue('operatorId',$data->operatorId), _M('',$module), FIELD_ID_SIZE, null, null, 'operatorName', 'basic', 'PhysicalPersonEmployee', null, null, true);
                $operatorId->setJsHint(_M('Enter the operator id',$module));
                $validators[] = new MIntegerValidator('operatorId', _M('Operator id', $module), 'required');
                $flds[]       = $operatorId;

                $operatorName = new MTextField('operatorName', $this->getFormValue('operatorName',$data->operatorName), _M('',$module), FIELD_DESCRIPTION_SIZE);
                $operatorName->setReadOnly(true);
                $flds[]       = $operatorName;
    
                $hctOperator  = new MHContainer('hctOperator', $flds);
                $hctOperator->setShowLabel(true);
                $fields[]     = $hctOperator;
                unset($flds);

                $counterIdLabel = new MText('counterIdLabel', _M('Counter',$module).':');
                $counterIdLabel->setWidth(FIELD_CONTAINER_SIZE);
                $counterIdLabel->setClass('m-caption m-caption-required');
                $flds[]           = $counterIdLabel;

                $business = $MIOLO->getBusiness($module,'BusCounter');
                $counterId = new MComboBox('counterId', $this->counterId->value, '', $business->listCounter());
                $validators[] = new MIntegerValidator('counterId');
                $counterId->setJsHint( _M('Counter id',$module) );
                $flds[]      = $counterId;
                $hctCounter = new MHContainer('hctCounter', $flds);
                $hctCounter->setShowLabel(true);
                $fields[]   = $hctCounter;
                unset($flds);
            }
            $fields[] = new MHContainer('hctButtons', $hct);
        }
        
        $fields[] = new Separator('');

        $this->setFields($fields);
        if ( count($validators) > 0 )
        {
            $this->setValidators($validators);
        }
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
        $this->setShowPostButton(false);
     }

    /**
     * Event used when submit_button is clicked
     */
    public function submit_button_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $invoiceId = $this->getFormValue('invoiceId');

        if ( count($invoiceId)>0 )
        {
            $goto   = 'javascript:window.close()';
            $gotoNo = $goto;

            $opts   = array('event'     => 'tbBtnDelete_confirm',
                            'function'  => 'delete',
                            'invoiceId' => urlencode(serialize($invoiceId)),
                            'counterId' => $this->getFormValue('counterId'),
                            'operatorId'    => $this->getFormValue('operatorId'),
                            'responsableId' => $this->getFormValue('responsableId'),
                            'formId'        => MIOLO::_REQUEST('formId')
                           );
            

            $gotoYes = $MIOLO->getActionURL( $module, $action, null, $opts );
            $msg     = _M('Are you sure to close the invoices bellow?', $module);
            foreach ( $invoiceId as $i )
            {
                $msg .= '<BR>' . $i;
            }
            $caption = _M('Question', $module);
            $MIOLO->question($msg, $gotoYes, $gotoNo);
        }
    }
    
    /**
     * Event triggered when user chooses Yes from the Delete prompt dialog
     **/
    public function tbBtnDelete_confirm($sender = null)
    {
        $MIOLO     = MIOLO::getInstance();
        $module    = MIOLO::getCurrentModule();
        $action    = MIOLO::getCurrentAction();
        $invoiceId = unserialize(urldecode(stripslashes(MIOLO::_request('invoiceId'))));

        $business  = $MIOLO->getBusiness($module, 'BusReceivableInvoice');

        $data->closeType       = 'I';
        $data->numberOfEntries = 1;
        $data->speciesId       = DEFAULT_SPECIE_ID;
        $data->counterId       = $this->getFormValue('counterId');
        $data->responsableId   = $this->getFormValue('responsableId');
        $data->operatorId      = $this->getFormValue('operatorId');
        $data->operation       = 'C';

        $businessDefaultOperations = $MIOLO->getBusiness($module, 'BusDefaultOperations');
        $dataDefaultOperations     = $businessDefaultOperations->getDefaultOperations();

        $data->operationId = $dataDefaultOperations->paymentOperation;
        $data->comments    = _M('Automatic closing of various invoices', $module);

        foreach ( $invoiceId as $row )
        {
            $data->invoiceId = $row;
            $ok = $business->closeInvoice($data);
        }

        $goto = 'javascript:window.opener.parent.document.' . MIOLO::_REQUEST('formId') . '.submit(); window.close()';

        if ( $ok )
        {
            $msg     = _M('Invoices closed with success',$module);;
            $caption = _M('Information',$module);
            $MIOLO->information($msg, $goto);
        }
        else
        {
            $msg  = _M('Error executing requested operation.',$module);
            $caption = _M('Error', $module);
            $MIOLO->error( $msg, $goto, $caption );
        }
    }

}

?>
