<?php

/**
 * Internal invoice generation form
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 12/12/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a course occurrence
 **/
class FrmInternalInvoice extends MForm
{

    private $module;

    /**
     * Class constructor
     **/
    function __construct()
    {
        $MIOLO        = MIOLO::getInstance();
        $module       = MIOLO::getCurrentModule();
        $this->module = $module;
        parent::__construct(_M('Print invoice', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $data->invoiceId = $data->invoiceId ? $data->invoiceId : (MIOLO::_request('_invoiceId') ? MIOLO::_request('_invoiceId') : MIOLO::_request('_invoiceId', 'GET'));

        $invoiceId    = new MTextField('invoiceId', $this->getFormValue('invoiceId', $data->invoiceId), _M('Invoice id', $module), FIELD_ID_SIZE);
        $validators[] = new MIntegerValidator('invoiceId', _M('Invoice id', $module), 'required');

        $fields[] = $invoiceId;
        $fields[] = new Separator('');

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));
        $this->page->onLoad('document.'.$this->name.'.invoiceId.focus();');
     }

    /**
     * Event used when submit_button is clicked
     */
    public function submit_button_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $filters->invoiceId = $this->getFormValue('invoiceId') ? $this->getFormValue('invoiceId') : MIOLO::_request('_invoiceId', 'GET');
        $MIOLO->getClass($module, 'RptPrintInternalInvoice');
        $businessInvoice = $MIOLO->getBusiness($module, 'BusReceivableInvoice');
        if ($businessInvoice->verifyReceivableInvoice($filters->invoiceId))
        {
            $report = new RptPrintInternalInvoice($filters->invoiceId);
        }
        else
        {
            $MIOLO->error(_M('Invoice id not found', $module), $MIOLO->getActionURL($module, $action));
        }
    }
}

?>
