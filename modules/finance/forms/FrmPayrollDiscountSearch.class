<?php

/**
 *
 * This file handles the connection and actions for acdPayrollDiscount table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br] 
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [edaurdo@solis.coop.br]
 * 
 * @since
 * Class created on 12/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the scdPayrollDiscount table
 */
class FrmPayrollDiscountSearch extends MForm
{
    private $module;

    /**
     * Class constructor
     */
    function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;

        parent::__construct(_M('Search', $module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnPrint');
        $fields[] = $toolBar;

        $beginDateLessonsS = new MCalendarField('beginDateLessonsS', $this->getFormValue('beginDateLessonsS', $data->beginDateLessonsS), _M('Begin date lessons', $module), FIELD_DATE_SIZE);
        $validators[] = new MDATEDMYValidator('beginDateLessonsS');
        $fields[] = $beginDateLessonsS;

	    $EndDateLessonsS = new MCalendarField('EndDateLessonsS', $this->getFormValue('EndDateLessonsS', $data->EndDateLessonsS), _M('End date lessons', $module), FIELD_DATE_SIZE);
        $validators[] = new MDATEDMYValidator('EndDateLessonsS');
        $fields[] = $EndDateLessonsS;

        $isAdjustmentS = new MSelection('isAdjustmentS', $this->isAdjustmentS->value, _M('Is adjustment',$module), SAGU::listTrueFalse());
        $fields[] = $isAdjustmentS;

        $isSelectiveProcS = new MSelection('isSelectiveProcS', $this->isSelectiveProcS->value, _M('Is selective',$module), SAGU::listTrueFalse());
        $fields[] = $isSelectiveProcS;


    	$fields[] = new MButton('btnSearch', _M('Search', $module));

        $this->setFields($fields);
//        $this->setValidators($validators);

        // get filters values
        $filters->beginDateLessons             = $this->beginDateLessonsS->value;
        $filters->EndDateLessons               = $this->EndDateLessonsS->value;
        $filters->isAdjustment                 = $this->isAdjustmentS->value;
        $filters->isSelectiveProc              = $this->isSelectiveProcS->value;




        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdPayrollDiscountSearch', $filters);
        $business = $this->manager->getBusiness($module,'BusPayrollDiscount');
        $data = $business->searchPayrollDiscount($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.beginDateLessonsS.focus();');
        }
    	$this->setLabelWidth(FIELD_LABEL_SIZE);

    }
}

?>
