<?php
/**
 *
 * This file handles the connection and actions for finReceivableInvoice table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 13/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/
$MIOLO  = MIOLO::getInstance();
$MIOLO->uses('forms/FrmInvoiceSearch.class', 'finance');
/**
 * Form to search the finInvoice table
 */
class FrmReceivableInvoiceSearch extends FrmInvoiceSearch
{

    /**
     * Class constructor
     */
    function __construct()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;

        parent::__construct(_M('Search', $module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = $this->module;
        
        $this->createInvoiceFields();
        
        $sendDateS = new MCalendarField('sendDateS', $this->sendDateS->value, _M('Send date',$module), FIELD_DATE_SIZE);
        $sendDateS->setJsHint(_M('Enter the send date',$module));
        $fields[] = $sendDateS;
        $validators[] = new MDATEDMYValidator('sendDateS', '', 'optional');
        
        $returnDateS = new MCalendarField('returnDateS', $this->returnDateS->value, _M('Return date',$module), FIELD_DATE_SIZE);
        $returnDateS->setJsHint(_M('Enter the return date',$module));
        $fields[] = $returnDateS;
        $validators[] = new MDATEDMYValidator('returnDateS', '', 'optional');

        
        $returnFileLabelS = new MText('returnFileLabelS', _M('Return file',$module).':');
        $returnFileLabelS->setWidth(FIELD_CONTAINER_SIZE);

        $returnFileIdS = new MLookupTextField('returnFileIdS', $this->returnFileIdS->value, null, FIELD_ID_SIZE, null, null,
            'fileNameS',
            'basic', 'File', null, null, true);
        $returnFileIdS->setJsHint(_M('Select the return file id', $module));
        
        $fileNameS = new MTextField('fileNameS', $this->fileNameS->value, null, 30);
        $fileNameS->setReadOnly(true);
        
        $hctFileNameS = new MHContainer('hctFileNameS', array($returnFileLabelS,$returnFileIdS,$fileNameS));
        $hctFileNameS->setShowLabel(true);
        $fields[]   = $hctFileNameS;         
        
        
        $fields[] = new MButton('btnSearch', _M('Search', $module));
        
        $this->addFields($fields);
        $this->setValidators($validators);
        
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdReceivableInvoiceSearch', $this->filters);
        $business = $this->manager->getBusiness($module,'BusReceivableInvoice');
        $data = $business->searchReceivableInvoice($this->filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
    }

}

?>
