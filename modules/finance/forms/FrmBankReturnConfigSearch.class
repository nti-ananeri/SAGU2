<?php

/**
 *
 * This file handles the connection and actions for finPaymentPlace table
 *
 * @author Giovani Murilo Dantas Correa [gmurilo@gmail.com]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 04/10/2007
 *
 * \b Organization: \n
 * iSolution - Soluções de Internet \n
 * The iSolution TEAM
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2007 iSolution - Soluções de Internet \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

class  FrmBankReturnConfigSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'finance';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Bank return config search', $this->home, 'bankAccount-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;
		$business = $this->manager->getBusiness($module,'BusBankReturnConfig');
	    //Bank Return Config
        $bankReturnConfigId  = new MTextField('bankReturnConfigId',$this->getFormValue('bankReturnConfigId',$data->bankReturnConfigId), _M('Id',$module));
        $fields[] = $bankReturnConfigId;
        		
		//Bank Return
        $bankReturnId  = new MComboBox('bankReturnId',  $this->getFormValue('bankReturnId',$data->bankReturnId), _M('Return',$module), $business->listBankReturn());
        $fields[] = $bankReturnId;
        
		//Line Type
        $lineTypeId  = new MComboBox('lineTypeId',  $this->getFormValue('lineTypeId',$data->lineTypeId), _M('Line type',$module), $business->listBankReturnLineType());
        $fields[] = $lineTypeId;
		
        //Type Field
        $typeFieldReturnId  = new MComboBox('typeFieldReturnId',  $this->getFormValue('typeFieldReturnId',$data->typeFieldReturnId), _M('Field type',$module), $business->listBankReturnTypeField());
        $fields[] = $typeFieldReturnId;
        		
        //Position
        $position      = new MTextField('position', $this->getFormValue('position',$data->position),  _M('Position',$module), FIELD_ID_SIZE);
        $fields[] = $position;			
		
        //Size
        $size      = new MTextField('size', $this->getFormValue('size',$data->size),  _M('Size',$module), FIELD_ID_SIZE);
        $fields[] = $size;			
        
		//Segment
        $segment   = new MTextField('segment', $this->getFormValue('segment',$data->segment),  _M('Segment',$module), FIELD_ID_SIZE);
        $fields[] = $segment;			
                
        $fields[] = new MButton('btnSearch',_M('Search',$module));
        $this->setFields($fields);

        // get filters values
        $filters->bankReturnConfigId	= $this->bankReturnConfigId->value;
        $filters->bankReturnId			= $this->bankReturnId->value;
        $filters->typeFieldReturnId		= $this->typeFieldReturnId->value;
        $filters->lineTypeId			= $this->lineTypeId->value;
        $filters->segment				= $this->segment->value;
        $filters->position              = $this->position->value;
        $filters->size					= $this->size->value;

		
        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdBankReturnConfigSearch',$filters);
        $business   = $this->manager->getBusiness($module,'BusBankReturnConfig');
        $data       = $business->searchBankReturnConfig($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
        $this->setLabelWidth(FIELD_LABEL_SIZE);

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.bankReturnConfigId.focus();');
        }
    }
}
?>
