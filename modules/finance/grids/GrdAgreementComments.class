<?php

/**
 *
 * This file handles the connection and actions for finPaymentPlace table
 *
 * @author Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 17/08/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdAgreementComments extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:register:agreements';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( null ),
                          new MGridColumn( _M('Date and time', $module), 'center', true,  null, true, null, false, false),
                          new MGridColumn( _M('Invoice id',    $module), 'left',   true,  null, true, null, false, false),
                          new MGridColumn( _M('Comments',      $module), 'left',   false, null, true, null, false, false)
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        $goto       = $MIOLO->getActionURL($module, 'main:personAgreements', null, array('personId'=>$filters->personId));
        $opts       = array('agreementCommentsId'=>'%0%', 'function'=>'update', 'goto'=>urlencode($goto));
        $hrefUpdate = $MIOLO->getActionURL($module, 'main:register:agreementComments', null, $opts);
        $opts       = array('agreementCommentsId'=>'%0%', 'event'=>'tbBtnDelete_click', 'goto'=>urlencode($goto));
        $hrefDelete = $MIOLO->getActionURL($module, 'main:register:agreementComments', null, $opts);

        unset($opts);
        if (is_array($filters))
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
        $url = $MIOLO->getActionURL($module, "$home:search", null, $opts);
        parent::__construct( null, $columns, $url, null, 0, 'gridAgreementComments' );
        $this->setIsScrollable();
        
        $this->addActionIcon(_M('Edit',   $module), 'edit',   $hrefUpdate);
        $this->addActionIcon(_M('Delete', $module), 'delete', $hrefDelete);        
                        
        $this->eventHandler();
    }
}
?>
