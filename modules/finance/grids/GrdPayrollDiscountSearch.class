<?php

/**
 *
 * This file handles the connection and actions for acdPayrollDiscount table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * 
 * @since
 * Class created on 12/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPayrollDiscountSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $module = $MIOLO->getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $home   = 'main:finance:payrollDiscount';

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
       $href = $MIOLO->getActionURL($module, 'main:register:invoice:receivableInvoice', null, array('personId'=>'#0#', 'invoiceId'=>'#8#', 'function'=>'update'));
        $columns = array( new MGridColumn( _M('Person id', $module), 'right', true, null, true, null, true ),
                          new MGridColumn( _M('benefited pupil', $module),   'left', true, null, true, null, true ),
                          new MGridColumn( _M('employee', $module),   'left', true, null, true, null, true ),
                          new MGridColumn( _M('Bank account id', $module),    'left', true, null, true, null, true ),
                          new MGridColumn(  ),
                          new MGridColumn( _M('Balance', $module),      'right', true, null, true, null, true ),
                          new MGridColumn(  ),
                          new MGridColumn(  ),
    //                new MGridColumn(  ),
                          new MGridHyperlink( _M('Invoice id', $module),  $href, '', true ), 
                          new MGridColumn(  ),
                          new MGridColumn( _M('Debit value', $module),  'right', true, null, true, null , true ),
                          new MGridColumn( _M('Discont value', $module),  'right', true, null, true, null, true ),
                          new MGridColumn( _M('Is processed', $module),  'right', true, null, true, array( DB_TRUE => _M('Yes',$module), DB_FALSE => _M('No',$module) ), true ),
                          new MGridColumn( _M('Close date', $module),  'left', true, null, true, null, true ),
                          new MGridColumn( _M('Contract id', $module),  'left', true, null, true, null, true ),
                        );

 


        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
//        $url = $MIOLO->getActionURL( $module, "$home:search", null, $opts );
        parent::__construct( null, $columns, $url, 0, 0, 'gridPayrollDiscount' );

        $this->setIsScrollable();

 //       $this->addActionUpdate( $href_edit );
  //      $this->addActionDelete( $href_delete );

        $this->eventHandler();

    }
}

?>
