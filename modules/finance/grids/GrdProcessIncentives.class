<?php

/**
 *
 * This file handles the connection and actions for finIncentive table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 29/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdProcessIncentives extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $home   = MIOLO::getCurrentAction();

        $columns = array( 
                          new MGridColumn( _M('Incentive id', $module),               'right', true, null, true, null, false ),
                          new MGridColumn(null,                                       'right', true, null, true, null, true ),
                          new MGridColumn(null,                                       'right', true, null, true, null, true ),
                          new MGridColumn( _M('Supporter id', $module),               'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Supporter name', $module),             'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Incentive type id', $module),          'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Incentive type description', $module), 'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Start date', $module),                 'left',  true, null, true, null, false ),
                          new MGridColumn( _M('End date', $module),                   'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Value is percent', $module),           'left',  true, null, true, array( DB_TRUE => _M('Yes',$module), DB_FALSE => _M('No',$module) ), false ),
                          new MGridColumn( _M('Value', $module),                      'left',  true, null, true, null, false ),
                          new MGridColumn(null, 'right', true, null, true, null, true ),
                          new MGridColumn( null,                                      'left',  true, null, true, null, false ),
                          new MGridColumn( null,                                      'left',  true, null, true, null, false ),
                          new MGridColumn( _M('Cancellation date', $module),          'left',  true, null, true, null, false )
                         );

        $opts = array('function'=>'update',
                      'incentiveId'=>'%0%'
                     );
        $hrefEdit = $MIOLO->getActionURL( $module, $home, null, $opts );
       
        $opts = array('function'=>'delete',
                      'incentiveId'=>'%0%',
                      'event'=>'tbBtnDelete_click');
        $hrefDelete = $MIOLO->getActionURL( $module, $home, null, $opts );

        $opts = array('function'=>'processIncentive',
                      'contractId'=>$filters->contractId,
                      'incentiveId'=>'%0%',
                      'learningPeriodId'=>$filters->learningPeriodId,
                      'event'=>'btnProcess_click');
        $hrefProcess = $MIOLO->getActionURL($module, $home, null, $opts );

        unset($opts);
        if (is_array($filters))
        {
           foreach ( $filters as $k => $v )
           {
               $opts[$k] = $v;
           }
        }  
        $url = $MIOLO->getActionURL( $module, $home, null, $opts );
        parent::__construct( null, $columns, $url, 0, 0, 'gridProcessIncentives' );

        $this->setIsScrollable();

        $this->addActionUpdate( $hrefEdit );
        $this->addActionDelete( $hrefDelete );
        $this->addActionIcon(_M('Give incentive', $module), 'close', $hrefProcess);

        $this->eventHandler();

    }

}

?>
