<?php

/**
 *
 * This file handles the connection and actions for finPaymentPlace table
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 17/08/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdPersonAgreementsComments extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO   = MIOLO::getInstance();
        $module  = MIOLO::getCurrentModule();        
        $home    = 'main:register:agreements';

        $columns = array( new MGridColumn( _M('Register date', $module), 'center', true, null, true, null, false),
                          new MGridColumn( _M('Register time', $module), 'left',   true, null, true, null, false),
                          new MGridColumn( _M('Invoice id',    $module), 'right',  true, null, true, null, false) );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        $opts    = array('invoiceId'=>'%0%', 'event'=>'btnSearch_click');
        
        $hrefVerify = $MIOLO->getActionURL($module, 'main:invoiceConsult', null,  $opts);
                
        unset($opts);
        if (is_array($filters))
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
        
        $url = $MIOLO->getActionURL($module, "$home:search", null, $opts);
        parent::__construct( null, $columns, $url, null, 0, 'gridPersonAgreementsComments' );
        $this->setRowMethod( $this, 'myRowMethod');
        $this->setIsScrollable();
        $this->addActionIcon(_M('Edit',   $module), 'edit',   $hrefEdit);
        $this->addActionIcon(_M('Delete', $module), 'delete', $hrefDelete);
        $this->eventHandler();
    }
    
    public function myRowMethod( $i, $row, $actions, $columns )
    {
        for ($x = 0; $x<count($columns); $x++)
        {
            $columns[$x]->control[$i]->_addStyle( 'color', 'blue');
        }
    }
}
?>
