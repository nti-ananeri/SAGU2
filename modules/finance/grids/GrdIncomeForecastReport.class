<?php

/**
 *
 * This file generate the incomeForecast information on the screen
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * @maintainer: William Prigol Lopes [william@solis.coop.br]
 * @last modification: Put colors on lines, adjust the positions, add actions, review search query and correct some bugs
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 15/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdIncomeForecastReport extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO   = MIOLO::getInstance();
        $home    = 'main:report:incomeForecast';
        $module  = MIOLO::_request('module');
        $columns = array(
                         new MGridColumn( null ),
                         new MGridColumn( '&nbsp;',                       'center', true, null, true, null, false ),
                         new MGridColumn( '&nbsp;',                       'center', true, null, true, null, false ),
                         new MGridColumn( _M('Operation',       $module), 'left',   true, null, true, null, false ),
                         new MGridColumn( _M('Op. type',        $module), 'center', true, null, true, null, false ),
                         new MGridColumn( '&nbsp;',                       'center', true, null, true, null, false ),
                         new MGridColumn( null ),   
                         new MGridColumn( _M('Generation date', $module), 'center', true, null, true, null, false ),
                         new MGridColumn( _M('Maturity date',   $module), 'center', true, null, true, null, false ),
                         new MGridColumn( _M('Value',           $module), 'right',  true, null, true, null, false ),
                         new MGridColumn('&nbsp;',                        'center', true, null, true, null, false ),
                         new MGridColumn( null )
                        );
                 
        $opts_ = array('event'=>'btnSearch_click',
                       'learningPeriodIdS'=>$filters->learningPeriodId,
                       'contractIdS'=>$filters->contractId,
                       'periodIdS'=>$filters->periodId);
        $goto = $MIOLO->getActionURL($module, $action, null, $opts_);                       
                       
        $opts = array('function'=>'update',
                      'event'=>'update_click',
                      'incomeForecastId'=>'%0%',
                      'contractId'=>$filters->contractId,
                      'learningPeriodId'=>$filters->learningPeriodId,
                      'goto'=>urlencode($goto));
        $hrefEdit = $MIOLO->getActionURL( $module, 'main:register:incomeForecast', null, $opts );

        $opts = array('contractId'=>$filters->contractId,
                      'maturityDate'=>'%8%',
                      'learningPeriodId'=>$filters->learningPeriodId,
                      'event'=>'submit_button_click',
                      'goto'=>urlencode($goto));
        $hrefGenerate = $MIOLO->getActionURL($module, 'main:process:receivableInvoiceGenerationPupil', null, $opts );

        $opts = array('function'=>'delete',
                      'event'=>'tbBtnDelete_click',
                      'incomeForecastId'=>'%0%',
                      'learningPeriodId'=>$filters->learningPeriodId,
                      'goto'=>urlencode($goto));
        $hrefDelete = $MIOLO->getActionURL($module, 'main:register:incomeForecast', null, $opts);
        
        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $url = $MIOLO->getActionURL($module, "$home:search", null, $opts);
        parent::__construct(null, $columns, $url, 0, 0, 'GrdIncomeForecastReport');

        $this->setRowMethod($this, 'myRowMethod');
        $this->setIsScrollable();

        $this->addActionUpdate($hrefEdit);
        $this->addActionIcon(_M('Generate invoice', $module), 'close', $hrefGenerate);
        $this->addActionDelete($hrefDelete);

        $this->eventHandler();
    }
    
    public function myRowMethod( $i, $row, $actions, $columns )     
    {   
        if ( $row[13] == DB_TRUE )
        {
                for ($x = 1; $x<count($columns); $x++)
                {
                    $columns[$x]->control[$i]->_addStyle( 'color', '#505050' );
                }
        }
        else
        {
            if ( $row[4] == 'D' )
            {
                for ($x = 1; $x<count($columns); $x++)
                {
                    $columns[$x]->control[$i]->_addStyle( 'color', 'red' );
                }
            }
            elseif ($row[4] == 'C')
            {
                for ($x = 1; $x<count($columns); $x++)
                {
                    $columns[$x]->control[$i]->_addStyle( 'color', 'blue' );
                }
            }
            if ($row[11] == DB_TRUE)
            {
                $actions[1]->enabled = false;
                $actions[2]->enabled = false;
            }
            else
            {
               $actions[1]->enabled = true;
               $actions[2]->enabled = true;
            }
        }
    }
}

?>
