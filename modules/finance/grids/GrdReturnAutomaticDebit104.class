<?php

/**
 *
 * This file handles the connection and actions for Price table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *  
 * @since
 * Class created on 27/12/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdReturnAutomaticDebit104 extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:process:remittanceReturn:returnAutomaticDebit104';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array(
                          new MGridColumn( _M('Invoice id',      $module), 'left', true, null, true, null, false),
                          new MGridColumn( _M('Value',           $module), 'right', true, null, true, null, false),
          //                new MGridColumn( _M('Bank number',     $module), 'right', true, null, true, null, false),
                          new MGridColumn( _M('Operation id',     $module), 'right', true, null, true, null, false)
                        );
                        
        if (is_array($filters))
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
 //       $this->addActionIcon(_M('Consult', $module), 'find.png', $hrefConsult);
 //       $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct(null, $columns, $url, 0, 0, 'gridReturnAutomaticDebit');
    //    $this->setRowMethod($this, 'myRowMethod');
        $this->setIsScrollable();
        $this->eventHandler();
    }

}
?>
