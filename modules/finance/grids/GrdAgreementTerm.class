<?php

/**
 *
 * This file handles the connection and actions for finAgreementTerm table
 *
 * @author Giovani Murilo Dantas Corrêa [gmurilo@gmail.com]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Daniel Afonso Heisler [daniel.heisler@gmail.com]
 * Giovani Murilo Dantas Corrêa [gmurilo@gmail.com]
 * 
 * @since
 * Class created on 20/08/2008
 *
 * \b @organization \n
 * iSolution - Soluções em TI \n
 * The iSolution Development Team
 *
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdAgreementTerm extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:document:agreementTerm';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( _M('Date',    $module), 'left',  true, null, true, null, true),
                          new MGridColumn( _M('Agreement id',       $module), 'center',  true, null, true, null, true),
                          new MGridColumn( _M('Person id', $module), 'left',  true, null, true, null, true),
                          new MGridColumn( _M('Name', $module), 'left',  true, null, true, null, true),
                          new MGridColumn( _M('Value', $module), 'right',  true, null, true, null, true),
                          new MGridColumn( _M('Input value',    $module), 'right', true, null, true, null, true),
                          new MGridColumn( _M('Discount',       $module), 'right',  true, null, true, null, true),
                          new MGridColumn( _M('Parcels number',        $module), 'center',  true, null, true, null, true),
                          new MGridColumn( _M('Parcels value',        $module), 'center',  true, null, true, null, true),
                          new MGridColumn( _M('Responsable',        $module), 'center',  true, null, true, null, true),
                          new MGridColumn( _M('Comments',        $module), 'center',  true, null, true, null, true),
                          new MGridColumn( _M('Parcels',        $module), 'center',  true, null, true, null, true)
                        );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        $opts = array('agreementId'=>'%1%', 'personId'=>'%2%', 'event'=>'tbBtnPrint_click');
        
        $hrefPrint = $MIOLO->getActionURL($module, $home, null,  $opts);
        
        unset($opts);
        if (is_array($filters))
        {
            foreach ( $filters as $k => $v )
            {
                $opts[$k] = $v;
            }
        }
        $url = $MIOLO->getActionURL($module, $home, null, $opts);
        parent::__construct( null, $columns, $url, null, 0, 'gridAgreements' );
        $this->setIsScrollable();
        
        $this->addActionIcon(_M('Print', $module), 'print', $hrefPrint);
        
        $this->eventHandler();
    }
}
?>
