<?php

/**
 *
 * This file handles the connection and actions for BankReturnConfig table
 *
 * @author Giovani Murilo Dantas Correa [gmurilo@gmail.com]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 08/10/2007
 *
 * \b Organization: \n
 * iSolution - Soluções de Internet \n
 * The iSolution TEAM
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2007 iSolution - Soluções de Internet \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdBankReturnConfigSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $home   = MIOLO::getCurrentAction();
        $module = MIOLO::getCurrentModule();

        $columns = array( new MGridColumn( _M('Description',       $module), 'left',  true, null, true, null, true ),
        new MGridColumn( _M('Field type',       $module), 'left',  true, null, true, null, true ),
        new MGridColumn( _M('Position',       $module), 'right',  true, null, true, null, true ),
        new MGridColumn( _M('Size',       $module), 'right',  true, null, true, null, true ),
        new MGridColumn( _M('Segment',       $module), 'right',  true, null, true, null, true )
                        );

        $opts = array('function'=>'update',
                      'bankReturnId'=>'%5%','typeFieldReturnId'=>'%6%');
        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );
        $opts = array('function'=>'delete',
                      'bankReturnId'=>'%5%','typeFieldReturnId'=>'%6%',
                      'event'=>'tbBtnDelete_click');
        $href_delete = $MIOLO->getActionURL( $module, $home, null, $opts );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct( null, $columns, $url, LISTING_NREGS, 0, 'gridBankReturnConfigSearch' );

        $this->setIsScrollable();
        $this->addActionUpdate($href_edit);
        $this->addActionDelete($href_delete);
        $this->eventHandler();

    }

}

?>
