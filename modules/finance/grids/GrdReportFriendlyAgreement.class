<?php

/**
 *
 * This file handles the connection and actions for finDefaulterReport table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 02/01/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdReportFriendlyAgreement extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        $home   = 'main:report:friendlyAgreement:friendlyAgreement';
        $module = MIOLO::_request('module');

        $columns = array( new MGridColumn(    _M('Person id',              $module), 'center', true, null, true, null, true ),
                          new MGridColumn(    _M('Person',                 $module), 'left',   true, null, true, null, true ),
                          new MGridColumn(    _M('Residential phone',      $module), 'right',  true, null, true, null, true ), 
                          new MGridColumn(    _M('Cell phone',             $module), 'right',  true, null, true, null, true ),
                          new MGridColumn(    _M('Work phone',             $module), 'right',  true, null, true, null, true ),
                          new MGridColumn(    _M('Invoice id',             $module), 'center', true, null, true, null, true ),
                          new MGridColumn(    _M('Defaulter value',        $module), 'right',  true, null, true, null, true ),
                          new MGridColumn(    _M('Actual defaulter value', $module), 'right',  true, null, true, null, true ),
                          new MGridColumn(    _M('Maturity date',          $module), 'center', true, null, true, null, true ),
                        );


        $opts = array('function'=>'update',
                      'event'=>'btnGenerate_click',
                      'closeCounterId'=>'%0%');

        $url = $MIOLO->getActionURL($module,"$home",null,$opts);
        parent::__construct( null, $columns, $url, 0, 0, 'gridReportFriendlyAgreement' );
        $this->setRowMethod('GrdReportFriendlyAgreement', 'myRowMethod');
        
        $this->setIsScrollable();
        $this->eventHandler();

    }

    /*
     * Event to execute for each row of grid
     */
    public function myRowMethod($i, $row, $actions, $columns )
    {

        $MIOLO = MIOLO::getInstance();

        $linkPerson  = new MOpenWindow('lp' . $row[0], $row[0], $MIOLO->getActionURL($module, 'main', null, array('personId'=>$row[0], 'event'=>'btnSearch_click')));
        $linkInvoice = new MOpenWindow('li' . $row[0], $row[5], $MIOLO->getActionURL($module, 'main:report:receivableInvoiceConsult', null, array('invoiceId'=>$row[5])));

        $columns[0]->control[$i]->setValue( $linkPerson->generate() );
        $columns[5]->control[$i]->setValue( $linkInvoice->generate() );
    }


}

?>
