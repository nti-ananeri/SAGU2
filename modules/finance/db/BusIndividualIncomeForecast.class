<?php
/**
 *
 * This file handles the connection and actions for finIncomeForecast table
 *
 * @author Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * @maintainer William Prigol Lopes [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 *
 * @since
 * Class created on 06/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br
 *
 **/

$MIOLO = MIOLO::getInstance();
$MIOLO->uses('db/BusIncomeForecast.class', 'finance');

/**
 * Class to manipulate the finIncomeForecast table
 **/
class BusinessFinanceBusIndividualIncomeForecast extends BusinessFinanceBusIncomeForecast
{
    public $db;
    public $generationData;

   /**
    * Generate the individual income forecasts for every nonprocessed entry
    * at acdEnrollSummary table. If something goes wrong, a ROLLBACK
    * is executed. Otherwise, the changes are COMMITed.
    *
    * @return Return true if everything has gone right. Otherwise, return false.
    *
   **/
    public function generateIndividualIncomeForecast($data = null)
    {
        $MIOLO = MIOLO::getInstance();
        $this->db->execute('BEGIN TRANSACTION');
        $keepGoing = true; 
        for ( $i=0; $i<$data->times; $i++ )
        {
            if ($i>0)
            {
                $data->maturityDate = SAGU::addIntervalInDate($data->maturityDate, 'm', 1);
            }
            $result = $this->insertIncomeForecast($data);
            if((strlen((string)$result)) == 0 )
            {
                $keepGoing = false; 
            }
            else
            {
                $goto = $MIOLO->getActionURL($module, 'main:process:individualIncomeForecastGeneration', null);
                $result = new MOpenWindow('linkIncomeForecast'.$i, $result, $MIOLO->getActionURL($module, 'main:register:incomeForecast', null, array('incomeForecastId'=>$result, 'function'=>'update', 'goto'=>$goto)));
                $incomeForecastArray[] = array($result, $data->maturityDate, SAGU::formatNumber($data->value));
            }
        }
        $this->db->execute(($keepGoing ? 'COMMIT' : 'ROLLBACK'));
        if ($keepGoing)
        {
            return $incomeForecastArray;
        }
        else
        {
            return false;
        }
    }
}

?>

