<?php

/**
 *
 * This file handles the connection and actions for finInvoice table
 *
 * @author Giovani Murilo Dantas Corrêa [gmurilo@isolution.inf.br] 
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Daniel Afonso Heisler [daniel@isolution.inf.br]
 *
 * @since
 * Class created on 28/01/2008
 *
 * \b @organization \n
 * iSolution - Soluções em TI \n
 * The iSolution Development Team
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Class to manipulate the Invoice table
 **/
$MIOLO = MIOLO::getInstance();
$MIOLO->uses('db/BusInvoice.class','finance');

class BusinessFinanceBusFinancialBalanceByClass extends BusinessFinanceBusInvoice  
{
	
	public function getInvoices($filters)
	{
        $sql = "
        SELECT 
            personId,
            name,
            receitaRealizada,
            receitaPrevistaLiquida,
            receitaPrevistaBruta,
            juros,
            desconto,
            descontoaplicado,
            incentivo,
            vencimento,
            parcelNumber,
            status,
            isento,
            saldo
        FROM 
            debitos_por_turma ('". $filters->classId ."', '". $filters->periodId ."') as ( 
                personId integer, 
                name varchar, 
                receitaRealizada numeric(14,2)[], 
                receitaPrevistaLiquida numeric(14,2)[], 
                receitaPrevistaBruta numeric(14,2)[], 
                juros numeric(14,2)[], 
                desconto numeric(14,2)[], 
                descontoaplicado numeric(14,2)[], 
                incentivo numeric(14,2)[], 
                vencimento varchar[], 
                parcelNumber integer[], 
                status bool[],
                isento bool[], 
                saldo numeric(14,2)[])";
        $result = $this->db->query($sql);
        $exploitar = array ( 'receitaRealizada', 'receitaPrevistaLiquida', 'receitaPrevistaBruta', 'juros', 'desconto', 'descontoAplicado', 'incentivo', 'vencimento', 'parcelNumber', 'status','isento', 'saldo' );
        foreach ( $result as $item => $value )
        {
            unset($data);
            list (  $data->personId, 
                    $data->name, 
                    $data->receitaRealizada, 
                    $data->receitaPrevistaLiquida, 
                    $data->receitaPrevistaBruta,
                    $data->juros,
                    $data->desconto,
                    $data->descontoAplicado,
                    $data->incentivo,
                    $data->vencimento,
                    $data->parcelNumber,
                    $data->status,
                    $data->isento,
                    $data->saldo ) = $value;
            foreach ( $data as $item2 => $value2 )
            {
                if ( in_array($item2, $exploitar ) )
                {
                    $data->$item2 = explode(',', substr($value2, 1, strlen((string)$value2)-2));
                }
            }
            $data2[$data->personId]->name = $data->name;
            foreach ($data->parcelNumber as $item2 => $value2 )
            {
                foreach ( $exploitar as $itemx => $valuex )
                {
                   $data2[$data->personId]->parcel[$value2]->$valuex = $data->{$valuex}[$item2];
                }
            }
        }
        return $data2;
	}
}
?>
