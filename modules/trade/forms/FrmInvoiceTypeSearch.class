<?php

/**
 *
 * This file handles the connection and actions for trdInvoiceType table
 *
 * @author Rosemberg Almeida dos Santos [rosbrg@gmail.com]
 * @version $Id$
 *
 * \b Maintainers: \n
 * Rosemberg Almeida dos Santos [rosbrg@gmail.com]
 * Daniel Afonso Heisler [daniel.heisler@gmail.com]
 *
 * @since
 * Class created on 11/11/2008
 *
 * \b Organization: \n
 * Isolution [http://www.isolution.inf.br/]
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 **/

/**
 * Form to search the trdInvoiceType table
 */
class FrmInvoiceTypeSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;

        $this->home = $data->home;
        
        parent::__construct(_M('Search', $module));
        
        // hide the 'Submit' button
        $this->setShowPostButton(false);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');
        
        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Invoice type', $this->home, 'invoiceType-16x16.png', true);
        }
        //fim favoritos
        
        $fields[] = $toolBar;

        $invoiceTypeIdS = new MTextField('invoiceTypeIdS', $this->invoiceTypeIdS->value, _M('Invoice type id', $module), 10);
        $invoiceTypeIdS->setJsHint(_M('Enter the invoice type id', $module));
        $fields[]  = $invoiceTypeIdS;

        $invoiceTypeDescriptionS = new MTextField('invoiceTypeDescriptionS', $this->invoiceTypeDescriptionS->value, _M('Description invoice type', $module), 40);
        $invoiceTypeDescriptionS->setJsHint(_M('Enter description of invoice type', $module));
        $fields[] = $invoiceTypeDescriptionS;

        $this->setFields($fields);

        //trocar esse btnsearch por um que faz o linkbutton
        $fields[] = new MButton('btnSearch', _M('Search', $module));

        $this->setFields($fields);


        // get filters values
        $filters->invoiceTypeId            = $this->invoiceTypeIdS->value;
        $filters->description   = $this->invoiceTypeDescriptionS->value;
        
	$grdResults = $MIOLO->getUI()->getGrid($module,'GrdInvoiceTypeSearch', $filters);
        $business   = $this->manager->getBusiness($module,'BusInvoiceType');
        $data       = $business->searchInvoiceType($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.invoiceTypeIdS.focus();');
        }
    }
}

?>
