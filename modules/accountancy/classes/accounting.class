<?php

$MIOLO = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();

/**
 * Class to manipulate functions for accounting
 *
 * @author: Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 */
class ACCOUNTING
{
    /**
     *
     * Function thats write accounting values to siga file
     *
     */
    function writeToSigaFile($externalIncomeForecastId, $operationTypeId, $debitAccount, $creditAccount, $operationId, $value, $debitCostCenter, $creditCostCenter, $lot, $document, $line, $debitItem = '', $creditItem = '')
    {

        $blanks  = str_pad(null, 600, " "); //600 blanks
        $zeros   = str_pad(null, 100, "0"); //100 zeros

        $lineAccount  = $externalIncomeForecastId;
        $lineAccount .= trim($operationTypeId);
        $lineAccount .= $debitAccount . substr($blanks,0,20-strlen((string)$debitAccount));
        $lineAccount .= $creditAccount . substr($blanks,0,20-strlen((string)$creditAccount));
        if (strlen((string)$operationId)>40)
        {
            $operationId = substr($operationId,0,39);
        }
        $debitItemOk  = substr($zeros,0,9-strlen((string)$debitItem))  . $debitItem;
        $creditItemOk = substr($zeros,0,9-strlen((string)$creditItem)) . $creditItem;

        $debitItemOk  = ($debitItemOk  == '000000000') ? '         ' : $debitItemOk;
        $creditItemOk = ($creditItemOk == '000000000') ? '         ' : $creditItemOk;

        $lineAccount .= strtoupper($operationId) . substr($blanks,0,40-strlen((string)$operationId));
        //$lineAccount .= ACCOUNTING::formatNumber($value,17,2);
        $lineAccount .= str_pad(number_format($value, 2, '', ''),17,'0', STR_PAD_LEFT);
        $lineAccount .= $debitCostCenter . substr($blanks,0,9-strlen((string)$debitCostCenter));
        $lineAccount .= $creditCostCenter . substr($blanks,0,9-strlen((string)$creditCostCenter));
        $lineAccount .= '  ' . $debitItemOk;
        $lineAccount .= ' ' . $creditItemOk;
        $lineAccount .= substr($blanks,0,510-strlen((string)$lineAccount));

        return $lineAccount;
    }


    function formatNumber($number,$len,$dec)
    {
        $number = str_replace(',','.',$number);
        $return = sprintf("%0" . $len . "." . $dec . "f", $number);
        return ereg_replace( "\,", "", "$return" );
    }
    
    /**
     *
     * Function that commute the accounts for accounting
     *
     */
    function commuteAccounts(&$debitAccount, &$creditAccount, &$debitCostCenter, &$creditCostCenter, &$debitItem, &$creditItem)
    {
        $aux = $debitAccount;    $debitAccount    = $creditAccount;    $creditAccount    = $aux;  // permutar variaveis
        $aux = $debitCostCenter; $debitCostCenter = $creditCostCenter; $creditCostCenter = $aux;  // permutar variaveis
        $aux = $debitItem;       $debitItem       = $creditItem;       $creditItem       = $aux;  // permutar variaveis
    }

}
?>
