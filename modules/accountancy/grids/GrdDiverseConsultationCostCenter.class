<?php

/**
 *
 * Accountancy diverse consultation grid
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 14/08/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdDiverseConsultationCostCenter extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        
        $columns = array( 
                          new MGridColumn( _M('Balance date', $module), 'center', true, null, true, null, true),
                          new MGridColumn( _M('Course id',    $module), 'center', true, null, true, null, true),
                          new MGridColumn( _M('Course name',  $module), 'left',   true, null, true, null, true),
                          new MGridColumn( _M('Balance',      $module), 'right',  true, null, true, null, true)
                         );

        
        $url = $MIOLO->getActionURL($module, $action, null, $opts);
        parent::__construct(null, $columns, $url, 0, 0, 'gridDiverseConsultationCostCenter');
        $this->setRowMethod('GrdDiverseConsultationCostCenter', 'myRowMethod');

        $this->setIsScrollable();
        $this->eventHandler();
    }
   
    /*
     * Event to execute for each row of grid
     */
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO = MIOLO::getInstance();
    }
}
?>
