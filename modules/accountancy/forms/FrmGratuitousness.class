<?php
/**
 *
 * This file handles view of gratuitousness
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Eduardo Beal Miglioransa [eduardo@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 10/07/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 */
class FrmGratuitousness extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $module = MIOLO::getCurrentModule();

        $this->home   = $data->home;

        parent::__construct(_M('Gratuitousness', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
        
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnPrint');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnNew');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Gratuitousness', $this->home, 'gratuitousness-16x16.png', true);
        }
        //fim favoritos
       
        $fields[] = $toolBar;

        // title
        $reportTitle = new MTextField('reportTitle', $this->getFormValue('reportTitle',$data->reportTitle), _M('Report title', $module), FIELD_DESCRIPTION_SIZE);
        $fields[] = $reportTitle;
        
        // discount description
        $discountDescription = new MTextField('discountDescription', $this->getFormValue('discountDescription',$data->discountDescription), _M('Discounts description', $module), FIELD_DESCRIPTION_SIZE);
        $fields[] = $discountDescription;

        $business = $MIOLO->getBusiness('finance', 'BusOperation');

        $operationLabel = new MText('operationLabel', _M('Operation', $module));
        $operationLabel->setWidth(FIELD_CONTAINER_SIZE);
        $operation = new MMultiSelection('operation',  is_array($this->getFormValue('operation', $data->operation)) ? $this->getFormValue('operation', $data->operation) : array($this->getFormValue('operation', $data->operation)), '', $business->listOperation(null, true), true, null, 10);
        $fields[] = new MHContainer('hctEndDate', array($operationLabel, $operation));

        // beginDate
        $beginDateLabel = new MText('beginDateLabel', _M('Begin date', $module).':');
        $beginDateLabel->setWidth(FIELD_CONTAINER_SIZE);
        $beginDateLabel->setClass('m-caption m-caption-required');
        $beginDate      = new MCalendarField('beginDate', $this->getFormValue('beginDate',$data->beginDate), '', FIELD_DATE_SIZE);
        $beginDate->setJsHint(_M('Enter the begin date',$module));
        $validators[] = new MDATEDMYValidator('beginDate', '', 'required');
        $fields[] = new MHContainer('hctBeginDate', array($beginDateLabel, $beginDate));

        // EndDate
        $endDateLabel = new MText('endDateLabel', _M('End date', $module).':');
        $endDateLabel->setWidth(FIELD_CONTAINER_SIZE);
        $endDateLabel->setClass('m-caption m-caption-required');
        $endDate      = new MCalendarField('endDate', $this->getFormValue('endDate',$data->endDate), '', FIELD_DATE_SIZE);
        $endDate->setJsHint(_M('Enter the end date',$module));
        $validators[] = new MDATEDMYValidator('endDate', '', 'required');
        $fields[] = new MHContainer('hctEndDate', array($endDateLabel, $endDate));
        
        $orderByData = array(
                                array(_M('Name', $module),  'personName'),
                                array(_M('Cpf', $module),   'cpf'),
                                array(_M('Date', $module),  'entryDate'),
                                array(_M('Value', $module), 'value')
                            );

        $orderByLabel = new MText('orderByLabel', _M('Order by', $module).':');
        $orderByLabel->setWidth(FIELD_LABEL_SIZE);
        $orderBy = new MRadioButtonGroup('orderBy', '', $orderByData, $this->getFormValue('orderBy',$data->orderBy), '', 'horizontal');
        $orderBy->setShowLabel(false);
        $fields[] = new MHContainer('hctFreshManS', array($orderByLabel, $orderBy));

        
        $fields[] = new MButton('btnGenerate',_M('Generate',$module) . ' ' . _M('gratuitousness', $module) . '.txt');
        $fields[] = new Separator('');

        $this->setFields($fields);

        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));

    }

    /**
     * Event triggered when user chooses File from the toolbar
     **/
    public function btnGenerate_click($sender=NULL)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        
        $filters->reportTitle         = $this->getFormValue('reportTitle');
        $filters->beginDate           = $this->getFormValue('beginDate');
        $filters->endDate             = $this->getFormValue('endDate');
        $filters->operations          = $this->getFormValue('operation');
        $filters->discountDescription = $this->getFormValue('discountDescription');
        $filters->orderBy             = $this->getFormValue('orderBy');
        
        $business = $MIOLO->getBusiness($module, 'BusGratuitousness');
        
        $content[] = $filters->reportTitle;
        $content[] = $filters->discountDescription  ;
        
        $content[] = _M('Pupil',       $module) . '|' . 
                     _M('Cpf',         $module) . '|' .
                     _M('Affiliation', $module) . '|' .
                     _M('Address',     $module) . '|' .
                     _M('Entry date',  $module) . '|' .
                     _M('Value',       $module);

        $data     = $business->getGratuitousness($filters);
        
        if ( is_array($data) )
        {
            foreach( $data as $value )
            {
                $total[]   = $value[5];
                
                //prevents memory overflow
                if ( count($total) > 1000 )
                {
                    $aux = SAGU::calcNumber(implode('+', $total));
                    unset($total);
                    $total[] = $aux;
                }
                
                $content[] = implode('|', $value);
            }
        }
        
        $countPupil    = $business->getGratuitousnessCount($filters);
        $countBenefits = count($data);
        $total         = SAGU::calcNumber(implode('+', $total));
        
        $content[]     = _M('Benefited pupils', $module) . ': ' . $countPupil . ' - ' .
                         _M('Benefits', $module) . ': ' . $countBenefits . ' - ' .
                         _M('Totalizing', $module) . ' ' . $total . ' ' . _M('Real(s)', $module);
        
        $fileContent = implode(chr(hexdec("\X0D\X0A")), $content);
        $fileContent.= chr(hexdec("\X0D\X0A"));        
        
        SAGU::returnAsFile('gratuitousness-' . date(dmY) . '.txt', $fileContent, 'text/gratuitousness-file');
        
    }
    
}

?>
