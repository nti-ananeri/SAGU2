<?php

/**
 * Generate accountancy balance
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 02/10/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to import cost center
 **/
class FrmGenerateAccountancyBalance extends MForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {

        $module     = MIOLO::getCurrentModule();
        $this->home = $data->home;
        parent::__construct(_M('Generate accountancy balance', $module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO       = MIOLO::getInstance();
        $module      = MIOLO::getCurrentModule();
        $action      = MIOLO::getCurrentAction();
        $initialDate = MIOLO::_request('initialDate');
        $limitDate   = MIOLO::_request('limitDate');

        $business  = $MIOLO->getBusiness('basic', 'BusConfig');
        $constants = $business->getModuleValues('basic');
        foreach ( $constants as $cnt )
        {
            define($cnt[0],$cnt[1]);
        }

        $business = $MIOLO->GetBusiness($module, 'BusAccountBalance');

        $ok = $business->generateAccountancyBalance($initialDate, $limitDate);

        if ( $ok )
        {
            $msg = _M('Accountancy balances generated with success!', $module) . ' ' . _M('You desire to visualize them?', $module);
            $opts = array('initialDate1' => MIOLO::_request('initialDate'),
                          'limitDate1'   => MIOLO::_request('limitDate'));
            $gotoNo  = $MIOLO->getActionURL($module, 'main:process:accountancyBalance', null, $opts);
            $opts['balanceDate']   = $limitDate;
            $opts['personBalance'] = true;
            $gotoYes = $MIOLO->getActionURL($module, 'main:report:storedBalances', null, $opts);
            $caption = _M('Question',$module);
            $MIOLO->question($msg, $gotoYes, $gotoNo);
        }
        else
        {
            $msg  = _M('Error executing requested operation.', $module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen((string)$goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Error', $module);
            $MIOLO->error( $msg, $goto, $caption );
        }
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));

    }

}

?>
