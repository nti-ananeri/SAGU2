<?php

/**
 *
 * This file handles the connection and actions for basLegalPerson table
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 12/09/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdLegalPersonSearch extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO = MIOLO::getInstance();
        
        $home   = 'main:person:person:legalPerson';
        $module = MIOLO::_request('module');

        /*
         * MGridColumn constructor parameters:
         *    $title = ''
         *    $align = 'left'
         *    $nowrap = false
         *    $width = 0
         *    $visible = true
         *    $options = null
         *    $order = false
         *    $filter = false
         */
        $columns = array( 
                          new MGridColumn( _M('Code', $module),     'right', true, null, true, null, true ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( _M('Name', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( null ),
                          new MGridColumn( _M('Fake name', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( null ),
                          new MGridColumn( _M('Phone', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Fax', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( _M('CNPJ', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( _M('State registration', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( _M('City registration', $module),     'left',  true, null, true, null, true ),
                          new MGridColumn( _M('Legal person type', $module),     'left',  true, null, true, null, true )
                        );

        $opts = array('function'=>'update',
                      'personId'=>'%0%');
        $href_edit = $MIOLO->getActionURL( $module, $home, null, $opts );
        $opts = array('function'=>'delete',
                      'personId'=>'%0%',
                      'event'=>'tbBtnDelete_click');
        $href_delete = $MIOLO->getActionURL( $module, $home, null, $opts );

        // this foreach is necessary until the getActionURL function is
        // able to handle an object parameter
        unset($opts);
        foreach ( $filters as $k => $v )
        {
            $opts[$k] = $v;
        }
        $url = $MIOLO->getActionURL($module,"$home:search",null,$opts);
        parent::__construct( null, $columns, $url, LISTING_NREGS, 0, 'gridLegalPerson' );

        $this->setIsScrollable();

        $this->addActionUpdate( $href_edit );

        if ( INCREASE_SECURITY_LEVEL == 'NO' )
        {
            $this->addActionDelete( $href_delete );
        }

        $this->eventHandler();

    }

}

?>
