<?php

/**
 *
 * This file handles the connection and actions for basTurn table
 *
 * @author Hélio H. R. Guimarães [helio@solis.coop.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Mauricio de Castro [mcastro@solis.coop.br]
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 10/08/2005
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Solucoes Livres \n
 * The SAGU2 Development Team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the basTurn table
 */
class FrmTurnSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Turn', $this->home, 'turn-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $turnIdS  = new MTextField('turnIdS', $this->turnIdS->value, _M('Code',$module), FIELD_ID_SIZE);
        $turnIdS->setJsHint(_M('Enter the turn code',$module));
        $fields[] = $turnIdS;
        $validators[] = new MIntegerValidator('turnIdS', '', 'optional');

        $descriptionS = new MTextField('descriptionS', $this->descriptionS->value, _M('Description',$module), FIELD_DESCRIPTION_SIZE);
        $descriptionS->setJsHint(_M('Enter the turn description',$module));
        $fields[]     = $descriptionS;
        
        $shortDescriptionS = new MTextField('shortDescriptionS', $this->shortDescriptionS->value, _M('Short description',$module), 6);
        $shortDescriptionS->setJsHint(_M('Enter the turn short description',$module));
        $fields[]          = $shortDescriptionS;

        $beginHourS   = new MTextField('beginHourS', $this->beginHourS->value, _M('Begin hour',$module), FIELD_TIME_SIZE, 'hh:mm');
        $beginHourS->setJsHint(_M('Enter the begin hour of the turn',$module));
        $validators[] = new MTimeValidator('beginHourS','','optional');
        $fields[]     = $beginHourS;

        $endHourS     = new MTextField('endHourS', $this->endHourS->value, _M('End hour',$module), FIELD_TIME_SIZE, 'hh:mm');
        $endHourS->setJsHint(_M('Enter the end hour of the turn',$module));
        $validators[] = new MTimeValidator('endHourS','','optional');
        $fields[]     = $endHourS;

        $charIdS  = new MTextField('charIdS', $this->charIdS->value, _M('Group',$module), 1);
        $charIdS->setJsHint(_M('Enter the group char',$module));
        $fields[] = $charIdS;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);
        $this->setValidators($validators);

        // get filters values
        $filters->turnId           = $this->turnIdS->value;
        $filters->description      = $this->descriptionS->value;
        $filters->shortDescription = $this->shortDescriptionS->value;
        $filters->beginHour        = $this->beginHourS->value;
        $filters->endHour          = $this->endHourS->value;
        $filters->charId           = $this->charIdS->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdTurnSearch',$filters);
        $business   = $this->manager->getBusiness($module,'BusTurn');
        $data       = $business->searchTurn($filters);
        $grdResults->setData($data);

        $this->addField($grdResults);

        $this->page->onLoad('document.' . $this->name . '.turnIdS.focus();');

        $this->setLabelWidth(FIELD_LABEL_SIZE);

    }

}

?>
