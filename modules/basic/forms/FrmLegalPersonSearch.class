<?php

/**
 *
 * This file handles the connection and actions for basPerson table
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br] 
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 31/08/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the basPerson table
 */
class FrmLegalPersonSearch extends MForm
{
    private $home;
    private $module;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $this->module = 'basic';
        $module = $this->module;

        $this->home   = $data->home;

        parent::__construct(_M('Search',$module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Legal person', $this->home, 'legalPerson-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        //$fields[] = new MHiddenField('personIdS', $this->getFormValue('personIdS',$data->personIdS));

        $personIdS     = new MTextField('personIdS', $this->getFormValue('personIdS',$data->personIdS), _M('Code',$module), FIELD_ID_SIZE);
        $personIdS->setJsHint(_M('Enter the person id',$module));
        $fields[]       = $personIdS;

        $fakeNameS     = new MTextField('fakeNameS', $this->getFormValue('fakeNameS',$data->fakeNameS), _M('Fake name',$module), FIELD_DESCRIPTION_SIZE);
        $fakeNameS->setJsHint(_M('Enter the legal person fake name',$module));
        $fields[]       = $fakeNameS;

        $currentNameS  = new MTextField('currentNameS', $this->getFormValue('currentNameS',$data->currentNameS), _M('Current name',$module), FIELD_DESCRIPTION_SIZE);
        $currentNameS->setJsHint(_M('Enter the legal person current name',$module));
        $fields[]       = $currentNameS;

        $phoneS       = new MTextField('phoneS', $this->getFormValue('phoneS',$data->phoneS), _M('Phone',$module), 20);
        $phoneS->setJsHint(_M('Enter the phone number',$module));
        $fields[]      = $phoneS;

        $faxS          = new MTextField('faxS', $this->getFormValue('faxS',$data->faxS), _M('Fax',$module), 20);
        $faxS->setJsHint(_M('Enter the fax number',$module));
        $fields[]     = $faxS;

        $cnpjS         = new MTextField('cnpjS', $this->getFormValue('cnpjS',$data->cnpjS), _M('Cnpj',$module), 20);
        $cnpjS->setJsHint(_M('Enter the cnpj',$module));
        $validators[] = new MCnpjValidator('cnpjS');
        $fields[]       = $cnpjS;

        $stateRegistrationS = new MTextField('stateRegistrationS', $this->getFormValue('stateRegistrationS',$data->stateRegistrationS), _M('State registration',$module), 20);
        $stateRegistrationS->setJsHint(_M('Enter the state registration',$module));
        $fields[]       = $stateRegistrationS;

        $cityRegistrationS = new MTextField('cityRegistrationS', $this->getFormValue('cityRegistrationS',$data->cityRegistrationS), _M('City registration',$module), 20);
        $cityRegistrationS->setJsHint(_M('Enter the city registration',$module));
        $fields[]       = $cityRegistrationS;

        $business     = $MIOLO->GetBusiness($module, 'BusLegalPersonType');
        $fields[]     = new MComboBox('legalPersonTypeIdS', $this->getFormValue('legalPersonTypeIdS', $data->legalPersonTypeIdS), _M('Legal person type',$module), $business->listLegalPersonType());

        $fields[] = new MButton('btnSearch',_M('Search',$module));

        $this->setFields($fields);
        $this->setValidators($validators);

        // get filters values
        $filters->personId          = $this->personIdS->value;
        $filters->fakeName          = $this->fakeNameS->value;
        $filters->currentName       = $this->currentNameS->value;
        $filters->cnpj              = $this->cnpjS->value;
        $filters->stateRegistration = $this->stateRegistrationS->value;
        $filters->cityRegistration  = $this->cityRegistrationS->value;
        $filters->legalPersonTypeId = $this->legalPersonTypeIdS->value;
        $filters->phone             = $this->phoneS->value;
        $filters->fax               = $this->faxS->value;
        $filters->legalPersonTypeId = $this->legalPersonTypeIdS->value;
        //$filters->name     = $this->personNameS->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdLegalPersonSearch',$filters);
        $business   = $this->manager->getBusiness($module,'BusLegalPerson');
        $data       = $business->searchLegalPerson($filters);
        $grdResults->setData($data);

        //unset($this->personIdS->value);
        //###GRID///is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);

        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.personIdS.focus();');
        }

    }

}

?>
