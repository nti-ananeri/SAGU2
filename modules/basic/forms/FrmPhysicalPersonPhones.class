<?php

class FrmPhysicalPersonPhones extends MForm
{

    private $data;

    /**
     * Class constructor
     **/
    function __construct($data=null)
    {
        $MIOLO           = MIOLO::getInstance();
        $module          = MIOLO::getCurrentModule();
        parent::__construct(_M('Update', $module) . ' ' . _M('physical person',$module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        $personId = MIOLO::_request('personId');
	    if( strlen((string)$personId) > 0 )
	    {
	        $businessPerson = $MIOLO->getBusiness('basic', 'BusPhysicalPersonPhones');
	        $data = $businessPerson->getPhysicalPersonPhones($personId);
	    }
        $personLabel = new MText('personLabel', _M('Person', $module).':');
        $personLabel->setWidth(FIELD_CONTAINER_SIZE);

        $personId = new MLookupTextField('personId', $this->getFormValue('personId',$data->personId), '', FIELD_ID_SIZE, null, null, 'personName', $module, 'PhysicalPerson', null, null, true);
        $personId->setJsHint(_M('Enter the physical person id',$module));
        $validators[] = new MIntegerValidator('personId', '', 'required');

        $personName = new MTextField('personName', $data->name, _M('Name',$module), FIELD_DESCRIPTION_SIZE);
        if ( $function == 'update' )
        {
            $personId->setReadOnly(true);
        }
        $personName->setReadOnly(true);
        //$fields[] = $personName;
            
        $hctPerson = new MHContainer('hctPerson', array($personLabel, $personId, $personName));
        $hctPerson->setShowLabel(false);
        $fields[] = $hctPerson;
        //BaseGroup 1
        $residentialPhone = new MTextField('residentialPhone', $this->getFormValue('residentialPhone',$data->residentialPhone), _M('Residential',$module), 20);
        $residentialPhone->setJsHint(_M('Enter the residential phone',$module));
        $flds[]       = $residentialPhone;

        $workPhone    = new MTextField('workPhone', $this->getFormValue('workPhone',$data->workPhone), _M('Work Phone',$module), 20);
        $workPhone->setJsHint(_M('Enter the work phone',$module));
        $flds[]       = $workPhone;

        $cellPhone    = new MTextField('cellPhone', $this->getFormValue('cellPhone',$data->cellPhone), _M('Cell',$module), 20);
        $cellPhone->setJsHint(_M('Enter the cell phone',$module));
        $flds[]       = $cellPhone;

        $messagePhone = new MTextField('messagePhone', $this->getFormValue('messagePhone',$data->messagePhone), _M('Message Phone',$module), 20);
        $messagePhone->setJsHint(_M('Enter the message phone',$module));
        $flds[]       = $messagePhone;

        $bsg1            = new BaseGroup('bsg1',_M('Phones',$module),$flds,'vertical');
        $bsg1->showLabel = true;
        $bsg1->width     = '100%';
        $fields[] = $bsg1;


        if ( $function == 'update' )
        {
            $fields[] = new MTextLabel('lastModification', '[' . $data->userName . ' - ' . $data->dateTime . ']', _M('Last modification',$module));

        }

        $fields[] = new Separator('');
        $btn1[]   = new MButton('btnSave',   _M('Save', $module));

        $div1     = new MDiv('div1', $btn1, null, 'align=center');
        $fields[] = $div1;
        $fields[] = new Separator('');

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
    }

    /**
     * Event triggered when user click next
     **/
    public function btnSave_click($sender = null)
    {

        $MIOLO      	= MIOLO::getInstance();
        $module     	= MIOLO::getCurrentModule();
        $action     	= MIOLO::getCurrentAction();
        $function	= MIOLO::_request('function');
        $data		= $this->getTypesData();
	    $businessPerson = $MIOLO->getBusiness('basic', 'BusPhysicalPersonPhones');
	    
        $ok = $businessPerson->updatePhysicalPersonPhones($data);
        if ( $ok )
        {
            $caption = _M('Information', $module);
            $msg = MSG_RECORD_UPDATED;
            $MIOLO->information($msg, $MIOLO->getActionURL( $module, $action));
        }
        else
        {
            $msg  = _M('Error executing requested operation.',$module);
            $goto = SAGU::getStackBackUrl();
            $goto = strlen((string)$goto)>0 ? $goto : $MIOLO->getActionURL($module, $action);
            $caption = _M('Error',$module);
            $MIOLO->error( $msg, $goto, $caption );
        }

    }

    /**
     * Method to gather all information from the form fields
     * and put them on a database compatible object
     **/
    public function getTypesData()
    {
	    $data->residentialPhone = $this->residentialPhone->value;
	    $data->workPhone	= $this->workPhone->value;
	    $data->cellPhone	= $this->cellPhone->value;
	    $data->messagePhone	= $this->messagePhone->value;
        $data->personId     = $this->personId->value;
        return $data;
    }

}
