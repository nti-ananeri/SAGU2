<?php

/**
 * Digital Password Search form
 *
 * @author Giovani Murilo Dantas Corrêa [gmurilo@isolution.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Giovani Murilo Dantas Corrêa [gmurilo@isolution.inf.br]
 * Daniel Afonso Heisler [daniel@isolution.inf.br]
 *
 * @since
 * Class created on 21/12/2007
 *
 * \b Organization: \n
 * iSolution - Soluções em TI \n
 * The iSolution Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to view digital password already assigned pupils
 **/
class FrmDigitalPasswordAssignedSearch extends MForm
{

    private $postAction;

    /**
     * Class constructor
     **/
    function __construct($postAction)
    {

        $module = MIOLO::getCurrentModule();

        parent::__construct(_M('Digital password', 'services'));
		$this->setShowPostButton(false);
	
        $this->postAction = $postAction;
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        $data     = $this->data;

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));

//        $toolBar->disableButton('tbBtnPrint');
        $toolBar->disableButton('tbBtnDelete');
        $toolBar->disableButton('tbBtnSave');
		$fields[] = $toolBar;

		//Person Lookup
		$personLabelS = new MText('personLabelS', _M('Person',$module).':');
        $personLabelS->setWidth(FIELD_CONTAINER_SIZE);

        $personIdS   = new MLookupTextField('personIdS', $this->personIdS->value, '', FIELD_LOOKUPFIELD_SIZE, null, null, 'personNameS', 'basic', 'Person', null, null, true);
        $personIdS->setJsHint(_M('Enter the person code',$module));
        $validators[] = new MIntegerValidator('personIdS', '', '');

        $personNameS = new MTextField('personNameS', $this->personNameS->value, '', FIELD_DESCRIPTION_SIZE);
        $personNameS->setJsHint(_M('Person name',$module));
        $personNameS->setReadOnly(true);

        $hctPerson = new MHContainer('hctPerson', array($personLabelS, $personIdS, $personNameS));
        $hctPerson->setShowLabel(true);
        $fields[]  = $hctPerson;

        $fields[] = new MButton('btnSearch',_M('Search',$module));

		$this->setFields($fields);
        
		// get filters values
        $filters->personId       = $this->personIdS->value;

        $grdResults = $MIOLO->getUI()->getGrid($module,'GrdDigitalPassword',$filters);
        $business   = $this->manager->getBusiness($module,'BusDigitalPassword');
        $data       = $business->getDigitalPassword($filters, false);
        $grdResults->setData($data);

        $this->addField($grdResults);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
		
    }
}

?>
