<?php
/**
 *
 * 
 *
 * @author Leovan Tavares da Silva [leovan@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 01/02/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/



/**
 * Class containing general database functions
 **/
class BusinessBasicBusFunctions extends Business
{

    var $db;

    function BusinessBasicBusFunctions()
    {
        $this->db = $this->getDatabase();
    }

    /**
     * Make a connection to the database
     * 
     * @param $module (string): The module whose database we should connect. If null, the actual module database is connected.
     *
     * @return (object): A MIOLO Database connection
     **/
    public function getDatabase($module = null)
    {
        $MIOLO = MIOLO::getInstance();
        $MIOLO->getClass('basic','sagu');
        $module = is_null($module) ? 'basic' : $module;

        return $MIOLO->getDatabase($module);
    }
    
    /**
     * Verify if a date is between two other dates
     * 
     * @param $mainDate (string): the date to verify
     * @param $firstDate (string): the beginning date
     * @param $secondDate (string): the final date
     * @param $dateMask (string): the date mask
     *
     * @return (boolean): TRUE if mainDate is between firstDate and secondDate. Otherwise FALSE
     **/
    public function isBetweenDates($mainDate, $firstDate, $secondDate, $dateMask)
    {
        $sql = 'SELECT isbetweendates(?, ?, ?, ?)';
        
        $args = array($mainDate, $firstDate, $secondDate, $dateMask);
        
        $result = $this->db->query(SAGU::prepare($sql, $args));
        
        //vd($result);
        
        if ($result[0][0] == 't')
        {
            return true;
        }
        else
        {
            return false;
        }
    }

}

?>
