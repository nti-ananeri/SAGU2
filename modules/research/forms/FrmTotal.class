<?php

/**
 * Total report form
 *
 * @author Daniel Afonso Heisler [daniel@hsti.inf.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Leovan Tavares da Silva [leovan@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 27/09/2007
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a contract document
 **/
class FrmTotal extends MForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
        $module       = MIOLO::getCurrentModule();
        $this->home   = $data->home;
        parent::__construct(_M('Total', $module));
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
        set_time_limit(0);
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        $event    = MIOLO::_request('event');

        $toolBar = new MToolBar('toolBar', $MIOLO->getActionURL($module, $action));
        $toolBar->hideButton('tbBtnNew');
        $toolBar->hideButton('tbBtnSave');        
        $toolBar->hideButton('tbBtnSearch');
        $toolBar->hideButton('tbBtnDelete');
        $toolBar->enableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Total', $this->home, 'total-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $businessForm = $MIOLO->getBusiness($module, 'BusForm');
        $fields[]     = new MSelection('formId', $this->getFormValue('formId', $data->formId), _M('Form',$module), $businessForm->listForm(), true );
        $validators[] = new MRequiredValidator('formId');

        if ( MODULE_SELECTIVEPROCESS_INSTALLED == true )
        {
            $businessSelectiveProcess = $MIOLO->getBusiness('selectiveProcess', 'BusSelectiveProcess');
            $lista                    = $businessSelectiveProcess->listSelectiveProcess();
            $fields[]                 = new MSelection('selectiveProcessId', $this->getFormValue('selectiveProcessId', $data->selectiveProcessId), _M('Selective process','selectiveProcess'), $lista, true );
        }

        $showCommentsLabel = new MText('showCommentsLabel', _M('Show comments','research') . '?');
        $showCommentsLabel->setWidth(FIELD_CONTAINER_SIZE);
        $showCommentsLabel->setClass('m-caption m-caption-required');
        $flds[] = $showCommentsLabel;
        $showCommentsOptions = SAGU::listYesNo(1);

        $showComments = new MRadioButtonGroup('showComments', '', $showCommentsOptions, $this->getFormValue('showComments', $data->showComments) ? $this->getFormValue('showComments', $data->showComments) : DB_TRUE, null, 'horizontal');
        $showComments->setShowLabel(false);
        $flds[] = $showComments;

        $hctShowComments = new MHContainer('hctShowComments', $flds);
        $hctShowComments->setShowLabel(false);
        $fields[]  = $hctShowComments;
        unset($flds);         

        $fields[] = new MSeparator();

        $this->setFields($fields);
        $this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module,substr($action,0,strrpos($action,':'))));
    }

    /**
     * Event triggered when user chooses Search from the toolbar
     **/
    public function tbBtnPrint_click($sender = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $dados->formId             = MIOLO::_request('formId');
        $dados->selectiveProcessId = MIOLO::_request('selectiveProcessId');
        $dados->showComments       = MIOLO::_request('showComments');

        $MIOLO->getClass($module, 'RptTotal');
        $report = new RptTotal($dados);

    }
}

?>
