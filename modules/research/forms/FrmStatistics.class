<?php

/**
 * Inscription form
 *
 * @author Hélio Henrique Rodrigues Guimarães [helio@solis.coop.br]
 *
 * @version: $Id$
 * 
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * Rafael Luís Spengler [rafael@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 *
 * @since
 * Class created on 05/07/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html)
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br/
 *
 **/

/**
 * Form to manipulate a selectiveProcessOccurrence
 **/
class FrmStatistics extends MForm
{
    var $formId;
    /**
     * Class constructor
     **/
    function __construct()
    {
        $MIOLO    = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        parent::__construct(_M('Statistics of institutional evaluation',$module));

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        set_time_limit(0);

        $MIOLO    = MIOLO::getInstance();
        $module   = MIOLO::getCurrentModule();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_request('function');
        $event    = MIOLO::_request('event');

        if ( is_null($this->getFormValue('periodId')) || strlen((string)$this->getFormValue('periodId')) == 0 )
        {
            $periodIdValue = CURRENT_PERIOD_ID;
        }
        else
        {
            $periodIdValue = $this->getFormValue('periodId');
        }

        $businessPeriod = $MIOLO->getBusiness('academic','BusPeriod');
        $periodId       = new MSelection('periodId', $periodIdValue, _M('Period','academic'), $businessPeriod->listPeriod(), true );
        $periodId->SetAutoPostback(true);
        $fields[]       = $periodId;

        if ( strlen((string)$periodIdValue)>0 )
        {
            $businessForm = $MIOLO->getBusiness('research','BusForm');
            $formId       = new MSelection('formId', $this->getFormValue('formId'), _M('Form','research'), $businessForm->listForm(), true );
            $formId->SetAutoPostback(true);
            $fields[]     = $formId;
        }

        $fields[] = new Separator('');

        $this->setFields($fields);
        //$this->setValidators($validators);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setShowPostButton(false);
        $this->setClose($MIOLO->getActionURL($module, substr($action, 0, strrpos($action, ':'))));

        if ( strlen((string)$this->getFormValue('formId'))>0 )
        {
            $busTotal = $MIOLO->getBusiness('research','BusInstitutionalEvaluation');
            $data     = $busTotal->getStatistics($this->getFormValue('periodId'), $this->getFormValue('formId'));

            $grdResults = $MIOLO->getUI()->getGrid($module,'GrdStatistics', $filters);
            $grdResults->setData($data);

            $this->addField($grdResults);
        }
    }

}

?>
