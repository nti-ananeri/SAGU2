<?php

/**
 * Research process handler.
 * Contains the menus to access process submenus
 *
 * @author Gustavo Bremm [gsbremm@ftec.com.br]
 *
 * @version $Id$
 *
 * \b Maintainers: \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Gustavo Scarantti Bremm [gsbremm@ftec.com.br]
 * Detley de Oliveira [ddocolombo@ftec.com.br]
 *
 * @since
 * Class created on 24/01/2006
 *
 * \b Organization: \n
 * SOLIS - Cooperativa de Solucoes Livres \n
 * The SAGU2 Development Team
 *
 * \b CopyLeft: \n
 * CopyLeft (L) 2005 SOLIS - Cooperativa de Solucoes Livres \n
 *
 * \b License: \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History: \n
 * See history in CVS repository: http://sagu.solis.coop.br
 *
 **/


/**
 * Form to search the basCountry table
 */
class FrmFormSearch extends MForm
{
    private $module;
    private $home;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;
        
        $this->home = $data->home;

        parent::__construct(_M('Search', $module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');

        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Form', $this->home, 'form-16x16.png', true);
        }
        //fim favoritos

        $fields[] = $toolBar;

        $formIdS = new MTextField('formIdS', $this->formIdS->value, _M('Form id', $module), 10);
        $formIdS->setJsHint(_M('Enter the form code', $module));
        $fields[] = $formIdS;

        $formDescriptionS = new MTextField('formDescriptionS', $this->formDescriptionS->value, _M('Description', $module), FIELD_DESCRIPTION_SIZE);
        $formDescriptionS->setJsHint(_M('Enter the form description', $module));
        $fields[] = $formDescriptionS;

        $shortDescriptionS = new MTextField('shortDescriptionS', $this->shortDescriptionS->value, _M('Short description', $module), 20);
        $shortDescriptionS->setJsHint(_M('Enter the form short description', $module));
        $fields[] = $shortDescriptionS;
       
     	$fields[] = new MSeparator();
     	
        $isIdentifiedLabelS = new MText('isIdentifiedLabelS', _M('Is Identified',$module) . '?');
        $isIdentifiedLabelS->setWidth(FIELD_CONTAINER_SIZE);
        $flds[] = $isIdentifiedLabelS;
    
        $isIdentifiedOptionsS = SAGU::listYesNo(1);

        $isIdentifiedS = new MRadioButtonGroup('isIdentifiedS', '', $isIdentifiedOptionsS, $data->isIdentifiedS, null, 'horizontal');
        $isIdentifiedS->setShowLabel(false);
        $flds[] = $isIdentifiedS;
        
        $hctIsIdentifiedS = new MHContainer('hctIsIdentifiedS', $flds);
        $hctIsIdentifiedS->setShowLabel(false);
        $fields[]  = $hctIsIdentifiedS;
        unset($flds); 
	
    	$fields[] = new MSeparator();

        //trocar esse btnsearch por um que faz o linkbutton
        $fields[] = new MButton('btnSearch', _M('Search', $module));

	
        $this->setFields($fields);

        // get filters values
        $filters->formId           = $this->formIdS->value;
        $filters->description      = $this->formDescriptionS->value;
        $filters->shortDescription = $this->shortDescriptionS->value;
        $filters->isIdentified     = $this->isIdentifiedS->value;
        $grdResults                = $MIOLO->getUI()->getGrid($module,'GrdFormSearch', $filters);
        $business                  = $this->manager->getBusiness($module,'BusForm');
        $data                      = $business->searchForm($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.formIdS.focus();');
        }
        
        $this->setLabelWidth(FIELD_LABEL_SIZE);
    }
}

?>
