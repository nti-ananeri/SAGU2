<?php

/**
 *
 * This file handles the connection and actions for rshOption table
 *
 * @author Armando Taffarel Neto [taffarel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * Armando Taffarel Neto [taffarel@solis.coop.br]
 * 
 * @since
 * Class created on 18/01/2007
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Form to search the basCountry table
 */
class FrmOptionSearch extends MForm
{
    private $module;
    private $home;

    /**
     * Class constructor
     */
    function __construct($data)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $this->module = $module;
        
        $this->home = $data->home;

        parent::__construct(_M('Search', $module));

        // hide the 'Submit' button
        $this->setShowPostButton(false);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();
    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();
        $action = MIOLO::getCurrentAction();

        $toolBar = new MToolBar('toolBar',$MIOLO->getActionURL($module,$action));
//        $toolBar->disableButton('tbBtnSearch');
        $toolBar->disableButton('tbBtnSave');
        $toolBar->disableButton('tbBtnDelete');
//        $toolBar->disableButton('tbBtnPrint');
        
        //favoritos
        $enabledImage  = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-20x20.png');
        $disabledImage = $MIOLO->getUI()->GetImageTheme($MIOLO->theme->id, 'bookmark-disabled-20x20.png');
        $url           = $MIOLO->getActionURL($module, $this->home, null, array('function' => 'search', 'event' => 'bookmark'));
        $toolBar->addButton('tbBtnBookmark', _M('Add to bookmarks', 'basic'), $url, null, true, $enabledImage, $disabledImage);

        if ( MIOLO::_request('event') == 'bookmark' )
        {
            $MIOLO->getClass('basic', 'access');
            access::insert('Option', $this->home, 'option-16x16.png', true);
        }
        //fim favoritos
        
        $fields[] = $toolBar;

        $optionIdS = new MTextField('optionIdS', $this->optionIdS->value, _M('Option id', $module), FIELD_ID_SIZE);
        $optionIdS->setJsHint(_M('Enter the option id', $module));
        $fields[]  = $optionIdS;

        $business = $MIOLO->GetBusiness($module, 'BusForm');
        $formId_  = new MSelection('formIdS', $this->getFormValue('formIdS', $data->formIdS), _M('Form',$module), $business->listForm());
        $formId_->setAutoPostBack(true);
        $fields[] = $formId_;

        if ( strlen((string)$this->getFormValue('formIdS', $data->formIdS))>0 )
        {
            $business    = $MIOLO->GetBusiness($module, 'BusQuestion');
            $questionIdS = new MComboBox('questionIdS', $this->getFormValue('questionIdS', $data->questionIdS), _M('Question',$module), $business->listQuestion());
            $fields[]    = $questionIdS;
        }

        $optionDescriptionS = new MTextField('optionDescriptionS', $this->optionDescriptionS->value, _M('Description', $module), FIELD_DESCRIPTION_SIZE);
        $optionDescriptionS->setJsHint(_M('Enter description of option', $module));
        $fields[] = $optionDescriptionS;

        $this->setFields($fields);

        //trocar esse btnsearch por um que faz o linkbutton
        $fields[] = new MButton('btnSearch', _M('Search', $module));

        $this->setFields($fields);

        $business   = $MIOLO->getBusiness($module,'BusOption');

        // get filters values
        $filters->optionId      = $this->optionIdS->value;
        $filters->questionId    = $this->questionIdS->value;
        $filters->description   = $this->optionDescriptionS->value;
        $filters->formId        = $this->formIdS->value;
        
    	$grdResults = $MIOLO->getUI()->getGrid($module,'GrdOptionSearch', $filters);
        $business   = $this->manager->getBusiness($module,'BusOption');
        $data       = $business->searchOption($filters);
        $grdResults->setData($data);
        $this->addField($grdResults);
        if ( $this->isSubmitted() )
        {
            $this->page->onLoad('document.' . $this->name . '.optionIdS.focus();');
        }
        $this->setLabelWIdth(FIELD_LABEL_SIZE);        

    }
}

?>
