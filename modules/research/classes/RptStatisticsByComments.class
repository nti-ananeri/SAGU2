<?php

/**
 * Default defines 
 * To report identification
 */
$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();

define('REPORT_ID', 'RSH004'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $periodId = 0;

    /**
     * Defines the footer for this report
     */
     public function Footer()
     {
         $module = MIOLO::getCurrentModule();
         $this->setY(-15);
         $pn = $this->PageNo().'/{nb}';
         $this->cell(190, 1, '', 'B', 1);
         $this->ln();
 
         $this->setFont(DEFAULT_REPORT_FONT, 'I', 8);
         $this->cell(50, 4, $text, 0, 0);
         $this->cell(140, 4, _M('REPORT @1 ', $module, REPORT_ID).' '._M('Page @1', $module, $pn), 0, 0, 'R');
         $this->ln();
     }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();


        $business = $MIOLO->getBusiness('basic', 'BusCompany');
        $company  = $business->getCompany(DEFAULT_COMPANY_CONF);

        $this->ln();

        $this->image(SAGUFile::getPhotoPath($company->personId), 170, null, null, null, PHOTO_FORMAT);
        $this->setFont(DEFAULT_REPORT_FONT, 'B', 24);
        //$this->cell(190, 8, _M('TOTAL', $module), 8, 'BLRT','C');

        //$this->ln();
        //$this->ln();
    }
}


/**
 * PDF extension to generate report
 */
class RptStatisticsByComments
{
    /**
     * Method to generate the report
     */
    public function RptStatisticsByComments($data = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $this->pdf = new PDF();
        $this->pdf->aliasNbPages();

        //percorre os dados imprimindo eles no relatório
        if ( count($data) > 0 )
        {
            for ( $x=0; $x<count($data); $x++ )
            {

                if ( $x > 0 )
                {
                    list ( $oldQuestionId,
                           $oldQuestionDescription,
                           $oldComment,
                           $oldCourseId,
                           $oldCourseVersion,
                           $oldCourseName ) = $data[$x-1];
                }

                list ( $questionId,
                       $questionDescription,
                       $comment,
                       $courseId,
                       $courseVersion,
                       $courseName ) = $data[$x];

                if ( $courseId != $oldCourseId || $courseVersion != $oldCourseVersion  )
                {
                    $this->pdf->addPage('P', 'mm', 'A4');
                    $this->pdf->setY(120);
                    $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 20);
                    $this->pdf->MultiCell(190, 5, $courseId . '/' . $courseVersion . ' - ' . $courseName, 0, 'C');
                    $this->pdf->ln();
                    $this->pdf->addPage('P', 'mm', 'A4');
                }

                if ( $questionId != $oldQuestionId )
                {
                    $totalGeralUsado = $totalGeral;
                    $this->pdf->ln();
                    $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 8);
                    $this->pdf->cell(5, 5, '', '', 0, 'L');
                    $this->pdf->MultiCell(185, 5, $questionDescription, 0, 'L');
                }

                $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 8);
                $this->pdf->cell(5, 5, '', '', 0, 'L');
                $this->pdf->MultiCell(185, 5, $comment, 0, 'L');

            }
        }

        $this->pdf->close();
        $this->pdf->output();
    }

}

?>
