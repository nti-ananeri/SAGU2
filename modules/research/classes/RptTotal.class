<?php

/**
 * Default defines 
 * To report identification
 */
$MIOLO  = MIOLO::getInstance();
$module = MIOLO::getCurrentModule();

define('REPORT_ID', 'RSH001'); 
define('FPDF_FONTPATH', $MIOLO->getModulePath('basic', '/classes/fpdf/font/'));

$MIOLO->Uses('classes/fpdf/fpdf.php', 'basic');

/**
 * Create header and footer information
 */
class PDF extends FPDF
{
    var $type = 0;
    var $periodId = 0;

    /**
     * Defines the footer for this report
     */
     public function Footer()
     {
         $module = MIOLO::getCurrentModule();
         $this->setY(-15);
         $pn = $this->PageNo().'/{nb}';
         $this->cell(190, 1, '', 'B', 1);
         $this->ln();
 
         $this->setFont(DEFAULT_REPORT_FONT, 'I', 8);
         $this->cell(50, 4, $text, 0, 0);
         $this->cell(140, 4, _M('REPORT @1 ', $module, REPORT_ID).' '._M('Page @1', $module, $pn), 0, 0, 'R');
         $this->ln();
     }

    /**
     * Defines the header for this report
     */
    public function Header()
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();


        $business = $MIOLO->getBusiness('basic', 'BusCompany');
        $company  = $business->getCompany(DEFAULT_COMPANY_CONF);

        $this->ln();

        $this->image(SAGUFile::getPhotoPath($company->personId), 170, null, null, null, PHOTO_FORMAT);
        $this->setFont(DEFAULT_REPORT_FONT, 'B', 24);
        $this->cell(190, 8, _M('TOTAL', $module), 8, 'BLRT','C');

        $this->ln();
        $this->ln();
    }
}


/**
 * PDF extension to generate report
 */
class RptTotal
{
    /**
     * Method to generate the report
     */
    public function RptTotal($data = null)
    {
        $MIOLO  = MIOLO::getInstance();
        $module = MIOLO::getCurrentModule();

        $this->pdf = new PDF();
        $this->pdf->aliasNbPages();
        $this->pdf->addPage('P', 'mm', 'A4');

        //busca a classe
        $business = $MIOLO->getBusiness('research', 'BusTotal');

        //esecuta a função que joga a listagem na variável $dados
        $dados    = $business->listQuestion($data->formId);

        //percorre os dados imprimindo eles no relatório
        if ( count($dados) > 0 )
        {
            foreach ( $dados as $linha )
            {
                $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 16);
                $this->pdf->cell(190, 10, $linha[2], 'B', 0, 'L');
                $this->pdf->ln();

                $this->pdf->setFont(DEFAULT_REPORT_FONT, 'B', 14);
                $this->pdf->cell(20, 10, _M('Total', $module), 0, 0, 'C');
                $this->pdf->cell(170, 10, _M('Option', $module), 0, 0, 'L');
                $this->pdf->ln();

                $dados2 = $business->listTotalQuestion($linha[1], $data->selectiveProcessId);
                if ( count($dados2) > 0 )
                {
                    foreach ( $dados2 as $linha2 )
                    {
                        $this->pdf->setFont(DEFAULT_REPORT_FONT, '', 12);
                        $this->pdf->cell(20, 10, $linha2[0], 0, 0, 'C');
                        $this->pdf->cell(170, 10, $linha2[1], 0, 0, 'L');
                        $this->pdf->ln();
                    }
                }

                if ( $data->showComments == DB_TRUE )
                {
                    $comments = $business->listQuestionComments($linha[1], $data->selectiveProcessId);

                    $this->pdf->setFont(DEFAULT_REPORT_FONT, 'IB', 12);
                    if ( count($comments)>0 )
                    {
                        $this->pdf->cell(20, 8, _M('Comments', $module) . ':', 0, 0, 'L');
                        $this->pdf->ln();
                        $this->pdf->setFont(DEFAULT_REPORT_FONT, 'I', 10);
                        foreach ( $comments as $comment )
                        {
                            $this->pdf->multicell(190, 4, '    ' . $comment[0]);
                        }
                    }
                }

                $this->pdf->ln();
                $this->pdf->ln();
            }
        }

        $this->pdf->close();
        $this->pdf->output();
    }

}

?>
