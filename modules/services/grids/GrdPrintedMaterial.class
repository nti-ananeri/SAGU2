<?php

class myMGridActionIcon extends MGridActionIcon
{
    var $onclick;
    
    function generate( )
    {
        $control = parent::generate( );
        
        if ( $this->enabled  )
        {
            $control->addAttribute('onclick', $this->onclick);
            if ( ! $this->href )
            {
                $control->location = '';
            }
        }
        return $control;
    }
}


/**
 * Grid used by form to display search results
 **/
class GrdPrintedMaterial extends MGrid
{
    var $formData;
    
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO          = MIOLO::getInstance();
        $home           = 'main:professor:printedMaterial';
        $this->formData = $filters;

        if ( ACADEMIC_REGISTER_LAYER_INDIVIDUAL == 'YES' )
        {
            $columns = array ( 
                              new MGridColumn( _M('Group id', 'services'),          'left', true, null, false,  null, false),
                              new MGridColumn( _M('Curricular component', 'services'), 'left', true, null, true,  null, false),
                              new MGridColumn( _M('Course', 'services'),            'left', true, null, true,  null, false),
                              new MGridColumn( _M('Turn id', 'services'),           'left', true, null, false, null, false),
                              new MGridColumn( _M('Turn', 'services'),              'left', true, null, true,  null, false),
                              new MGridColumn( _M('Unit id', 'services'),           'left', true, null, false, null, false),
                              new MGridColumn( _M('Unit', 'services'),              'left', true, null, true,  null, false),
                              new MGridColumn( _M('Week day', 'services'),          'left', true, null, true,  null, false),
                              new MGridColumn( _M('Schedule', 'services'),          'left', true, null, true,  null, false),
                              new MGridColumn( _M('Schedule id', 'services'),       'left', true, null, false,  null, false),
                              new MGridColumn( _M('Is closed', 'services'),         'left', true, null, false, null, false),
                              new MGridColumn( _M('Class id', 'academic'),          'left', true, null, false,  null, false),
                              new MGridColumn( _M('Class', 'academic'),             'left', true, null, true,  null, false)
                            );
        }
        elseif ( ACADEMIC_REGISTER_LAYER_INDIVIDUAL == 'NO' )
        {
            $columns = array ( 
                              new MGridColumn( _M('Group id', 'services'),          'left', true, null, false,  null, false),
                              new MGridColumn( _M('Curricular component', 'services'), 'left', true, null, true,  null, false),
                              new MGridColumn( _M('Course', 'services'),            'left', true, null, true,  null, false),
                              new MGridColumn( _M('Unit id', 'services'),           'left', true, null, false, null, false),
                              new MGridColumn( _M('Unit', 'services'),              'left', true, null, true,  null, false),
                              new MGridColumn( _M('Is closed', 'services'),         'left', true, null, false, null, false),
                              new MGridColumn( _M('Class id', 'academic'),          'left', true, null, false,  null, false),
                              new MGridColumn( _M('Class', 'academic'),             'left', true, null, true,  null, false)
                            );
        }

        parent::__construct( null, $columns, $url, 0/*LISTING_NREGS*/, 0, 'GridPrintedMaterial' );

       
        /*$this->addActionIcon(_M('Attendance list', 'academic'), 'select.png', $url_group);
        $this->addActionIcon(_M('Acts', 'academic'), 'select.png', $url_group2);
        $this->addActionIcon(_M('Lessons content', 'academic'),   'select.png', $url_group3);*/
        $menuItem = array (
                array( _M('Signature list', 'academic'), 'signatureList-16x16.png', "$home:signatureList"),
                array( _M('Call list', 'academic'), 'callList-16x16.png', "$home:callList"),
                array( _M('Grades and absence roster report', 'academic'), 'gradesType-16x16.png', "$home:gradesAndAbsenceRoster"),
                array( _M('Minutes of evidence replacement', 'academic'), 'substitutiveNote-16x16.png', "$home:replacementNote"),
                array( _M('Signature list for @1', 'services', _M('Final examination', 'academic')), 'degree-16x16.png', "$home:signatureListFinalMinuteReview"),
                array( _M('Lessons content', 'academic'), 'content-on.png', "$home:lessonsContent"),
                array( _M('Lista de chamada diaria', 'academic'), 'callList-16x16.png', "$home:dailyCallList")
        );
        foreach ( $menuItem as $id => $icon )
        {
            $this->addActionIcon( $icon[0], $MIOLO->getUi()->getImage('services', (string)$icon[1]), $MIOLO->getActionUrl('services',$icon[2]).'&groupId=%0%&professorId='.$filters->personId);
        }
        
        $this->linktype = 'hyperlink';
        $this->setRowMethod('GrdPrintedMaterial', 'myRowMethod');
        
        $this->eventHandler();
        
    }
   /**
    * Function to handle the before each row creation
    */
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();
        if ( ACADEMIC_REGISTER_LAYER_INDIVIDUAL == 'YES' )
        {
        }
        elseif ( ACADEMIC_REGISTER_LAYER_INDIVIDUAL == 'NO' )
        {
        }
        if ( $row[8] == DB_FALSE )
        {
            $actions[3]->disable();
            $actions[3]->visibility = 'hidden';
        }
        
    }
}


?>
