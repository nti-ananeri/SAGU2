<?php

/**
 *
 * This file handles the connection and actions for finBank table
 *
 * @author William Prigol Lopes [william@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 22/12/2005
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Grid used by form to display search results
 **/
class GrdEntry extends MGrid
{
    /**
     * Class constructor
     **/
    function __construct($filters)
    {
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();
        
        $columns = array( new MGridColumn( null ),
                          new MGridColumn( _M('Entry id',              'services'), 'right',  true,  null, true, null, false),
                          new MGridColumn( ),
                          new MGridColumn( _M('Operation description', 'services'), 'left',   false, null, true, null, false),
                          new MGridColumn( _M('Operation date',        'services'), 'center', true,  null, true, null, false),
                          new MGridColumn( ),
                          new MGridColumn( _M('Value',                 'services'), 'right',  true,  null, true, null, false)
                        );

        $url = $MIOLO->getActionURL('services', $action, null, $opts);
        parent::__construct(null, $columns, $url, 0, 0, 'gridEntry', false, false);
        $this->setRowMethod('GrdEntry', 'myRowMethod');

        $this->setIsScrollable();
        $this->eventHandler();
    }

   /**
    * Function to handle the before each row creation
    */
    public function myRowMethod($i, $row, $actions, $columns )
    {
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();
        if (substr($row[3], 0, 1) == 'D')
        {
            $columns[3]->control[$i]->_addStyle('color', 'red');
        }
        elseif (substr($row[3], 0, 1) == 'C')
        {
            $columns[3]->control[$i]->_addStyle('color', 'blue');
        }
        
    }
}
?>
