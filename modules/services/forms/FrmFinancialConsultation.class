<?php
/**
 *
 * This file is a report to pupils or employes from the respective financial situation
 *
 * @author Daniel Afonso Heisler [daniel@solis.coop.br]
 *
 * $version: $Id$
 *
 * \b Maintainers \n
 * Alexandre Heitor Schmidt [alexsmith@solis.coop.br]
 * Daniel Afonso Heisler [daniel@solis.coop.br]
 * Jamiel Spezia [jamiel@solis.coop.br]
 * William Prigol Lopes [william@solis.coop.br]
 * 
 * @since
 * Class created on 15/09/2006
 *
 * \b @organization \n
 * SOLIS - Cooperativa de Soluções Livres \n
 * The Sagu2 development team
 *
 * \b Copyleft \n
 * Copyleft (L) 2005 - SOLIS - Cooperativa de Soluções Livres \n
 *
 * \b License \n
 * Licensed under GPL (for further details read the COPYING file or http://www.gnu.org/copyleft/gpl.html )
 *
 * \b History \n
 * See history in CVS repository: http://sagu.solis.coop.br   
 *
 **/

/**
 * Report to show pupils ou employees financial situations
 */
class FrmFinancialConsultation extends MForm
{
    private $home;
    private $module;
    private $personId;

    /**
     * Class constructor
     */
    function __construct($data)
    {
    
        $MIOLO  = MIOLO::getInstance();

        $this->module   = 'services';
        $this->home     = $data->home;
        $this->personId = $data->personId;

        parent::__construct(_M('Financial consultation', 'services'));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();

        $businesPerson = $MIOLO->GetBusiness('basic', 'BusPerson');
        $person        = $businesPerson->getPerson($this->personId);

        $flds[] = new MText('txt1', _M('Person', 'services') . ': ' . $person->personId . ' - ' . $person->name);

        $bsg            = new BaseGroup('bsg', _M('Person invoices', 'services'), $flds, 'vertical');
        $bsg->showLabel = true;
        $bsg->width     = '100%';
        unset($flds);

        $this->setFields($bsg);

        // get filters values
        $filters->personId = $this->personId;
        $filters->home     = $this->home;

        $grdResults = $MIOLO->getUI()->getGrid('services', 'GrdFinancialConsultation', $filters);
        $business   = $this->manager->getBusiness('services', 'BusFinance');
        $data       = $business->getFinancialConsultation($filters->personId);
        $grdResults->setData($data);

        is_array($data) ? $grdResults->SetScrollHeight(GRID_SCROLL_HEIGHT) : false;

        $this->addField($grdResults);
        $this->setLabelWidth(FIELD_LABEL_SIZE);

    }

}

?>
