<?php

class FrmContent extends MForm
{
    private $home;

    /**
     * Class constructor
     **/
    function __construct($data)
    {
        $this->home = $data->home;
        parent::__construct(_M('Add content', 'services') . ': ' . $_GET['occurrenceDate']);
        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());
        $this->eventHandler();
    }

    /**
     * Default method to define fields
     **/
    public function createFields()
    {
        $MIOLO    = MIOLO::getInstance();
        $action   = MIOLO::getCurrentAction();
        $academicCalendarId = MIOLO::_REQUEST('academicCalendarId');
        $scheduleId         = MIOLO::_REQUEST('scheduleId');
        $occurrenceDate     = MIOLO::_REQUEST('occurrenceDate');
        $turnId             = MIOLO::_REQUEST('turnId');

        $mioloUserName = trim($MIOLO->getLogin()->id);
        $busPerson     = $MIOLO->getBusiness('basic', 'BusPerson');

        //se for um usuário do sistema logado
        if ( strlen((string)$mioloUserName) >  0 )
        {
            $personData       = $busPerson->getPersonByMioloUserName($mioloUserName);
        }
        else //caso for um aluno
        {
            $personData->personId = $MIOLO->session->getValue('loginUid');
        }

        $fields[] = new MHiddenField('scheduleId', $scheduleId);
        $fields[] = new MHiddenField('occurrenceDate', $occurrenceDate);
        $fields[] = new MHiddenField('turnId', $turnId);

        $businessEnroll = $MIOLO->getBusiness('academic', 'BusFrequenceEnroll');
        $content2       = $businessEnroll->getFrquenceContent($scheduleId, $occurrenceDate, $turnId);

        $fields[]     = new MMultiLineField('content', $this->getFormValue('content', $content2->content), _M('Content', 'services') . ' (' .  $_GET['occurrenceDate'] . ')', 100, 4, 80);
        $validators[] = new MRequiredValidator('content', _M('Content', 'services'));

        $fields[]  = new MSeparator();
        $fields2[] = new MButton('btnSave', _M('Save', 'services'));
        $fields2[] = new MButton('btnClose', _M('Back', 'services'), "self.close()");
        $fields[]  = new MHContainer('hctBtn', $fields2);

        if ( isset($validators) )
        {
            $this->setValidators($validators);
        }
        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);
        $this->setClose($MIOLO->getActionURL('services', substr($action, 0, strrpos($action, ':'))));
        $this->setShowPostButton(false);
        $this->page->onLoad('document.' . $this->name . '.content.focus();');

    }

    public function btnSave_click($sender=NULL)
    {
        $MIOLO    = MIOLO::getInstance();
        $action   = MIOLO::getCurrentAction();
        $function = MIOLO::_REQUEST('function');

        $fields[] = new MHiddenField('scheduleId', $scheduleId);
        $fields[] = new MHiddenField('occurrenceDate', $occurrenceDate);
        $fields[] = new MHiddenField('turnId', $turnId);

        $data->content        = $this->content->value;
        $data->scheduleId     = $this->scheduleId->value;
        $data->occurrenceDate = $this->occurrenceDate->value;
        $data->turnId         = $this->turnId->value;

        $businessEnroll = $MIOLO->getBusiness('academic', 'BusFrequenceEnroll');
        $content2       = $businessEnroll->getFrquenceContent($data->scheduleId, $data->occurrenceDate, $data->turnId);

        if ( strlen((string)$content2->occurrenceDate)>0 )
        {
            $businessEnroll->updateFrequenceContent($data);
        }
        else
        {
            $businessEnroll->insertFrequenceContent($data);
        }

        //fechar a janela
        $this->page->addJsCode("this.close();");
    }
}

?>
