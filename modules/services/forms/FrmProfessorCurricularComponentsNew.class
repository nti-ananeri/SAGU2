<?php
/**
 **/

/**
 * Report to show pupils ou employees financial situations
 */
class FrmProfessorCurricularComponentsNew extends MForm
{
    /**
     * Class constructor
     */
    function __construct()
    {
    
        $MIOLO  = MIOLO::getInstance();

        parent::__construct(_M('Curricular components', 'services'));

        // hide the 'Submit' button
        $this->setShowPostButton(false);

        $this->setHelp(get_class($this), MIOLO::getCurrentModule(), MIOLO::getCurrentAction());

        $this->eventHandler();

    }

    /**
     *  Default method to define fields
     */
    public function createFields()
    {
        $MIOLO  = MIOLO::getInstance();
        $action = MIOLO::getCurrentAction();

        $mioloUserName = trim($MIOLO->getLogin()->id);
        $busPerson     = $MIOLO->getBusiness('basic', 'BusPerson');

        //se for um usuário do sistema logado
        if ( strlen((string)$mioloUserName) >  0 )
        {
            $personData = $busPerson->getPersonByMioloUserName($mioloUserName);
        }
        else //caso for um aluno
        {
            $personData->personId = $MIOLO->session->getValue('loginUid');
        }

        $periodLabel   = new MText('periodLabel', _M('Period', 'services'));
        //$periodLabel->setWidth(FIELD_CONTAINER_SIZE);
        $periodLabel->setClass('m-caption m-caption-required');

        $periodId      = $this->getFormValue('selPeriodId', (strlen((string)MIOLO::_request('periodId')) > 0) ? MIOLO::_request('periodId') : CURRENT_PERIOD_ID);

        $busProfessor  = $MIOLO->getBusiness('services', 'BusProfessor');
        $periods       = $busProfessor->listProfessorPeriods($personData->personId);

        $selPeriodId   = new MSelection('selPeriodId', $periodId, null, $periods, true);
        $selPeriodId->setAutoSubmit(true);

        $viewFormLabel = new MText('viewForm', _M('Show as', 'services') . ':');
        //$viewFormLabel->setWidth(FIELD_CONTAINER_SIZE);
        $viewFormLabel->setClass('m-caption m-caption-required');
        $optionGroupId  = new MOption('opt3', 'groupId', _M('Offered curricular component', 'academic'), false); 
        $optionClass    = new MOption('opt2', DB_TRUE, _M('Class', 'academic'), false); 
        $optionFirst    = new MOption('opt1', DB_FALSE, _M('Schedule', 'academic') . 's', false); 
            
        //$viewFormData = array($optionFirst, $optionClass, $optionGroupId); //Disciplina oferecida
        $viewFormData = array($optionFirst, $optionGroupId); //Disciplina oferecida
//        $viewFormData = _M('Offered curricular component', 'academic');

        $viewForm      = new MRadioButtonGroup('viewForm', '', $viewFormData, $this->GetFormValue('viewForm', 'groupId'), null, 'horizontal');
        $viewForm->SetShowLabel(false);
        $viewForm->SetAutoPostBack(true);

        $hctBase       = new MHContainer('hctBase', array($periodLabel, $selPeriodId, $viewFormLabel, $viewForm));
        $hctBase->setShowLabel(false);
        $fields[]      = $hctBase;

        // get filters values
        unset($filters);
        $filters->periodId    = $periodId;
        $filters->professorId = $personData->personId;

        if ( $this->GetFormValue('viewForm') == DB_FALSE )
        {
            $grdResults = $MIOLO->getUI()->getGrid('services', 'GrdProfessorCurricularComponents', $filters);
            $data       = $busProfessor->listProfessorCurricularComponents($personData->personId, $periodId);
        }
        else if ( $this->getFormValue('viewForm', 'groupId') == 'groupId' )
        {
            $grdResults = $MIOLO->getUI()->getGrid('services', 'GrdProfessorCurricularComponents3', $filters);
            $data       = $busProfessor->listProfessorCurricularComponents3($personData->personId, $periodId);
        }
        else
        {
            $grdResults = $MIOLO->getUI()->getGrid('services', 'GrdProfessorCurricularComponents2', $filters);
            $data       = $busProfessor->listProfessorCurricularComponents2($personData->personId, $periodId);
        }
        $grdResults->setData($data);
        $fields[]   = $grdResults;

//        $lblCounter = new MLabel(_M('@1 records found.', 'services', count($data)));
//        $fields[] = $lblCounter;

        //estágios
        $data = $busProfessor->listProfessorCurricularComponentsSupervisedTraining($personData->personId, $periodId);
        if ( count($data)>0 )
        {
            $fields[]   = new MSeparator('<br><b>' . _M('Supervised training', 'academic') . ':</b></center>');
            $grdResults = $MIOLO->getUI()->getGrid('services', 'GrdProfessorCurricularComponentsSupervisedTraining', $filters);
            $grdResults->setData($data);
            $fields[]   = $grdResults;
        }
        $fields[] = new MSeparator();

        $this->setFields($fields);
        $this->setLabelWidth(FIELD_LABEL_SIZE);

    }

}

?>
