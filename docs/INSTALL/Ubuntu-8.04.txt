INSTALAÇÃO:
===========

Bibliotecas e programas necessarios
-----------------------------------
 # sudo apt-get install language-support-pt tclreadline rlwrap bison m4 flex libreadline5 libreadline5-dev libncurses5-dev zlibc zlib1g zlib1g-dev tk8.4 tk8.4-dev tcl8.4 tcl8.4-dev libice-dev libsm-dev libxt-dev gcc-4.2-locales gettext libjpeg62 libjpeg62-dev libjpeg62-dbg libpng12-dev libpng12-0 libfreetype6 libfreetype6-dev libttf2 libttf-dev libxpm-dev libfontconfig1-dev libexpat1-dev libgd2-xpm-dev auth-client-config ldap-auth-config libnss-ldap libpam-ldap ldap-utils ldaptor-utils libldap2-dev xvfb

Apache 2.2.11
-------------
 # cd /usr/local/src
 # tar -zxvf httpd-2.2.11.tar.gz
 # cd httpd-2.2.11
 # ./configure --enable-module=so --prefix=/usr/local/httpd-2.2.11 --enable-proxy-http --enable-proxy --enable-proxy-connect
 # make
 # sudo make install
 # cd ..

PostgreSQL 8.2.12
----------------
 # cd /usr/local/src
 # tar -zxvf postgresql-8.2.12.tar.gz
 # cd postgresql-8.2.12
 # ./configure --prefix=/usr/local/pgsql-8.2.12 --with-tcl --enable-nls
 # make
 # sudo make install
 # cd contrib/dblink
 # make
 # sudo make install
 # cd ../../../
 # sudo useradd postgres
 # sudo mkdir /usr/local/pgsql-8.2.12/data
 # sudo chown postgres /usr/local/pgsql-8.2.12/data
 # export LANG=pt_BR
 # export LC_ALL=pt_BR
 # sudo su postgres -c '/usr/local/pgsql-8.2.12/bin/initdb -D /usr/local/pgsql-8.2.12/data -E LATIN1'

PHP 5.2.9 (APACHE)
------------------
 # cd /usr/local/src
 # tar -zxvf php-5.2.9.tar.gz
 # cd php-5.2.9
 # ./configure --prefix=/usr/local/php-5.2.9 --with-apxs2=/usr/local/httpd-2.2.11/bin/apxs --with-pgsql=/usr/local/pgsql-8.2.12 --with-gettext=/usr/share/gettext --with-zlib --with-ldap=/usr --enable-sockets --with-gd=/usr --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr/lib --with-ttf=/usr --enable-gd-native-ttf --enable-gd-jis-conv
 # make
 # sudo make install
 # sudo cp php.ini-dist /usr/local/php-5.2.9/lib/php.ini
 # cd ..
 OBS: Editar o arquivo /usr/local/php-5.2.9/lib/php.ini e trocar as linhas:

        extension_dir = "./"
      por:
        extension_dir = "/usr/local/php-5.2.9/lib"

        short_open_tag = Off
      por:
        short_open_tag = On



PHP 5.2.9 (BASH)
----------------
 # cd /usr/local/src
 # cd php-5.2.9
 # ./configure --prefix=/usr/local/php-5.2.9 --with-pgsql=/usr/local/pgsql-8.2.12 --with-gettext=/usr/share/gettext --with-zlib --with-ldap=/usr --enable-sockets --with-gd=/usr/lib --with-freetype-dir=/usr/lib --with-png-dir=/usr/lib --with-jpeg-dir=/usr/lib --with-ttf=/usr-lib --enable-gd-native-ttf --enable-gd-jis-conv --with-xpm-dir=/usr/lib 
 # make
 # sudo make install
 # cd ..

PHP 4.4.9 (APACHE)
------------------
 # cd /usr/local/src
 # tar -zxvf php-4.4.9.tar.gz
 # cd php-4.4.9
 # ./configure --prefix=/usr/local/php-4.4.9 --with-apxs2=/usr/local/httpd-2.2.11/bin/apxs --with-pgsql=/usr/local/pgsql-8.2.12 --with-gettext=/usr/share/gettext --with-zlib --with-ldap=/usr --enable-sockets --with-gd=/usr --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr/lib --with-ttf=/usr --enable-gd-native-ttf --enable-gd-jis-conv
 # make
 # sudo make install
 # sudo cp php.ini-dist /usr/local/php-4.4.9/lib/php.ini
 # cd ..
 OBS: Editar o arquivo /usr/local/php-4.4.9/lib/php.ini e trocar a linha:
        extension_dir = "./"
      por:
        extension_dir = "/usr/local/php-4.4.9/lib"
      e:
        register_globals = Off
      por:
        register_globals = On

PHP 4.4.9 (BASH)
----------------
 # cd /usr/local/src
 # tar -zxvf php-4.4.9.tar.gz
 # cd php-4.4.9
 # ./configure --prefix=/usr/local/php-4.4.9 --with-pgsql=/usr/local/pgsql-8.2.12 --with-gettext=/usr/share/gettext --with-zlib --with-ldap=/usr --enable-sockets --with-gd=/usr --with-freetype-dir=/usr --with-png-dir=/usr --with-jpeg-dir=/usr/lib --with-ttf=/usr --enable-gd-native-ttf --enable-gd-jis-conv
 # make
 # sudo make install
 # cd ..

PHP GTK 2
---------
 # sudo  su -
 # cd /usr/local/src
 # tar -zxvf php-gtk-2.0.1.tar.gz
 # cd php-gtk-2.0.1
 # export PATH=$PATH:/usr/local/php-2.5.6/bin
 # apt-get install glib2.0-dev libgtk2.0-dev libglade2-dev libgladeui-1-dev glade-gnome libgtkhtml2-dev libgdk-pixbuf2 libgdk-pixbuf-dev libgnomedb3-glade3 libgtkextra-dev libgtkextra-x11-2.0-dev libbz2-dev glade-3
 # ./buildconf --with-phpize=/usr/local/php-5.2.9/bin/phpize
 # ./configure --with-php-config=/usr/local/php-5.2.9/bin/php-config --with-extra --with-gnu-ld 
 # make
 # make install
 # ln -s  /usr/local/php-5.2.9/lib/php/extensions/no-debug-non-zts-20060613/php_gtk2.so /usr/local/php-5.2.9/lib/

PHP GTK
-------
 # sudo  su -
 # apt-get install glib2.0-dev libgtk2.0-dev libglade2-dev libgladeui-1-dev glade-gnome libgtkhtml2-dev libgdk-pixbuf2 libgdk-pixbuf-dev libgnomedb3-glade3 libgtkextra-dev libgtkextra-x11-2.0-dev libbz2-dev glade-3 gnome-devel libxml1 libstdc++6.4.1-dev 
 # cd /usr/local/src
 # tar -zxvf libxml-1.8.17.tar.gz 
 # cd libxml-1.8.17
 # ./configure --prefix=/usr/local/libxml-1.8.17
 # make
 # make install
 # export PATH=$PATH:/usr/local/libxml-1.8.17/bin/xml-config 
 # cd..
 # tar -zxvf libglade-0.17.tar.gz
 # cd libglade-0.17
 # ./configure --prefix=/usr/local/libglade-0.17

 # cd /usr/local/src
 # tar -zxvf php-gtk-1.0.2.tar.gz
 # cd php_gtk-1.0.2
 # export PATH=$PATH:/usr/local/php-4.4.9/bin
 # ./buildconf --with-phpize=/usr/local/php-4.4.9/bin/phpize

 # dpkg -i /usr/local/src/libglade0-dev_0.17-5_i386.deb 
 # ./configure --with-php-config=/usr/local/php-4.4.9/bin/php-config --with-extra --with-gnu-ld 
 # make
 # make install
 # ln -s  /usr/local/php-4.4.9/lib/php/extensions/no-debug-non-zts-20060613/php_gtk2.so /usr/local/php-4.4.9/lib/000


CONFIGURAR APACHE COM PHP4 E PHP5
---------------------------------
 # cd /usr/local/httpd-2.2.11/conf
 # sudo cp httpd.conf httpd.conf-php4
 OBS: No httpd.conf deixar habilitado somente o php5 no LoadModule e no httpd.conf-php4 fazer o mesmo para o php4
 OBS: Nos dois httpd.confs deve ser incluído a interpretação de arquivos .php como um programa php. Isso é conseguido através do acréscimo da linha: AddType application/x-httpd-php .php .phtml
 OBS: Nos dois httpd.confs deve ser incluído o arquivo inicial da página como sendo não só html, mas também php. Isso faz-se através da modificação da linha: DirectoryIndex index.html, para: DirectoryIndex index.html index.php
 OBS: Nos dois httpd.confs deve ser habilitada a linha com a inclusão dos default settings através da linha: Include conf/extra/httpd-default.conf
 OBS: No httpd.conf deve ser incluso os hosts do php5 através da linha: Include conf/extra/httpd-vhosts.conf
 OBS: No httpd.conf-php4 deve ser incluso os hosts do php4 através da linha: Include conf/extra/httpd-vhosts.conf-php4
 OBS: O arquivo extra/httpd-vhosts.conf deve ser copiado para extra/httpd-vhosts.conf-php4
 OBS: O arquivo extra/httpd-default.conf deve ter acrescido no final a linha: AddDefaultCharset ISO-8859-1
 OBS: No arquivo extra/httpd-vhosts.conf deve ser criado o virtualhost do sagu2 através da adição das linhas:
   <VirtualHost *:80>
       ServerAdmin root@Messier87
       DocumentRoot "/usr/local/sagu2/html"
       ServerName sagu2local
       ErrorLog "logs/sagu2-error.log"
       CustomLog "logs/sagu2-custom.log" common
   </VirtualHost>
   <Directory "/usr/local/sagu2/html">
       AllowOverride All
       Options FollowSymLinks
       Order allow,deny
       Allow from all
   </Directory>
 OBS: O php4 vai rodar na porta 88, assim o httpd.conf-php4 e no extra/httpd-vhosts.conf-php4 deve ter alterado usas portas de 80 para 88. Verifcar todas ocorrências de 80 e trocar por 88.
 OBS: No arquivo extra/httpd-vhosts.conf-php4 deve ser criado o virtualhost do sagugnuteca através da adição das linhas:
   <VirtualHost *:88>
       ServerAdmin root@Messier87
       DocumentRoot "/usr/local/gnuteca/html"
       ServerName gnutecalocal
       ErrorLog "logs/gnuteca-error.log"
       CustomLog "logs/gnuteca-custom.log" common
   </VirtualHost>
   <Directory /usr/local/gnuteca/html>
      AllowOverride All
      Options FollowSymLinks
      Order allow,deny
      Allow from all
   </Directory>

 OBS: Adicionar ao /ect/hosts do servidor as linhas:
   127.0.0.1 sagu2local
   127.0.0.1 gnutecalocal

CONFIGURAR INICIALIZAÇÃO:
-------------------------
 # sudo vim /etc/rc.local 
       # Apache 2.2.11 (PHP5) (P: 80)
       sudo /usr/local/httpd-2.2.11/bin/apachectl start
       # Apache 2.2.11 (PHP4) (P: 88)
       sudo /usr/local/httpd-2.2.11/bin/httpd -f /usr/local/httpd-2.2.11/conf/httpd.conf-php4 
       # PostgreSQL 8.2.12 (P: 5432)
       sudo su postgres -c '/usr/local/pgsql-8.2.12/bin/postgres -i -D /usr/local/pgsql-8.2.12/data &'
       exit 0

INSTALAR O GNUTECA E SAGU2
--------------------------
 # sudo mkdir /usr/local/svn
 # cd /usr/local/svn
 # sudo svn co http://svn.isolution.inf.br:81/sagu2/trunk sagu2
 # sudo svn co http://svn.isolution.inf.br:81/gnuteca/trunk gnuteca
 # sudo svn co http://svn.isolution.inf.br:81/agata/trunk agata
 # sudo svn co http://svn.isolution.inf.br:81/miolo/trunk miolo
 # sudo svn co http://svn.isolution.inf.br:81/miolo2/trunk miolo2
 # cd sagu2/tools
 # sudo sh criadir.sh (sagu2 instalado em /usr/local/sagu2)
 # cd ../..
 # cd gnuteca/tools
 # sudo sh criadir.sh (gnuteca instalado em /usr/local/gnuteca)
 OBS: Após isso, devem ser configurados os .conf do sagu2 e gnuteca

Locale
------
 É necessário adicionar a codificação "ISO-8859-1" e gerar novamente os locales do sistema. Para isso faça:
 # echo "pt_BR.ISO-8859-1 ISO-8859-1" >> /var/lib/locales/supported.d/pt
 # locale-gen
 # localedef -i pt_BR -c -f ISO-8859-1 pt_BR



ATE AQUI EU TESTEI





OpenOffice.org 2.0.0
--------------------
 # cd /usr/local/src
 # installpkg openoffice.org-2.0.0-pt_BR-noarch-1atn.tgz

Sagu2 RC5
---------
 # cd /usr/local/src
 # tar -zxvf sagu2_RC5.tar.gz
 # mv sagu2_RC5 /usr/local

CONFIGURAÇÕES:
==============

Apache 2.0.59
-------------
 # vim /etc/hosts
   > 127.0.0.1 sagu2local
 # vim /usr/local/httpd/conf/httpd.conf
   > NameVirtualHost 127.0.0.1:80
   > <VirtualHost sagu2local:80>
   >   ServerAdmin admin@server.org
   >   DocumentRoot /usr/local/sagu2_RC5/html
   >   ServerName sagu2local
   > </VirtualHost>
   > <Directory "/usr/local/sagu2_RC5/html">
   >     AllowOverride All
   >     Options FollowSymLinks
   >     Order allow,deny
   >     Allow from all
   > </Directory>


Se tiver proxy com redirecionamento pro fred:
   > <VirtualHost sagu2local:80>
   > ServerName sagu2local
   > ProxyPass / http://xxxx:8080/
   > ProxyPassReverse / http://fredxxx:8080/
   > </VirtualHost>

PostgreSQL 8.1.5
----------------
 # su postgres -c '/usr/local/pgsql/bin/postmaster -i -D /usr/local/pgsql/data' &
 # psql -Upostgres
   $ alter user postgres with password 'postgres';
   $ \q
 # vim /usr/local/pgsql/data/pg_hba.conf
   > local all  all  127.0.0.1/32      md5
   > host  all  all  192.168.100.0/24  md5
 # vim /usr/local/pgsql/data/postgresql.conf
   > enable_seqscan = false
   > add_missing_from = on

PHP 5.2.0
---------
 # vim /usr/local/php/lib/php.ini
 # terá uma variável chamada "error_reporting", apagar toda a referencia dela e colocar "E_ALL & ~E_NOTICE & ~E_WARNING"
 # se, ao acessar o sagu, for exibida uma tela solicitando o salvamento do index.php, alterar a variável memory_limit, aumentando a memória disponível para o php.

Sagu2 RC5
---------
 # cd /usr/local/sagu2_RC5/modules/basic/sql
 # sh install.sh
 # su postgres -c '/usr/local/pgsql/bin/pg_ctl stop -D /usr/local/pgsql/data' 
 Configurar o arquivo /usr/local/sagu2_RC5/etc/miolo.conf
 Configurar os arquivos module.conf que estão em /usr/local/sagu2_RC5/modules/NOME_MODULO/etc

Permissões
----------
É necessário dar permissão para o usuário do Apache (geralmente "nobody") para duas pastas de upload utilizadas pelo Sagu2 e nos diretórios de log e base de dados do sqlite:
 # chown -R nobody /usr/local/sagu2_RC5/modules/basic/upload
 # chown -R nobody /usr/local/sagu2_RC5/modules/basic/html/images/upload
 # chown -R nobody /usr/local/sagu2_RC5/modules/admin/sql
 # chown -R nobody /usr/local/sagu2_RC5/var/log

FIREFOX
-------
Na URL digitar about:config
Procurar por dom.max_script_run_time e definit para 20 ou mais

Xvfb e OpenOffice.org
---------------------
Primeiro deve ser instalado o OpenOffice2 no servidor. O Xvfb é um servidor X que pode rodar em máquinas que não tenham display ou mesmo não tenham hardware para display. Como o OpenOffice2 pode converter documentos em arquivos PDF, utilizamos o Xvfb para emular o X para rodar essas rotinas de conversão do OpenOffice2. Depois de instalado o OpenOffice2, é necessário criar o diretório do usuário para o OpenOffice2 ler as configurações padrão. Esse diretório é criado automaticamente quando inicializamos o OpenOffice2 pela primeira vez, como não faremos isso, podemos descompactar o arquivo tools/openoffice-config.org2.tar.gz no diretório temporário. Assumiremos que o diretório temporário é o /tmp/
Descompactar o arquivo:
   # cd /tmp/
   # tar -zxvf /usr/local/sagu2_RC5/tools/openoffice-config.org2.tar.gz
   # chown nobody:nogroup /tmp/.openoffice.org2 -Rf
Ainda deveremos editar o arquivo de configuração de impressoras do openOffice.org2 para adicionar as linhas abaixo no final do arquivo:
   # vim /opt/openoffice.org2.0/share/psprint/psprint.conf
   > ;geracao de pdf(agata+openoffice)
   > [Conversor de PDF]
   > Printer=SGENPRT/PDF
   > DefaultPrinter=0
   > Location=
   > Comment=
   > Command=/usr/bin/gs -q -dNOPAUSE -sDEVICE=pdfwrite -sOutputFile="(OUTFILE)" -
   > Features=pdf=/tmp/
   > Copies=1
   > Scale=100
   > Orientation=Portrait
   > PSLevel=0
   > ColorDevice=0
   > ColorDepth=24
   > MarginAdjust=0,0,0,0
   > PerformFontSubstitution=true
   > SubstFont_Arial=Helvetica
   > SubstFont_Times New Roman=Times
   > SubstFont_Cumberland=Courier
   > SubstFont_Timmons=Times
   > SubstFont_Helmet=Helvetica
   > SubstFont_Thorndale=Times
   > SubstFont_Albany=Helvetica
   > SubstFont_Courier New=Courier
Depois disso, deveremos instalar o Xvfb. Após sua instalação, basta criar o arquivo /tmp/X10.host com o conteúdo:
   > localhost
   # echo 'localhost' > /tmp/X10.host

AGATA
-----
Editar o arquivo agata.ini e definir os parâmetros abaixo:
   > ShowMessage     = 0
   > OpenofficeToPdf = export HOME=/tmp; /opt/openoffice.org2.0/program/soffice -display :10 -pt PDF
   > 
O caminho do openOffice pode mudar conforme a instalação do mesmo

INICIALIZAÇÃO:
==============
 
Apache 2.0.59 
-------------
 # /usr/local/httpd/bin/apachectl start

PostgreSQL 8.1.5
----------------
 # su postgres -c '/usr/local/pgsql/bin/postgres -i -D /usr/local/pgsql/data' 

Xvfb
----
No slackware, sem X, é necessário instalar os pacotes x11-fonts, X11, gimp-print antes de inicializar o Xvfb. 

 # /usr/bin/Xvfb :10 -auth /tmp/X10.host &
 - Adicionar este em um arquivo /etc/rc.d/rc.xvfb e colocar este no rc.local com permissões de execução para inicializar juntamente com o sistema.


ACESSO:
=======
O acesso ao sistema pode ser feito com o usuário e e senha sagu2.

SUMÁRIO:
========
 O '#' é o caractere que indica o prompt de comandos do linux.
 O '$' é o carcatere que indica o prompt de comandos do psql, do PostgreSQL.
 O '>' é o caractere que indica que a linha deverá ser inserida ou modificada, caso já exista, no arquivo.
 Obs: Utilizar o usuário root em todo processo de instalação, configuração e inicialização dos programas.
